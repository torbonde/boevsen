{"version":3,"sources":["C:/projects/fulma-demo/boevsen/webpack/bootstrap","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Util.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Types.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Reflection.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Option.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Int32.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Long.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Seq.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Date.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/String.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Map.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Set.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Array.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/List.js","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Common.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Elements/Form/Field.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Elements/Button.fs","C:/projects/fulma-demo/boevsen/src/Question/Dispatcher/View.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Elements/Image.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Elements/Form/Control.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Components/Navbar.fs","C:/projects/fulma-demo/boevsen/.fable/Fable.Elmish.Browser.3.0.0/prelude.fs","C:/projects/fulma-demo/boevsen/.fable/Fable.Elmish.Browser.3.0.0/parser.fs","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/AsyncBuilder.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Async.js","C:/projects/fulma-demo/boevsen/src/Question/Index/View.fs","C:/projects/fulma-demo/boevsen/.fable/Fable.Elmish.3.0.0/program.fs","C:/projects/fulma-demo/boevsen/.fable/Fable.Elmish.Browser.3.0.0/navigation.fs","C:/projects/fulma-demo/boevsen/src/Global/Router.fs","C:/projects/fulma-demo/boevsen/.fable/Thoth.Json.3.0.0/Types.fs","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/BigInt/n.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/lib/big.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/Decimal.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/BigInt/z.js","C:/projects/fulma-demo/boevsen/.fable/fable-library.2.2.0/BigInt.js","C:/projects/fulma-demo/boevsen/.fable/Thoth.Json.3.0.0/Decode.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Layouts/Section.fs","C:/projects/fulma-demo/boevsen/src/Global/Database.fs","C:/projects/fulma-demo/boevsen/src/Question/Index/State.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Layouts/Column.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Elements/Form/Textarea.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Layouts/Level.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Elements/Form/Help.fs","C:/projects/fulma-demo/boevsen/src/Question/Show/Answer/View.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Layouts/Hero.fs","C:/projects/fulma-demo/boevsen/.fable/Fulma.2.0.0/Elements/Content.fs","C:/projects/fulma-demo/boevsen/.fable/Fable.Elmish.React.3.0.1/common.fs","C:/projects/fulma-demo/boevsen/src/Question/Create/View.fs","C:/projects/fulma-demo/boevsen/.fable/Fable.Promise.2.0.0/Promise.fs","C:/projects/fulma-demo/boevsen/src/Question/Show/Answer/State.fs","C:/projects/fulma-demo/boevsen/src/Question/Show/State.fs","C:/projects/fulma-demo/boevsen/src/Question/Dispatcher/State.fs","C:/projects/fulma-demo/boevsen/src/Question/Create/Types.fs","C:/projects/fulma-demo/boevsen/src/State.fs","C:/projects/fulma-demo/boevsen/src/App.fs"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","isDisposable","x","Dispose","padWithZeros","str","toString","dateOffset","date","date1","offset","kind","getTimezoneOffset","int32ToString","radix","ObjectRef","_classCallCheck","this","_createClass","idMap","has","set","count","stringHash","h","len","charCodeAt","numberHash","combineHashCodes","hashes","reduce","h1","h2","structuralHash","_typeof","GetHashCode","isArray","ar","Array","String","ArrayBuffer","isView","equalArraysWith","y","eq","equalArrays","equals","Equals","Date","compareDates","xtime","ytime","getTime","comparePrimitives","compareArraysWith","comp","compareArrays","compare","CompareTo","min","comparer","max","WeakMap","CaseRules","None","LowerFirst","changeCase","caseRule","charAt","toLowerCase","createObj","fields","fail","kvPair","Error","definedCaseRule","arguments","undefined","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","iterator","next","done","toJSON","err","return","col","size","uncurry","arity","f","a1","a2","a3","a4","a5","a6","a7","a8","curry","partialApply","args","concat","sameType","getPrototypeOf","constructor","declare","cons","superClass","subClass","writable","configurable","inherits","SystemObject","compareList","self","other","tail","res","head","List","Union","tag","_len","_key","recordToJson","record","getFieldNames","keys","recordEquals","thisNames","recordCompare","Record","_this","map","k","join","id","identityHash","from","cur","tmp","_this2","_this3","contents","Exception","msg","stack","message","getFSharpExceptionFieldNames","filter","FSharpException","_this4","fieldNames","_this5","arg1","arg2","arg3","TypeInfo","fullname","generics","cases","Reflection_classCallCheck","fullName","getGenerics","t1","t2","gen","endsWith","assertUnion","getCaseName","Some","Option_classCallCheck","some","acceptNull","defaultArg","arg","defaultValue","field","Result","NumberStyles","getRange","unsigned","bitsize","isValid","style","exec","replace","_res","_slicedToArray","prefix","digits","getInvalidDigits","AllowHexSpecifier","getRadix","test","regexMatch","_regexMatch","sign","validResponse","tryParse","v","Number","parseInt","isNaN","_getRange2","umin","umax","_getRange4","parse","_a","op_UnaryNegation_Int32","wasm","WebAssembly","Instance","Module","Uint8Array","e","Long","low","high","isLong","obj","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","op_UnaryNegation","TWO_PWR_32_DBL","fromInteger","xh","lowBits","highBits","pow_dbl","Math","pow","fromString","RangeError","indexOf","substring","radixToPower","op_Addition","op_Multiply","fromValue","val","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","toInt","$this","toNumber","isZero","isNegative","radixLong","div","op_Division","rem1","op_Subtraction","rem","remDiv","isOdd","lessThan","greaterThan","greaterThanOrEqual","thisNeg","otherNeg","op_LogicalNot","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","multiplier","mul","get_high","b00","divisor","approx","div_u","div_s","toUnsigned","numBits","op_RightShiftUnsigned","op_LeftShift","op_RightShift","floor","log2","ceil","log","LN2","delta","approxRes","approxRem","op_Modulus","rem_u","rem_s","op_BitwiseAnd","fromBytes","bytes","le","fromBytesLE","fromBytesBE","Enumerator","iter","Seq_classCallCheck","current","getEnumerator","toIterator","en","MoveNext","Current","append","xs","ys","delay","firstDone","iters","unfold","output","innerIter","hasFinished","collect","_defineProperty","fold","acc","iterate","_","rangeNumber","first","step","last","singleton","skip","take","truncate","fst","offsetRegex","dateOffsetToString","isMinus","minutes","abs","dateToHalfUTCString","half","toISOString","dateToStringWithCustomFormat","format","utc","match","rep","getUTCFullYear","getFullYear","getUTCMonth","getMonth","getUTCDate","getDate","getUTCHours","getHours","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","getUTCMilliseconds","getMilliseconds","dateToStringWithOffset","dateWithOffset","dateToStringWithKind","toUTCString","toLocaleString","toLocaleDateString","toLocaleTimeString","printOffset","dateToISOString","DateTime","minValue","parseRaw","baseDate","timeInSeconds","timeParts","split","parseFloat","toUpperCase","offsetParts","substr","offsetInMinutes","detectUTC","now","fsFormatRegExp","toHex","longToString","longFromBytes","hi","lo","toBytesLE","toBytesBE","printf","input","cont","createPrinter","strCopy","_len2","_key2","_arr","_i","formatOnce","toConsole","console","toText","toFail","str2","flags","pad","precision","toFixed","toPrecision","toExponential","plusPrefix","ch","padLeft","isNullOrWhiteSpace","delimiter","_len4","_key4","isRight","MapTree$00602","MapTreeModule$$$empty","MapTreeModule$$$height","_arg1","MapTreeModule$$$mk","l$$1","r$$1","matchValue","hl","hr","MapTreeModule$$$rebalance","k$$1","v$$1","t1h","t2h","t2v","t2r","t2l","t2k","t2lv","t2lr","t2ll","t2lk","t1v","t1r","t1l","t1k","t1rv","t1rr","t1rl","t1rk","MapTreeModule$$$add","k$$2","v$$2","m$$3","k2","Compare","v2","r$$2","l$$2","k2$$1","h$$1","c$$1","MapTreeModule$$$ofSeq","comparer$$16","c$$9","ie","comparer$$14","acc$$10","patternInput$$2","$acc$$10$$77","$comparer$$14$$76","$e$$78","MapTreeModule$$$mkFromEnumerator","MapTreeModule$002EMapIterator$00602","started","MapTreeModule$$$collapseLHS","$stack$$81","MapTreeModule$$$mkIterator","s$$5","MapTreeModule$$$current","i$$2","matchValue$$4","MapTreeModule$$$alreadyFinished","MapTreeModule$$$notStarted","MapTreeModule$002EmkIEnumerator$0027$00602","s$$6","MapTreeModule$$$mkIEnumerator","s$$7","MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C","i$$3","matchValue$$5","MapTreeModule$$$moveNext","Reset","FSharpMap","comparer$$17","tree","FSharpMap$$$$002Ector$$58ADD115","FSharpMap$$get_Tree","__$$5","ofSeq","l$$23","comparer$$19","Map_toConsumableArray","map$$1","kv","combineHash","x$$16","y$$3","res$$3","e$$1","activePatternResult3090","that","m2","res$$4","finished","e1","e2","matchValue$$7","kvp1","kvp2","c$$10","SetTree$00601","SetTreeModule$$$SetOne","SetTreeModule$$$SetNode","SetTreeModule$002ESetIterator$00601","SetTreeModule$$$collapseLHS","$stack$$49","SetTreeModule$$$mkIterator","s$$13","SetTreeModule$$$current","matchValue$$6","SetTreeModule$$$alreadyFinished","SetTreeModule$$$notStarted","SetTreeModule$002EmkIEnumerator$00601","s$$14","SetTreeModule$$$mkIEnumerator","s$$15","SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56","SetTreeModule$$$compare","comparer$$18","s1","s2","matchValue$$9","l1","l2","SetTreeModule$$$compareStacks","$target$$52","t1$$6","t2$$6","n1k","n2k","t1$$7","t2$$7","n1k$$1","n2k$$1","n2r","t1$$8","t2$$8","emp","n1k$$2","n1r","n2k$$2","t1$$9","t2$$9","n1k$$3","n1r$$1","n2k$$3","n2r$$1","t1$$10","t2$$10","n1k$$4","t1$$11","n1k$$5","n1l","n1r$$2","t1$$12","n2k$$4","t2$$11","n2k$$5","n2l","n2r$$2","t2$$12","matchValue$$8","c$$7","c$$8","$l2$$59","$l2$$61","i$$1","SetTreeModule$$$moveNext","FSharpSet","comparer$$22","FSharpSet$$get_Comparer","__$$4","FSharpSet$$get_Tree","fill","target","targetIndex","f$$1","source$$1","cons$$2","len$$1","target$$2","i$$4","x$$1","initialize","count$$8","initializer","cons$$15","result$$6","i$$15","folder$$4","state$$6","array$$74","ofList","source$$9","cons$$32","tryLast","_arg1$$4","foldIndexed","state","xs$$7","$arg$$7","$arg$$8","$arg$$9","$arg$$10","_arg1$$5","xs$$6","foldIndexedAux","$arg$$14","$arg$$15","$arg$$16","f$$2","state$$1","xs$$8","reverse","xs$$9","acc$$1","x$$6","xs$$12","fold$$1","acc$$3","x$$9","xs$$27","acc$$9","_arg1$$7","xs$$28","ys$$10","x$$15","f$$15","xs$$29","collect$$1","f$$16","xs$$31","acc$$11","mapIndexed","f$$17","xs$$33","acc$$12","x$$17","f$$24","xs$$46","unitVar0","x$$24","ofArray","xs$$50","res$$1","i$$9","f$$42","xs$$71","acc$$17","x$$37","contains","list","xs$$76","rest","loop$$1","Set_toConsumableArray","x$$22","y$$4","that$$1","screen","level","getCaseTag","options","List_fold","option","x$$4","x$$5","ofText","ToString","warn","display","toDisplayOnlyClass","ofInvisibleOnly","ofHiddenOnly","ofBackground","parser","baseClass","baseProps","Common$002EGenericOptions","AddClass","AddProps","prop","Props","Classes","props","List_append","cl","case","modifiers","parseModifiers","el","children","HTMLAttr","Common_toConsumableArray","AddModifiers","element","Common$002EGenericOptions$$ToReactElement$$Z6D3CD4B7","Common$002EGenericOptions$$$Parse$$9AE2F7C","Common$002EGenericOptions$$AddCaseName$$4E60E31B","Common$002EGenericOptions$$AddClass$$Z721C83C5","Common$002EGenericOptions$$AddProps$$416C4D0B","Common$002EGenericOptions$$AddModifiers$$5BB435D5","fieldView","react","Field_toConsumableArray","$target$$4","Color$$$ofColor","isDisabled","Common$002EGenericOptions$$AddProp$$7BFEDA81","cb","DOMAttr","btnView","Button_toConsumableArray","std","booleans","complete","opt","tupledArg","faOptions","Fa$002EIconOptions","Icon","Size","Pull","HaveSpin","HavePulse","Rotation","Flip","IsInverse","FixedWidth","IsLi","StackSize","CustomClass","Border","faIcon","customClass","ofSize","baseElement","opts","classes","List_ofArray","displayIcon","FontAwesome_toConsumableArray","toIconOptions","Icon_toConsumableArray","controlView","Control_toConsumableArray","item","Navbar_toConsumableArray","Common$$$parseOptions","visited","unvisited","State$00601","tipe","stringToSomething","inner","nextValue","mkState","custom","$arg$$1","Option_Result","subValue","List_map","( arg10@ )","url","states","parseHelp","$target$$16","segments","splitUrl","segment","comparer$$12","array1$$6","array2$$6","i$$43","result$$13","length1","length2","compareWith","a","b","$target$$1","Option_value","prelude_tuple","ofFunc","decodeURI","querystring","Seq_map","toKeyValuePair","CancellationToken","cancelled","AsyncBuilder_classCallCheck","_id","_cancelled","_listeners","Map","AsyncBuilder_createClass","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","listener","AsyncBuilder_slicedToArray","delete","$","addListener","removeListener","OperationCanceledError","_Error","_getPrototypeOf","setPrototypeOf","_assertThisInitialized","_inherits","_wrapNativeSuper","protectedCont","ctx","cancelToken","isCancelled","onCancel","trampoline","incrementAndCheck","hijack","onError","protectedBind","computation","binder","onSuccess","ex","protectedReturn","AsyncBuilder","computation1","computation2","Bind","generator","sequence","body","While","Delay","compensation","catchHandler","ex2","resource","TryFinally","guard","Return","dispatch","cmd","List_iterate","sub","g","$arg$$2","cmds","lists","state$$3","xs$$14","acc$$4","x$$10","task","ofSuccess","ofError","then","$arg$$11","catch","$arg$$13","text","error","RingState$00601","__","wix","rix","items","rix'","ix","source$$8","wix'","Seq_collect","setState","program","Program$00604","init","update","subscribe","view","syncDispatch","patternInput","rb","RingBuffer$00601$$$$002Ector$$Z524259A4","reentered","RingBuffer$00601$$Push$$2B595","nextMsg","Cmd$$$exec","RingBuffer$00601$$Pop","Cmd$$$none","lastLocation","onChangeRef","location","href","Navigable$00601","addEventListener","arg10","urlUpdate","onLocationChange","mapUpdate","mapView","mapSetState","mapSubscribe","Cmd$$$map","arg0","userUpdate","model","userView","userSetState","userSubscribe","Cmd$$$batch","userInit","unitVar1","page","questionPage","parsers","parser_map","Page","QuestionPage","List_collect","parser_s","i32","parser_top","route","toHash","newUrl","history","replaceState","pushState","ev","CustomEvent","dispatchEvent","( .ctor )","BigNat","bound","BigNatModule$002EFFT$$$pow32","BigNatModule$002EFFT$$$maxTwoPower","Int32Array","BigNatModule$$$bound","n$$10","BigNatModule$$$coeff","n$$12","i$$5","BigNatModule$$$coeff64","n$$13","i$$6","BigNatModule$$$setCoeff","n$$14","i$$7","v$$4","BigNatModule$$$pow64","x$$23","n$$15","$n$$15$$11","BigNatModule$$$pow32","n$$16","BigNatModule$$$baseBits","BigNatModule$$$baseN","BigNatModule$$$baseNi64","BigNatModule$$$baseMaski64","BigNatModule$$$createN","b$$4","BigNatModule$$$normN","n$$18","bound$$1","na","findLeastBound","BigNatModule$$$boundInt","BigNatModule$$$boundInt64","BigNatModule$$$embed","x$$28","x$$29","r$$3","i$$10","BigNatModule$$$one","BigNatModule$$$zero","BigNatModule$$$degree","n$$24","BigNatModule$$$isZero","p$$4","BigNatModule$$$equal","p$$7","q$$4","pa","qa","i$$22","check","BigNatModule$$$compare","p$$9","q$$6","pa$$2","qa$$2","i$$24","check$$2","BigNatModule$$$lt","p$$10","q$$7","BigNatModule$$$mulSchoolBookCarry","r$$12","k$$4","rak$$1","$k$$4$$43","BigNatModule$$$mulSchoolBookOneSmall","p$$16","q$$12","bp","r$$13","q$$13","i$$28","rak$$2","BigNatModule$$$mulSchoolBook","p$$18","q$$15","p$$15","q$$11","r$$11","rak","pSmall","qSmall","p$$17","q$$14","r$$14","ra","pa$$3","qa$$3","i$$29","pai$$1","k$$5","j$$1","qaj","rak$$3","BigNatModule$$$mulSchoolBookNeitherSmall","BigNatModule$002Eencoding","arg4","arg5","arg6","arg7","bigL","twoToBigL","bigK","bigN","splits","BigNatModule$$$mkEncoding","k$$6","bigK$$2","i$$30","BigNatModule$$$table","i$$32","i$$33","i$$34","BigNatModule$$$mul","p$$20","q$$17","BigNatModule$$$scaleSubInPlace","x$$57","a$$5","n$$30","xres","patternInput$$3","j$$4","z$$7","zLo","zHi","BigNatModule$$$scaleAddInPlace","x$$62","f$$3","a$$8","n$$32","xres$$1","patternInput$$4","patternInput$$5","f$$4","j$$5","z$$8","zLo$$1","zHi$$1","BigNatModule$$$removeFactor","x$$67","a$$11","n$$34","patternInput$$6","f$$6","p$$8","pn","q$$5","qn","patternInput$$7","pa$$1","qa$$1","i$$23","pai","qai","check$$1","BigNatModule$$$divmod","b$$7","a$$12","x$$68","x$$27","array$$29","d$$6","p$$21","m$$2","n$$35","f$$7","BigNatModule$$$ofInt32","n$$41","BigNatModule$$$ofInt64","n$$42","x$$30","x$$31","r$$4","i$$11","BigNatModule$$$embed64","BigNatModule$$$toString","n$$45","degn","prior$$2","prior","k$$11","ten2k","$k$$11$$64","$ten2k$$65","digits$$4","isLeading","n$$46","_arg1$$3","ten2k$$1","prior$$1","patternInput$$13","digits$$2","n$$47","n$$19","i$$12","BigNatModule$$$eval32","n_toConsumableArray","BigNatModule$$$isSmall","n$$48","BigNatModule$$$getSmall","n$$49","P","cmp","DP","RM","MAX_DP","NE","PE","NAME","INVALID","INVALID_DP","INVALID_RM","UNDEFINED","NUMERIC","nl","search","round","Big","dp","rm","more","xc","unshift","pop","stringify","z","isneg","yc","bl","bt","ri","bz","ai","al","rl","q","qc","qi","gt","gte","lt","lte","minus","xlty","plus","xe","ye","mod","ygtx","times","add","one","sqrt","sd","valueOf","_Big_","version","Decimal","BigInteger","signInt","BigInteger$$$$002Ector$$Z2BE94A1","BigInteger$$$nat$$Z67CCE57D","n$$1","BigNatModule$0024$0024$0024isSmall","BigNatModule$0024$0024$0024getSmall","smallLim","smallPosTab","BigInteger$$get_SignInt","BigInteger$$get_V","x$$2","BigInteger$$$op_Equality$$56F059C0","x$$3","BigNatModule$0024$0024$0024equal","BigNatModule$0024$0024$0024isZero","BigInteger$$$op_LessThan$$56F059C0","y$$2","matchValue$$1","BigNatModule$0024$0024$0024lt","BigInteger$$$$002Ector$$Z524259A4","n$$6","BigNatModule$0024$0024$0024ofInt32","BigNatModule$0024$0024$0024ofInt64","BigInteger$$$get_One","BigInteger$$$get_Two","two","BigInteger$$$get_Zero","zero","BigNatModule$0024$0024$0024toString","n$$17","res$$2","i$$8","BigNatModule$0024$0024$0024hash","obj$$1","n$$5","nn","BigInteger$0024$0024$0024get_Zero","BigInteger$0024$0024$0024get_One","BigInteger$0024$0024$0024get_Two","newLine","JSON","path","reason","genericMsg","fieldName","messages","Decode_toConsumableArray","decoder","errorToString","success","SyntaxError","ErrorReason","trim","_err","Date_tryParse","er","currentPath","List_tryLast","tokens","arr","Array_fold","errors","unwrapWith","$this$$3","fieldValue","isUndefined","firstPath","firstValue","badPathError","curValue","decodeMaybeNull","optional","$target$$130","v$$6","builder","getters","List_ofSeq","List_length","required","values","forLoopVar","space","Date_toString","user","Encode_object","Id","Firstname","Surname","Avatar","answer","datetime","CreatedAt","AuthorId","Content","Score","Question","Required","Field","int$","Decode_string","Decode_array","Answer","question","Title","Description","Array_map","Encoder","Answers","DatabaseData","Decoder","User","Encode_toString","databaseData","Version","Questions","Users","Decode_fromString","dbInstance","main","LocalStorage","adapterOptions","Lowdb","userId","find","localStorage","removeItem","defaults","Date_parse","write","Show_Types_Model","Image_toConsumableArray","List_filter","cls","title","Heading_toConsumableArray","Heading_Option","Container_toConsumableArray","PageLoader_toConsumableArray","Media_toConsumableArray","Level_toConsumableArray","Help_toConsumableArray","msg$$1","List_contains","$x$$1","$y$$2","Screen$$$ToString$$2D2414B4","$x$$3","$y$$4","Columns_toConsumableArray","className","suffix","width","Column_toConsumableArray","Section_toConsumableArray","isLoading","pageLoader","PageLoader_Option","media","left","Image_image","Image_Option","src","Author","Media_content","Heading_p","Level_level","Level_left","Level_right","Level_item","help","disabled","valueOrDefault","Prop","placeholder","ref","Textarea_toConsumableArray","pageNotFound","Hero_Option","Color$002EIColor","container","Container_Option","Modifier$002EIModifier","Screen","TextAlignment$002EOption","Hero_toConsumableArray","converter","showdown","Content_toConsumableArray","Content_content","Content_Option","DangerousHtml","makeHtml","answers","contentFromMarkdown","List_mapIndexed","index","Show_Types_Msg","Common$002EGenericOption","Button_button","Button_Option","IsLoading","Size$002EISize","Types_Msg","_arg2","score","icon","Fa$002EIconOption","iterationCount","View_toConsumableArray","Icon_icon","Fa$$$i","Help_Option","htmlFor","Label_toConsumableArray","parseOptions","type'","typ","ofType","CurrentPage","ShowModel","$target$$7","extractedModel","CreateModel","IndexModel","loaderView","questions","section","columns","column","Column_Option","Column_ISize","h3","Button_a","Columns_Option","questionsView","root","Field_div","Control_div","Control_Option","IsWaitingReply","Textarea_textarea","Textarea_Option","Reply","ctrlKey","Level_Item$002EOption","Show_View_root","Dispatcher_Types_Msg","Label_label","IsWaitingServer","Input_Option","IInputType","Create_Types_Msg","TitleError","ContentError","Create_View_root","$arg$$3","f1","f2","Promise","reject","resolve","PromiseBuilder$$$$002Ector","questionId","author","Types_Model","QuestionId","Cmd$002EOfPromise$$$either","answerId","PromiseBuilder$$Run$$212F1D4B","( builder@ )","PromiseBuilder$$Delay$$62FBFDE1","Database$$$get_Questions","newScore","assign","VoteUpRes","$arg$$4","Database$$$GetUserById$$Z524259A4","Types_QuestionInfo","assiocateAuthor","setTimeout","answersModel","answersCmd","idx","State_init","content","nextId","CreateAnswerRes","rank","f$$26","State_update","x$$26","getDetails","GetDetailsRes","Create_Types_Model","requiredField","description","CreateQuestionRes","Router_newUrl","source$$10","len$$20","target$$7","i$$51","Array_toList","QuestionInfo","sortBy","GetQuestionsRes","inputRecord","Dispatcher_Types_Model","Model$$$Empty$$Z524259A4","Cmd$002EOfFunc$$$result","Show_State_init","Model","Msg","getQuestions","Index_State_update","Show_State_update","Create_State_update","modifyUrl","src_Types_Model","Session","QuestionDispatcher","IsBurgerOpen","Dispatcher_State_init","src_Types_Msg","equal","Components$002ELazyView$00601","LazyProps$00601","lazyView2With","placeholderId","ProgramModule$$$withSetState","react_dom","ProgramModule$$$view","document","getElementById","nextProps","_nextState","render","navbarEnd","Item$$$div","Option","Control_p","end","Item$$$a","Item$002EOption","modifyLocation","link","_arg3","dropdown","start","Dispatcher_View_root","Restore","Database$$$Init","hash","parseParams","parseHash","pageParser","State_urlUpdate","Database$$$Restore","Dispatcher_State_update","isBurgerOpen","Navbar_Option","Fa$002EISize","brand","Menu$002EOption","navbarStart","renderPage","prelude_onError","toNavigableWith","runWith","withReactSynchronousUsing","Common$$$lazyView2With"],"mappings":"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","file":"app.07cfcacdac6e6f24c62a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([187,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// tslint:disable:ban-types\n// Object.assign flattens getters and setters\n// See https://stackoverflow.com/questions/37054596/js-es5-how-to-assign-objects-with-setters-and-getters\nexport function extend(target, ...sources) {\n    for (const source of sources) {\n        for (const key of Object.keys(source)) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        }\n    }\n    return target;\n}\nexport function isDisposable(x) {\n    return x != null && typeof x.Dispose === \"function\";\n}\nexport class Comparer {\n    constructor(f) {\n        this.Compare = f || compare;\n    }\n}\nexport function comparerFromEqualityComparer(comparer) {\n    // Sometimes IEqualityComparer also implements IComparer\n    if (typeof comparer.Compare === \"function\") {\n        return new Comparer(comparer.Compare);\n    }\n    else {\n        return new Comparer((x, y) => {\n            const xhash = comparer.GetHashCode(x);\n            const yhash = comparer.GetHashCode(y);\n            if (xhash === yhash) {\n                return comparer.Equals(x, y) ? 0 : -1;\n            }\n            else {\n                return xhash < yhash ? -1 : 1;\n            }\n        });\n    }\n}\n// TODO: Move these three methods to Map and Set modules\nexport function containsValue(v, map) {\n    for (const kv of map) {\n        if (equals(v, kv[1])) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tryGetValue(map, key, defaultValue) {\n    return map.has(key) ? [true, map.get(key)] : [false, defaultValue];\n}\nexport function addToSet(v, set) {\n    if (set.has(v)) {\n        return false;\n    }\n    set.add(v);\n    return true;\n}\nexport function assertEqual(actual, expected, msg) {\n    if (!equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport function assertNotEqual(actual, expected, msg) {\n    if (equals(actual, expected)) {\n        throw Object.assign(new Error(msg || `Expected: ${expected} - Actual: ${actual}`), {\n            actual,\n            expected,\n        });\n    }\n}\nexport class Lazy {\n    constructor(factory) {\n        this.factory = factory;\n        this.isValueCreated = false;\n    }\n    get Value() {\n        if (!this.isValueCreated) {\n            this.createdValue = this.factory();\n            this.isValueCreated = true;\n        }\n        return this.createdValue;\n    }\n    get IsValueCreated() {\n        return this.isValueCreated;\n    }\n}\nexport function lazyFromValue(v) {\n    return new Lazy(() => v);\n}\nexport function padWithZeros(i, length) {\n    let str = i.toString(10);\n    while (str.length < length) {\n        str = \"0\" + str;\n    }\n    return str;\n}\nexport function padLeftAndRightWithZeros(i, lengthLeft, lengthRight) {\n    let str = i.toString(10);\n    while (str.length < lengthLeft) {\n        str = \"0\" + str;\n    }\n    while (str.length < lengthRight) {\n        str = str + \"0\";\n    }\n    return str;\n}\nexport function dateOffset(date) {\n    const date1 = date;\n    return typeof date1.offset === \"number\"\n        ? date1.offset\n        : (date.kind === 1 /* UTC */\n            ? 0 : date.getTimezoneOffset() * -60000);\n}\nexport function int16ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport function int32ToString(i, radix) {\n    i = i < 0 && radix != null && radix !== 10 ? 0xFFFFFFFF + i + 1 : i;\n    return i.toString(radix);\n}\nexport class ObjectRef {\n    static id(o) {\n        if (!ObjectRef.idMap.has(o)) {\n            ObjectRef.idMap.set(o, ++ObjectRef.count);\n        }\n        return ObjectRef.idMap.get(o);\n    }\n}\nObjectRef.idMap = new WeakMap();\nObjectRef.count = 0;\nexport function stringHash(s) {\n    let i = 0;\n    let h = 5381;\n    const len = s.length;\n    while (i < len) {\n        h = (h * 33) ^ s.charCodeAt(i++);\n    }\n    return h;\n}\nexport function numberHash(x) {\n    return x * 2654435761 | 0;\n}\n// From https://stackoverflow.com/a/37449594\nexport function combineHashCodes(hashes) {\n    if (hashes.length === 0) {\n        return 0;\n    }\n    return hashes.reduce((h1, h2) => {\n        return ((h1 << 5) + h1) ^ h2;\n    });\n}\nexport function identityHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default:\n            return numberHash(ObjectRef.id(x));\n    }\n}\nexport function structuralHash(x) {\n    if (x == null) {\n        return 0;\n    }\n    switch (typeof x) {\n        case \"boolean\":\n            return x ? 1 : 0;\n        case \"number\":\n            return numberHash(x);\n        case \"string\":\n            return stringHash(x);\n        default: {\n            if (typeof x.GetHashCode === \"function\") {\n                return x.GetHashCode();\n            }\n            else if (isArray(x)) {\n                const ar = x;\n                const len = ar.length;\n                const hashes = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    hashes[i] = structuralHash(ar[i]);\n                }\n                return combineHashCodes(hashes);\n            }\n            else {\n                return stringHash(String(x));\n            }\n        }\n    }\n}\nexport function isArray(x) {\n    return Array.isArray(x) || ArrayBuffer.isView(x);\n}\nexport function isIterable(x) {\n    return x != null && typeof x === \"object\" && Symbol.iterator in x;\n}\nexport function equalArraysWith(x, y, eq) {\n    if (x == null) {\n        return y == null;\n    }\n    if (y == null) {\n        return false;\n    }\n    if (x.length !== y.length) {\n        return false;\n    }\n    for (let i = 0; i < x.length; i++) {\n        if (!eq(x[i], y[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function equalArrays(x, y) {\n    return equalArraysWith(x, y, equals);\n}\n// export function equalObjects(x: { [k: string]: any }, y: { [k: string]: any }): boolean {\n//   if (x == null) { return y == null; }\n//   if (y == null) { return false; }\n//   const xKeys = Object.keys(x);\n//   const yKeys = Object.keys(y);\n//   if (xKeys.length !== yKeys.length) {\n//     return false;\n//   }\n//   xKeys.sort();\n//   yKeys.sort();\n//   for (let i = 0; i < xKeys.length; i++) {\n//     if (xKeys[i] !== yKeys[i] || !equals(x[xKeys[i]], y[yKeys[i]])) {\n//       return false;\n//     }\n//   }\n//   return true;\n// }\nexport function equals(x, y) {\n    if (x === y) {\n        return true;\n    }\n    else if (x == null) {\n        return y == null;\n    }\n    else if (y == null) {\n        return false;\n    }\n    else if (typeof x !== \"object\") {\n        return false;\n    }\n    else if (typeof x.Equals === \"function\") {\n        return x.Equals(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && equalArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y) === 0;\n    }\n    else {\n        return false;\n    }\n}\nexport function compareDates(x, y) {\n    let xtime;\n    let ytime;\n    // DateTimeOffset and DateTime deals with equality differently.\n    if (\"offset\" in x && \"offset\" in y) {\n        xtime = x.getTime();\n        ytime = y.getTime();\n    }\n    else {\n        xtime = x.getTime() + dateOffset(x);\n        ytime = y.getTime() + dateOffset(y);\n    }\n    return xtime === ytime ? 0 : (xtime < ytime ? -1 : 1);\n}\nexport function comparePrimitives(x, y) {\n    return x === y ? 0 : (x < y ? -1 : 1);\n}\nexport function compareArraysWith(x, y, comp) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    if (x.length !== y.length) {\n        return x.length < y.length ? -1 : 1;\n    }\n    for (let i = 0, j = 0; i < x.length; i++) {\n        j = comp(x[i], y[i]);\n        if (j !== 0) {\n            return j;\n        }\n    }\n    return 0;\n}\nexport function compareArrays(x, y) {\n    return compareArraysWith(x, y, compare);\n}\nexport function compareObjects(x, y) {\n    if (x == null) {\n        return y == null ? 0 : 1;\n    }\n    if (y == null) {\n        return -1;\n    }\n    const xKeys = Object.keys(x);\n    const yKeys = Object.keys(y);\n    if (xKeys.length !== yKeys.length) {\n        return xKeys.length < yKeys.length ? -1 : 1;\n    }\n    xKeys.sort();\n    yKeys.sort();\n    for (let i = 0, j = 0; i < xKeys.length; i++) {\n        const key = xKeys[i];\n        if (key !== yKeys[i]) {\n            return key < yKeys[i] ? -1 : 1;\n        }\n        else {\n            j = compare(x[key], y[key]);\n            if (j !== 0) {\n                return j;\n            }\n        }\n    }\n    return 0;\n}\nexport function compare(x, y) {\n    if (x === y) {\n        return 0;\n    }\n    else if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    else if (y == null) {\n        return 1;\n    }\n    else if (typeof x !== \"object\") {\n        return x < y ? -1 : 1;\n    }\n    else if (typeof x.CompareTo === \"function\") {\n        return x.CompareTo(y);\n    }\n    else if (isArray(x)) {\n        return isArray(y) && compareArrays(x, y);\n    }\n    else if (x instanceof Date) {\n        return (y instanceof Date) && compareDates(x, y);\n    }\n    else {\n        return 1;\n    }\n}\nexport function min(comparer, x, y) {\n    return comparer(x, y) < 0 ? x : y;\n}\nexport function max(comparer, x, y) {\n    return comparer(x, y) > 0 ? x : y;\n}\nexport function createAtom(value) {\n    let atom = value;\n    return (value) => {\n        if (value === void 0) {\n            return atom;\n        }\n        else {\n            atom = value;\n            return void 0;\n        }\n    };\n}\nconst CaseRules = {\n    None: 0,\n    LowerFirst: 1,\n};\nfunction changeCase(str, caseRule) {\n    switch (caseRule) {\n        case CaseRules.LowerFirst:\n            return str.charAt(0).toLowerCase() + str.slice(1);\n        case CaseRules.None:\n        default:\n            return str;\n    }\n}\nexport function createObj(fields, caseRule = CaseRules.None) {\n    function fail(kvPair) {\n        throw new Error(\"Cannot infer key and value of \" + String(kvPair));\n    }\n    const o = {};\n    const definedCaseRule = caseRule;\n    for (let kvPair of fields) {\n        let caseRule = CaseRules.None;\n        if (kvPair == null) {\n            fail(kvPair);\n        }\n        // Deflate unions and use the defined case rule\n        if (typeof kvPair.toJSON === \"function\") {\n            kvPair = kvPair.toJSON();\n            caseRule = definedCaseRule;\n        }\n        if (Array.isArray(kvPair)) {\n            switch (kvPair.length) {\n                case 0:\n                    fail(kvPair);\n                    break;\n                case 1:\n                    o[changeCase(kvPair[0], caseRule)] = true;\n                    break;\n                case 2:\n                    const value = kvPair[1];\n                    o[changeCase(kvPair[0], caseRule)] = value;\n                    break;\n                default:\n                    o[changeCase(kvPair[0], caseRule)] = kvPair.slice(1);\n            }\n        }\n        else if (typeof kvPair === \"string\") {\n            o[changeCase(kvPair, caseRule)] = true;\n        }\n        else {\n            fail(kvPair);\n        }\n    }\n    return o;\n}\nexport function jsOptions(mutator) {\n    const opts = {};\n    mutator(opts);\n    return opts;\n}\nexport function round(value, digits = 0) {\n    const m = Math.pow(10, digits);\n    const n = +(digits ? value * m : value).toFixed(8);\n    const i = Math.floor(n);\n    const f = n - i;\n    const e = 1e-8;\n    const r = (f > 0.5 - e && f < 0.5 + e) ? ((i % 2 === 0) ? i : i + 1) : Math.round(n);\n    return digits ? r / m : r;\n}\nexport function sign(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n}\nexport function randomNext(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\nexport function randomBytes(buffer) {\n    if (buffer == null) {\n        throw new Error(\"Buffer cannot be null\");\n    }\n    for (let i = 0; i < buffer.length; i += 6) {\n        // Pick random 48-bit number. Fill buffer in 2 24-bit chunks to avoid bitwise truncation.\n        let r = Math.floor(Math.random() * 281474976710656); // Low 24 bits = chunk 1.\n        const rhi = Math.floor(r / 16777216); // High 24 bits shifted via division = chunk 2.\n        for (let j = 0; j < 6 && i + j < buffer.length; j++) {\n            if (j === 3) {\n                r = rhi;\n            }\n            buffer[i + j] = r & 255;\n            r >>>= 8;\n        }\n    }\n}\nexport function unescapeDataString(s) {\n    // https://stackoverflow.com/a/4458580/524236\n    return decodeURIComponent((s).replace(/\\+/g, \"%20\"));\n}\nexport function escapeDataString(s) {\n    return encodeURIComponent(s).replace(/!/g, \"%21\")\n        .replace(/'/g, \"%27\")\n        .replace(/\\(/g, \"%28\")\n        .replace(/\\)/g, \"%29\")\n        .replace(/\\*/g, \"%2A\");\n}\nexport function escapeUriString(s) {\n    return encodeURI(s);\n}\n// ICollection.Clear and Count members can be called on Arrays\n// or Dictionaries so we need a runtime check (see #1120)\nexport function count(col) {\n    return isArray(col) ? col.length : col.size;\n}\nexport function clear(col) {\n    if (isArray(col)) {\n        col.splice(0);\n    }\n    else {\n        col.clear();\n    }\n}\nexport function uncurry(arity, f) {\n    // f may be a function option with None value\n    if (f == null) {\n        return null;\n    }\n    // return (...args: any[]) => {\n    //   // In some cases there may be more arguments applied than necessary\n    //   // (e.g. index when mapping an array), discard them\n    //   args = args.slice(0, arity);\n    //   let res = f;\n    //   while (args.length > 0) {\n    //       const curArgs = args.splice(0, res.length);\n    //       res = res.apply(null, curArgs);\n    //   }\n    //   return res;\n    // };\n    switch (arity) {\n        case 2:\n            return (a1, a2) => f(a1)(a2);\n        case 3:\n            return (a1, a2, a3) => f(a1)(a2)(a3);\n        case 4:\n            return (a1, a2, a3, a4) => f(a1)(a2)(a3)(a4);\n        case 5:\n            return (a1, a2, a3, a4, a5) => f(a1)(a2)(a3)(a4)(a5);\n        case 6:\n            return (a1, a2, a3, a4, a5, a6) => f(a1)(a2)(a3)(a4)(a5)(a6);\n        case 7:\n            return (a1, a2, a3, a4, a5, a6, a7) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7);\n        case 8:\n            return (a1, a2, a3, a4, a5, a6, a7, a8) => f(a1)(a2)(a3)(a4)(a5)(a6)(a7)(a8);\n        default:\n            throw new Error(\"Uncurrying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function curry(arity, f) {\n    if (f == null) {\n        return null;\n    }\n    switch (arity) {\n        case 2:\n            return (a1) => (a2) => f(a1, a2);\n        case 3:\n            return (a1) => (a2) => (a3) => f(a1, a2, a3);\n        case 4:\n            return (a1) => (a2) => (a3) => (a4) => f(a1, a2, a3, a4);\n        case 5:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => f(a1, a2, a3, a4, a5);\n        case 6:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f(a1, a2, a3, a4, a5, a6);\n        case 7:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f(a1, a2, a3, a4, a5, a6, a7);\n        case 8:\n            return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f(a1, a2, a3, a4, a5, a6, a7, a8);\n        default:\n            throw new Error(\"Currying to more than 8-arity is not supported: \" + arity);\n    }\n}\nexport function partialApply(arity, f, args) {\n    if (f == null) {\n        return null;\n    }\n    else {\n        switch (arity) {\n            case 1:\n                // Wrap arguments to make sure .concat doesn't destruct arrays. Example\n                // [1,2].concat([3,4],5)   --> [1,2,3,4,5]    // fails\n                // [1,2].concat([[3,4],5]) --> [1,2,[3,4],5]  // ok\n                return (a1) => f.apply(null, args.concat([a1]));\n            case 2:\n                return (a1) => (a2) => f.apply(null, args.concat([a1, a2]));\n            case 3:\n                return (a1) => (a2) => (a3) => f.apply(null, args.concat([a1, a2, a3]));\n            case 4:\n                return (a1) => (a2) => (a3) => (a4) => f.apply(null, args.concat([a1, a2, a3, a4]));\n            case 5:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => f.apply(null, args.concat([a1, a2, a3, a4, a5]));\n            case 6:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6]));\n            case 7:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7]));\n            case 8:\n                return (a1) => (a2) => (a3) => (a4) => (a5) => (a6) => (a7) => (a8) => f.apply(null, args.concat([a1, a2, a3, a4, a5, a6, a7, a8]));\n            default:\n                throw new Error(\"Partially applying to more than 8-arity is not supported: \" + arity);\n        }\n    }\n}\nexport function addToDict(dict, k, v) {\n    if (dict.has(k)) {\n        throw new Error(\"An item with the same key has already been added. Key: \" + k);\n    }\n    dict.set(k, v);\n}\nexport function getItemFromDict(map, key) {\n    if (map.has(key)) {\n        return map.get(key);\n    }\n    else {\n        throw new Error(\"The given key was not present in the dictionary.\");\n    }\n}\n","import { combineHashCodes, compare, compareArrays, equals, equalArrays, identityHash, structuralHash, numberHash } from \"./Util\";\nfunction sameType(x, y) {\n    return y != null && Object.getPrototypeOf(x).constructor === Object.getPrototypeOf(y).constructor;\n}\n// Taken from Babel helpers\nfunction inherits(subClass, superClass) {\n    // if (typeof superClass !== \"function\" && superClass !== null) {\n    //   throw new TypeError(\n    //     \"Super expression must either be null or a function, not \" +\n    //       typeof superClass\n    //   );\n    // }\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true,\n        },\n    });\n    // if (superClass)\n    //   Object.setPrototypeOf\n    //     ? Object.setPrototypeOf(subClass, superClass)\n    //     : (subClass.__proto__ = superClass);\n}\nexport function declare(cons, superClass) {\n    inherits(cons, superClass || SystemObject);\n    return cons;\n}\nexport function SystemObject() {\n}\nSystemObject.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map(k => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nSystemObject.prototype.GetHashCode = function () {\n    return identityHash(this);\n};\nSystemObject.prototype.Equals = function (other) {\n    return this === other;\n};\nfunction compareList(self, other) {\n    if (self === other) {\n        return 0;\n    }\n    else {\n        if (other == null) {\n            return -1;\n        }\n        while (self.tail != null) {\n            if (other.tail == null) {\n                return 1;\n            }\n            const res = compare(self.head, other.head);\n            if (res !== 0) {\n                return res;\n            }\n            self = self.tail;\n            other = other.tail;\n        }\n        return other.tail == null ? 0 : -1;\n    }\n}\nexport function List(head, tail) {\n    this.head = head;\n    this.tail = tail;\n}\nList.prototype.toString = function () {\n    return \"[\" + Array.from(this).map(x => String(x)).join(\"; \") + \"]\";\n};\nList.prototype.toJSON = function () {\n    return Array.from(this);\n};\nList.prototype[Symbol.iterator] = function () {\n    let cur = this;\n    return {\n        next: () => {\n            const tmp = cur;\n            cur = cur.tail;\n            return { done: tmp.tail == null, value: tmp.head };\n        },\n    };\n};\nList.prototype.GetHashCode = function () {\n    const hashes = Array.from(this).map(structuralHash);\n    return combineHashCodes(hashes);\n};\nList.prototype.Equals = function (other) {\n    return compareList(this, other) === 0;\n};\nList.prototype.CompareTo = function (other) {\n    return compareList(this, other);\n};\nexport function Union(tag, name, ...fields) {\n    this.tag = tag | 0;\n    this.name = name;\n    this.fields = fields;\n}\nUnion.prototype.toString = function () {\n    const len = this.fields.length;\n    if (len === 0) {\n        return this.name;\n    }\n    else if (len === 1) {\n        return this.name + \" \" + String(this.fields[0]);\n    }\n    else {\n        return this.name + \" (\" + this.fields.map(x => String(x)).join(\",\") + \")\";\n    }\n};\nUnion.prototype.toJSON = function () {\n    return this.fields.length === 0\n        ? this.name\n        : [this.name].concat(this.fields);\n};\nUnion.prototype.GetHashCode = function () {\n    let hashes = this.fields.map(x => structuralHash(x));\n    hashes.splice(0, 0, numberHash(this.tag));\n    return combineHashCodes(hashes);\n};\nUnion.prototype.Equals = function (other) {\n    return this === other\n        || (sameType(this, other)\n            && this.tag === other.tag\n            && equalArrays(this.fields, other.fields));\n};\nUnion.prototype.CompareTo = function (other) {\n    if (this === other) {\n        return 0;\n    }\n    else if (!sameType(this, other)) {\n        return -1;\n    }\n    else if (this.tag === other.tag) {\n        return compareArrays(this.fields, other.fields);\n    }\n    else {\n        return this.tag < other.tag ? -1 : 1;\n    }\n};\nfunction recordToJson(record, getFieldNames) {\n    const o = {};\n    const keys = getFieldNames == null ? Object.keys(record) : getFieldNames(record);\n    for (let i = 0; i < keys.length; i++) {\n        o[keys[i]] = record[keys[i]];\n    }\n    return o;\n}\nfunction recordEquals(self, other, getFieldNames) {\n    if (self === other) {\n        return true;\n    }\n    else if (!sameType(self, other)) {\n        return false;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            if (!equals(self[thisNames[i]], other[thisNames[i]])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nfunction recordCompare(self, other, getFieldNames) {\n    if (self === other) {\n        return 0;\n    }\n    else if (!sameType(self, other)) {\n        return -1;\n    }\n    else {\n        const thisNames = getFieldNames == null ? Object.keys(self) : getFieldNames(self);\n        for (let i = 0; i < thisNames.length; i++) {\n            const result = compare(self[thisNames[i]], other[thisNames[i]]);\n            if (result !== 0) {\n                return result;\n            }\n        }\n        return 0;\n    }\n}\nexport function Record() {\n}\nRecord.prototype.toString = function () {\n    return \"{\" + Object.keys(this).map(k => k + \" = \" + String(this[k])).join(\";\\n \") + \"}\";\n};\nRecord.prototype.toJSON = function () {\n    return recordToJson(this);\n};\nRecord.prototype.GetHashCode = function () {\n    const hashes = Object.keys(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nRecord.prototype.Equals = function (other) {\n    return recordEquals(this, other);\n};\nRecord.prototype.CompareTo = function (other) {\n    return recordCompare(this, other);\n};\nexport function anonRecord(o) {\n    return Object.assign(Object.create(Record.prototype), o);\n}\nexport const FSharpRef = declare(function FSharpRef(contents) {\n    this.contents = contents;\n}, Record);\n// EXCEPTIONS\nexport const Exception = declare(function Exception(msg) {\n    this.stack = Error().stack;\n    this.message = msg;\n});\nexport function isException(x) {\n    return x instanceof Error || x instanceof Exception;\n}\nfunction getFSharpExceptionFieldNames(self) {\n    return Object.keys(self).filter(k => k !== \"message\" && k !== \"stack\");\n}\nexport const FSharpException = declare(function FSharpException() {\n    Exception.call(this);\n}, Exception);\nFSharpException.prototype.toString = function () {\n    const fieldNames = getFSharpExceptionFieldNames(this);\n    const len = fieldNames.length;\n    if (len === 0) {\n        return this.message;\n    }\n    else if (len === 1) {\n        return this.message + \" \" + String(this[fieldNames[0]]);\n    }\n    else {\n        return this.message + \" (\" + fieldNames.map(k => String(this[k])).join(\",\") + \")\";\n    }\n};\nFSharpException.prototype.toJSON = function () {\n    return recordToJson(this, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.GetHashCode = function () {\n    const hashes = getFSharpExceptionFieldNames(this).map(k => structuralHash(this[k]));\n    return combineHashCodes(hashes);\n};\nFSharpException.prototype.Equals = function (other) {\n    return recordEquals(this, other, getFSharpExceptionFieldNames);\n};\nFSharpException.prototype.CompareTo = function (other) {\n    return recordCompare(this, other, getFSharpExceptionFieldNames);\n};\nexport const MatchFailureException = declare(function MatchFailureException(arg1, arg2, arg3) {\n    this.arg1 = arg1;\n    this.arg2 = arg2 | 0;\n    this.arg3 = arg3 | 0;\n}, FSharpException);\nexport const Attribute = declare(function Attribute() { });\n","import { Record, Union } from \"./Types\";\nimport { compareArraysWith, equalArraysWith } from \"./Util\";\nexport class CaseInfo {\n    constructor(declaringType, tag, name, fields) {\n        this.declaringType = declaringType;\n        this.tag = tag;\n        this.name = name;\n        this.fields = fields;\n    }\n}\nexport class TypeInfo {\n    constructor(fullname, generics, constructor, fields, cases) {\n        this.fullname = fullname;\n        this.generics = generics;\n        this.constructor = constructor;\n        this.fields = fields;\n        this.cases = cases;\n    }\n    toString() {\n        return fullName(this);\n    }\n    Equals(other) {\n        return equals(this, other);\n    }\n    CompareTo(other) {\n        return compare(this, other);\n    }\n}\nexport function getGenerics(t) {\n    return t.generics != null ? t.generics : [];\n}\nexport function equals(t1, t2) {\n    return t1.fullname === t2.fullname\n        && equalArraysWith(getGenerics(t1), getGenerics(t2), equals);\n}\n// System.Type is not comparable in .NET, but let's implement this\n// in case users want to create a dictionary with types as keys\nexport function compare(t1, t2) {\n    if (t1.fullname !== t2.fullname) {\n        return t1.fullname < t2.fullname ? -1 : 1;\n    }\n    else {\n        return compareArraysWith(getGenerics(t1), getGenerics(t2), compare);\n    }\n}\nexport function type(fullname, generics) {\n    return new TypeInfo(fullname, generics);\n}\nexport function record(fullname, generics, constructor, fields) {\n    return new TypeInfo(fullname, generics, constructor, fields);\n}\nexport function union(fullname, generics, constructor, cases) {\n    const t = new TypeInfo(fullname, generics, constructor, null, () => cases().map((x, i) => typeof x === \"string\" ? new CaseInfo(t, i, x) : new CaseInfo(t, i, x[0], x[1])));\n    return t;\n}\nexport function tuple(...generics) {\n    return new TypeInfo(\"System.Tuple`\" + generics.length, generics);\n}\nexport function delegate(...generics) {\n    return new TypeInfo(\"System.Func`\" + generics.length, generics);\n}\nexport function lambda(argType, returnType) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpFunc`2\", [argType, returnType]);\n}\nexport function option(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Core.FSharpOption`1\", [generic]);\n}\nexport function list(generic) {\n    return new TypeInfo(\"Microsoft.FSharp.Collections.FSharpList`1\", [generic]);\n}\nexport function array(generic) {\n    return new TypeInfo(generic.fullname + \"[]\", [generic]);\n}\nexport const obj = new TypeInfo(\"System.Object\");\nexport const unit = new TypeInfo(\"Microsoft.FSharp.Core.Unit\");\nexport const char = new TypeInfo(\"System.Char\");\nexport const string = new TypeInfo(\"System.String\");\nexport const bool = new TypeInfo(\"System.Boolean\");\nexport const int8 = new TypeInfo(\"System.SByte\");\nexport const uint8 = new TypeInfo(\"System.Byte\");\nexport const int16 = new TypeInfo(\"System.Int16\");\nexport const uint16 = new TypeInfo(\"System.UInt16\");\nexport const int32 = new TypeInfo(\"System.Int32\");\nexport const uint32 = new TypeInfo(\"System.UInt32\");\nexport const float32 = new TypeInfo(\"System.Single\");\nexport const float64 = new TypeInfo(\"System.Double\");\nexport const decimal = new TypeInfo(\"System.Decimal\");\nexport function name(info) {\n    if (Array.isArray(info)) {\n        return info[0];\n    }\n    else if (info instanceof CaseInfo) {\n        return info.name;\n    }\n    else {\n        const i = info.fullname.lastIndexOf(\".\");\n        return i === -1 ? info.fullname : info.fullname.substr(i + 1);\n    }\n}\nexport function fullName(t) {\n    const gen = t.generics != null && !isArray(t) ? t.generics : [];\n    if (gen.length > 0) {\n        return t.fullname + \"[\" + gen.map((x) => fullName(x)).join(\",\") + \"]\";\n    }\n    else {\n        return t.fullname;\n    }\n}\nexport function namespace(t) {\n    const i = t.fullname.lastIndexOf(\".\");\n    return i === -1 ? \"\" : t.fullname.substr(0, i);\n}\nexport function isArray(t) {\n    return t.fullname.endsWith(\"[]\");\n}\nexport function getElementType(t) {\n    return isArray(t) ? t.generics[0] : null;\n}\nexport function isGenericType(t) {\n    return t.generics != null && t.generics.length > 0;\n}\n/**\n * This doesn't replace types for fields (records) or cases (unions)\n * but it should be enough for type comparison purposes\n */\nexport function getGenericTypeDefinition(t) {\n    return t.generics == null ? t : new TypeInfo(t.fullname, t.generics.map(() => obj));\n}\n// FSharpType\nexport function getUnionCases(t) {\n    if (t.cases != null) {\n        return t.cases();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# union type`);\n    }\n}\nexport function getRecordElements(t) {\n    if (t.fields != null) {\n        return t.fields();\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# record type`);\n    }\n}\nexport function getTupleElements(t) {\n    if (isTuple(t)) {\n        return t.generics;\n    }\n    else {\n        throw new Error(`${t.fullname} is not a tuple type`);\n    }\n}\nexport function getFunctionElements(t) {\n    if (isFunction(t)) {\n        const gen = t.generics;\n        return [gen[0], gen[1]];\n    }\n    else {\n        throw new Error(`${t.fullname} is not an F# function type`);\n    }\n}\nexport function isUnion(t) {\n    return t instanceof TypeInfo ? t.cases != null : t instanceof Union;\n}\nexport function isRecord(t) {\n    return t instanceof TypeInfo ? t.fields != null : t instanceof Record;\n}\nexport function isTuple(t) {\n    return t.fullname.startsWith(\"System.Tuple\");\n}\n// In .NET this is false for delegates\nexport function isFunction(t) {\n    return t.fullname === \"Microsoft.FSharp.Core.FSharpFunc`2\";\n}\n// FSharpValue\nexport function getUnionFields(v, t) {\n    const cases = getUnionCases(t);\n    const case_ = cases[v.tag];\n    if (case_ == null) {\n        throw new Error(`Cannot find case ${v.name} in union type`);\n    }\n    return [case_, v.fields];\n}\nexport function getUnionCaseFields(uci) {\n    return uci.fields == null ? [] : uci.fields.map((t, i) => [\"Data\" + i, t]);\n}\nexport function getRecordFields(v) {\n    return Object.keys(v).map((k) => v[k]);\n}\nexport function getRecordField(v, field) {\n    return v[field[0]];\n}\nexport function getTupleFields(v) {\n    return v;\n}\nexport function getTupleField(v, i) {\n    return v[i];\n}\nexport function makeUnion(uci, values) {\n    const expectedLength = (uci.fields || []).length;\n    if (values.length !== expectedLength) {\n        throw new Error(`Expected an array of length ${expectedLength} but got ${values.length}`);\n    }\n    return new uci.declaringType.constructor(uci.tag, uci.name, ...values);\n}\nexport function makeRecord(t, values) {\n    const fields = getRecordElements(t);\n    if (fields.length !== values.length) {\n        throw new Error(`Expected an array of length ${fields.length} but got ${values.length}`);\n    }\n    return new t.constructor(...values);\n}\nexport function makeTuple(values, t) {\n    return values;\n}\n// Fable.Core.Reflection\nfunction assertUnion(x) {\n    if (!(x instanceof Union)) {\n        throw new Error(`Value is not an F# union type`);\n    }\n}\nexport function getCaseTag(x) {\n    assertUnion(x);\n    return x.tag;\n}\nexport function getCaseName(x) {\n    assertUnion(x);\n    return x.name;\n}\nexport function getCaseFields(x) {\n    assertUnion(x);\n    return x.fields;\n}\n","import { declare, Union } from \"./Types\";\nimport { compare, equals, structuralHash } from \"./Util\";\n// Options are erased in runtime by Fable, but we have\n// the `Some` type below to wrap values that would evaluate\n// to null in runtime. These two rules must be followed:\n// 1- None is always null in runtime, a non-strict null check\n//    (`x == null`) is enough to check the case of an option.\n// 2- To get the value of an option the `getValue` helper\n//    below must **always** be used.\n// export type Option<T> = T | Some<T>;\n// Using a class here for better compatibility with TS files importing Some\nexport class Some {\n    constructor(value) {\n        this.value = value;\n    }\n    // Don't add \"Some\" for consistency with erased options\n    toString() {\n        return String(this.value);\n    }\n    toJSON() {\n        return this.value;\n    }\n    GetHashCode() {\n        return structuralHash(this.value);\n    }\n    Equals(other) {\n        return other == null\n            ? false\n            : equals(this.value, other instanceof Some ? other.value : other);\n    }\n    CompareTo(other) {\n        return other == null\n            ? 1\n            : compare(this.value, other instanceof Some ? other.value : other);\n    }\n}\nexport function some(x) {\n    return x == null || x instanceof Some ? new Some(x) : x;\n}\nexport function value(x, acceptNull) {\n    if (x == null) {\n        if (!acceptNull) {\n            throw new Error(\"Option has no value\");\n        }\n        return null;\n    }\n    else {\n        return x instanceof Some ? x.value : x;\n    }\n}\nexport function defaultArg(arg, defaultValue, f) {\n    return arg == null ? defaultValue : (f != null ? f(value(arg)) : value(arg));\n}\nexport function defaultArgWith(arg, defThunk) {\n    return arg == null ? defThunk() : value(arg);\n}\nexport function filter(predicate, arg) {\n    return arg != null ? (!predicate(value(arg)) ? null : arg) : arg;\n}\n// CHOICE\nexport const Choice = declare(function Choice(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function choice1(x) {\n    return new Choice(0, \"Choice1Of2\", x);\n}\nexport function choice2(x) {\n    return new Choice(1, \"Choice2Of2\", x);\n}\nexport function tryValueIfChoice1(x) {\n    return x.tag === 0 ? some(x.fields[0]) : null;\n}\nexport function tryValueIfChoice2(x) {\n    return x.tag === 1 ? some(x.fields[0]) : null;\n}\n// RESULT\nexport const Result = declare(function Result(tag, name, field) {\n    Union.call(this, tag, name, field);\n}, Union);\nexport function ok(x) {\n    return new Result(0, \"Ok\", x);\n}\nexport function error(x) {\n    return new Result(1, \"Error\", x);\n}\nexport function mapOk(f, result) {\n    return result.tag === 0 ? ok(f(result.fields[0])) : result;\n}\nexport function mapError(f, result) {\n    return result.tag === 1 ? error(f(result.fields[0])) : result;\n}\nexport function bindOk(f, result) {\n    return result.tag === 0 ? f(result.fields[0]) : result;\n}\n","export var NumberStyles;\n(function (NumberStyles) {\n    // None = 0x00000000,\n    // AllowLeadingWhite = 0x00000001,\n    // AllowTrailingWhite = 0x00000002,\n    // AllowLeadingSign = 0x00000004,\n    // AllowTrailingSign = 0x00000008,\n    // AllowParentheses = 0x00000010,\n    // AllowDecimalPoint = 0x00000020,\n    // AllowThousands = 0x00000040,\n    // AllowExponent = 0x00000080,\n    // AllowCurrencySymbol = 0x00000100,\n    NumberStyles[NumberStyles[\"AllowHexSpecifier\"] = 512] = \"AllowHexSpecifier\";\n    // Integer = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign,\n    // HexNumber = AllowLeadingWhite | AllowTrailingWhite | AllowHexSpecifier,\n    // Number = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //          AllowTrailingSign | AllowDecimalPoint | AllowThousands,\n    // Float = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign |\n    //         AllowDecimalPoint | AllowExponent,\n    // Currency = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //            AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol,\n    // Any = AllowLeadingWhite | AllowTrailingWhite | AllowLeadingSign | AllowTrailingSign |\n    //       AllowParentheses | AllowDecimalPoint | AllowThousands | AllowCurrencySymbol | AllowExponent,\n})(NumberStyles || (NumberStyles = {}));\nfunction validResponse(regexMatch, radix) {\n    const [_all, sign, prefix, digits] = regexMatch;\n    return {\n        sign: sign || \"\",\n        prefix: prefix || \"\",\n        digits,\n        radix,\n    };\n}\nfunction getRange(unsigned, bitsize) {\n    switch (bitsize) {\n        case 8: return unsigned ? [0, 255] : [-128, 127];\n        case 16: return unsigned ? [0, 65535] : [-32768, 32767];\n        case 32: return unsigned ? [0, 4294967295] : [-2147483648, 2147483647];\n        default: throw new Error(\"Invalid bit size.\");\n    }\n}\nfunction getInvalidDigits(radix) {\n    switch (radix) {\n        case 2: return /[^0-1]/;\n        case 8: return /[^0-7]/;\n        case 10: return /[^0-9]/;\n        case 16: return /[^0-9a-fA-F]/;\n        default:\n            throw new Error(\"Invalid Base.\");\n    }\n}\nfunction getRadix(prefix, style) {\n    if (style & NumberStyles.AllowHexSpecifier) {\n        return 16;\n    }\n    else {\n        switch (prefix) {\n            case \"0b\":\n            case \"0B\": return 2;\n            case \"0o\":\n            case \"0O\": return 8;\n            case \"0x\":\n            case \"0X\": return 16;\n            default: return 10;\n        }\n    }\n}\nexport function isValid(str, style, radix) {\n    const integerRegex = /^\\s*([\\+\\-])?(0[xXoObB])?([0-9a-fA-F]+)\\s*$/;\n    const res = integerRegex.exec(str.replace(\"_\", \"\"));\n    if (res != null) {\n        const [_all, sign, prefix, digits] = res;\n        radix = radix || getRadix(prefix, style);\n        const invalidDigits = getInvalidDigits(radix);\n        if (!invalidDigits.test(digits)) {\n            return validResponse(res, radix);\n        }\n    }\n    return null;\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        let v = Number.parseInt(res.sign + res.digits, res.radix);\n        if (!Number.isNaN(v)) {\n            const [umin, umax] = getRange(true, bitsize);\n            if (!unsigned && res.radix !== 10 && v >= umin && v <= umax) {\n                v = v << (32 - bitsize) >> (32 - bitsize);\n            }\n            const [min, max] = getRange(unsigned, bitsize);\n            if (v >= min && v <= max) {\n                return v;\n            }\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, 0];\n}\nexport function op_UnaryNegation_Int8(x) {\n    return x === -128 ? x : -x;\n}\nexport function op_UnaryNegation_Int16(x) {\n    return x === -32768 ? x : -x;\n}\nexport function op_UnaryNegation_Int32(x) {\n    return x === -2147483648 ? x : -x;\n}\n","// Adapted from: https://github.com/dcodeIO/long.js/blob/f572e3a17d313730cf11eb838f6d2a5e31626f8a/src/long.js\n// Apache License 2.0: https://github.com/dcodeIO/long.js/blob/master/LICENSE\n/* tslint:disable */\nimport { isValid } from \"./Int32\";\nimport { combineHashCodes } from \"./Util\";\n/**\n * wasm optimizations, to do native i64 multiplication and divide\n */\nvar wasm = null;\ntry {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\n        0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\n    ])), {}).exports;\n}\ncatch (e) {\n    // no wasm support :(\n}\n/**\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n *  See the from* functions below for more convenient ways of constructing Longs.\n * @exports Long\n * @class A Long class for representing a 64 bit two's-complement integer value.\n * @param {number} low The low (signed) 32 bits of the long\n * @param {number} high The high (signed) 32 bits of the long\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @constructor\n */\nexport default function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n    this.unsigned = !!unsigned;\n}\nLong.prototype.GetHashCode = function () {\n    return combineHashCodes([this.unsigned ? 1 : 0, this.high, this.low]);\n};\nLong.prototype.Equals = function (x) { return equals(this, x); };\nLong.prototype.CompareTo = function (x) { return compare(this, x); };\nLong.prototype.toString = function (radix) { return toString(this, radix); };\nLong.prototype.toJSON = function () { return toString(this); };\nexport const neg = op_UnaryNegation;\nexport const not = op_LogicalNot;\nexport const add = op_Addition;\nexport const sub = op_Subtraction;\nexport const mul = op_Multiply;\nexport const div = op_Division;\nexport const mod = op_Modulus;\nexport const shl = op_LeftShift;\nexport const shr = op_RightShift;\nexport const and = op_BitwiseAnd;\nexport const or = op_BitwiseOr;\nexport const xor = op_ExclusiveOr;\n// The internal representation of a long is the two given signed, 32-bit values.\n// We use 32-bit pieces because these are the size of integers on which\n// Javascript performs bit-operations.  For operations like addition and\n// multiplication, we split each number into 16 bit pieces, which can easily be\n// multiplied within Javascript's floating-point representation without overflow\n// or change in sign.\n//\n// In the algorithms below, we frequently reduce the negative case to the\n// positive case by negating the input(s) and then post-processing the result.\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n// a positive number, it overflows back into a negative).  Not handling this\n// case would often result in infinite recursion.\n//\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n// methods on which they depend.\n/**\n * An indicator used to reliably determine if an object is a Long or not.\n * @type {boolean}\n * @const\n * @private\n */\nLong.prototype.__isLong__;\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\n/**\n * @function\n * @param {*} obj Object\n * @returns {boolean}\n * @inner\n */\nfunction isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n}\n/**\n * A cache of the Long representations of small integer values.\n * @type {!Object}\n * @inner\n */\nvar INT_CACHE = {};\n/**\n * A cache of the Long representations of small unsigned integer values.\n * @type {!Object}\n * @inner\n */\nvar UINT_CACHE = {};\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n    if (unsigned) {\n        value >>>= 0;\n        if (cache = (0 <= value && value < 256)) {\n            cachedObj = UINT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\n        if (cache)\n            UINT_CACHE[value] = obj;\n        return obj;\n    }\n    else {\n        value |= 0;\n        if (cache = (-128 <= value && value < 128)) {\n            cachedObj = INT_CACHE[value];\n            if (cachedObj)\n                return cachedObj;\n        }\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\n        if (cache)\n            INT_CACHE[value] = obj;\n        return obj;\n    }\n}\n/**\n * @param {number} value\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromNumber(value, unsigned) {\n    if (isNaN(value))\n        return unsigned ? UZERO : ZERO;\n    if (unsigned) {\n        if (value < 0)\n            return UZERO;\n        if (value >= TWO_PWR_64_DBL)\n            return MAX_UNSIGNED_VALUE;\n    }\n    else {\n        if (value <= -TWO_PWR_63_DBL)\n            return MIN_VALUE;\n        if (value + 1 >= TWO_PWR_63_DBL)\n            return MAX_VALUE;\n    }\n    if (value < 0)\n        return op_UnaryNegation(fromNumber(-value, unsigned));\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\n}\n/**\n * @param {number} value\n * @param {boolean} unsigned\n * @param {number} kind\n * @returns {!Long}\n * @inner\n */\nexport function fromInteger(value, unsigned, kind) {\n    var x;\n    var xh = 0;\n    switch (kind) {\n        case 0:\n            x = value << 24 >> 24;\n            xh = x;\n            break;\n        case 4:\n            x = value << 24 >>> 24;\n            break;\n        case 1:\n            x = value << 16 >> 16;\n            xh = x;\n            break;\n        case 5:\n            x = value << 16 >>> 16;\n            break;\n        case 2:\n            x = value >> 0;\n            xh = x;\n            break;\n        case 6: x = value >>> 0;\n    }\n    return fromBits(x, xh >> 31, unsigned);\n}\n/**\n * @param {number} lowBits\n * @param {number} highBits\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n}\n/**\n * @function\n * @param {number} base\n * @param {number} exponent\n * @returns {number}\n * @inner\n */\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n/**\n * @param {string} str\n * @param {(boolean|number)=} unsigned\n * @param {number=} radix\n * @returns {!Long}\n * @inner\n */\nexport function fromString(str, unsigned, radix) {\n    if (str.length === 0)\n        throw Error('empty string');\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\n        return ZERO;\n    if (typeof unsigned === 'number') {\n        // For goog.math.long compatibility\n        radix = unsigned,\n            unsigned = false;\n    }\n    else {\n        unsigned = !!unsigned;\n    }\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    var p = str.indexOf('-');\n    if (p > 0)\n        throw Error('interior hyphen');\n    else if (p === 0) {\n        return op_UnaryNegation(fromString(str.substring(1), unsigned, radix));\n    }\n    // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n    for (var i = 0; i < str.length; i += 8) {\n        var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);\n        if (size < 8) {\n            var power = fromNumber(pow_dbl(radix, size));\n            result = op_Addition(op_Multiply(result, power), fromNumber(value));\n        }\n        else {\n            result = op_Multiply(result, radixToPower);\n            result = op_Addition(result, fromNumber(value));\n        }\n    }\n    result.unsigned = unsigned;\n    return result;\n}\nfunction getMaxValue(unsigned, radix, isNegative) {\n    switch (radix) {\n        case 2: return unsigned ?\n            \"1111111111111111111111111111111111111111111111111111111111111111\" :\n            (isNegative ? \"1000000000000000000000000000000000000000000000000000000000000000\"\n                : \"111111111111111111111111111111111111111111111111111111111111111\");\n        case 8: return unsigned ?\n            \"1777777777777777777777\" :\n            (isNegative ? \"1000000000000000000000\" : \"777777777777777777777\");\n        case 10: return unsigned ?\n            \"18446744073709551615\" :\n            (isNegative ? \"9223372036854775808\" : \"9223372036854775807\");\n        case 16: return unsigned ?\n            \"FFFFFFFFFFFFFFFF\" :\n            (isNegative ? \"8000000000000000\" : \"7FFFFFFFFFFFFFFF\");\n        default: throw new Error(\"Invalid radix.\");\n    }\n}\nexport function parse(str, style, unsigned, bitsize, radix) {\n    const res = isValid(str, style, radix);\n    if (res != null) {\n        const lessOrEqual = (x, y) => {\n            const len = Math.max(x.length, y.length);\n            return x.padStart(len, \"0\") <= maxValue.padStart(len, \"0\");\n        };\n        const isNegative = res.sign === \"-\";\n        const maxValue = getMaxValue(unsigned || res.radix !== 10, res.radix, isNegative);\n        if (lessOrEqual(res.digits, maxValue)) {\n            str = isNegative ? res.sign + res.digits : res.digits;\n            return fromString(str, unsigned, res.radix);\n        }\n    }\n    throw new Error(\"Input string was not in a correct format.\");\n}\nexport function tryParse(str, style, unsigned, bitsize) {\n    try {\n        const v = parse(str, style, unsigned, bitsize);\n        return [true, v];\n    }\n    catch (_a) {\n        // supress error\n    }\n    return [false, ZERO];\n}\n/**\n * @function\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n * @param {boolean=} unsigned\n * @returns {!Long}\n * @inner\n */\nexport function fromValue(val, unsigned) {\n    if (typeof val === 'number')\n        return fromNumber(val, unsigned);\n    if (typeof val === 'string')\n        return fromString(val, unsigned);\n    // Throws for non-objects, converts non-instanceof Long:\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n}\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n// no runtime penalty for these.\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_16_DBL = 1 << 16;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_24_DBL = 1 << 24;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n/**\n * @type {number}\n * @const\n * @inner\n */\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n/**\n * @type {!Long}\n * @const\n * @inner\n */\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ZERO = fromInt(0);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UZERO = fromInt(0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var ONE = fromInt(1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var UONE = fromInt(1, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var NEG_ONE = fromInt(-1);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n/**\n * @type {!Long}\n * @inner\n */\nexport var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n/**\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n * @returns {number}\n */\nexport function toInt($this) {\n    return $this.unsigned ? $this.low >>> 0 : $this.low;\n}\n;\n/**\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n * @returns {number}\n */\nexport function toNumber($this) {\n    if ($this.unsigned)\n        return (($this.high >>> 0) * TWO_PWR_32_DBL) + ($this.low >>> 0);\n    return $this.high * TWO_PWR_32_DBL + ($this.low >>> 0);\n}\n;\n/**\n * Converts the Long to a string written in the specified radix.\n * @param {number=} radix Radix (2-36), defaults to 10\n * @returns {string}\n * @override\n * @throws {RangeError} If `radix` is out of range\n */\nexport function toString($this, radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix)\n        throw RangeError('radix');\n    if (isZero($this))\n        return '0';\n    if (isNegative($this)) { // Unsigned Longs are never negative\n        if (equals($this, MIN_VALUE)) {\n            // We need to change the Long value before it can be negated, so we remove\n            // the bottom-most digit in this base and then recurse to do the rest.\n            var radixLong = fromNumber(radix), div = op_Division($this, radixLong), rem1 = op_Subtraction(op_Multiply(div, radixLong), $this);\n            return toString(div, radix) + toInt(rem1).toString(radix);\n        }\n        else\n            return '-' + toString(op_UnaryNegation($this), radix);\n    }\n    // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n    var radixToPower = fromNumber(pow_dbl(radix, 6), $this.unsigned), rem = $this;\n    var result = '';\n    while (true) {\n        var remDiv = op_Division(rem, radixToPower), intval = toInt(op_Subtraction(rem, op_Multiply(remDiv, radixToPower))) >>> 0, digits = intval.toString(radix);\n        rem = remDiv;\n        if (isZero(rem))\n            return digits + result;\n        else {\n            while (digits.length < 6)\n                digits = '0' + digits;\n            result = '' + digits + result;\n        }\n    }\n}\n;\n/**\n * Gets the high 32 bits as a signed integer.\n * @returns {number} Signed high bits\n */\nexport function getHighBits($this) {\n    return $this.high;\n}\n;\n/**\n * Gets the high 32 bits as an unsigned integer.\n * @returns {number} Unsigned high bits\n */\nexport function getHighBitsUnsigned($this) {\n    return $this.high >>> 0;\n}\n;\n/**\n * Gets the low 32 bits as a signed integer.\n * @returns {number} Signed low bits\n */\nexport function getLowBits($this) {\n    return $this.low;\n}\n;\n/**\n * Gets the low 32 bits as an unsigned integer.\n * @returns {number} Unsigned low bits\n */\nexport function getLowBitsUnsigned($this) {\n    return $this.low >>> 0;\n}\n;\n/**\n * Gets the number of bits needed to represent the absolute value of this Long.\n * @returns {number}\n */\nexport function getNumBitsAbs($this) {\n    if (isNegative($this)) // Unsigned Longs are never negative\n        return equals($this, MIN_VALUE) ? 64 : getNumBitsAbs(op_UnaryNegation($this));\n    var val = $this.high != 0 ? $this.high : $this.low;\n    for (var bit = 31; bit > 0; bit--)\n        if ((val & (1 << bit)) != 0)\n            break;\n    return $this.high != 0 ? bit + 33 : bit + 1;\n}\n;\n/**\n * Tests if this Long's value equals zero.\n * @returns {boolean}\n */\nexport function isZero($this) {\n    return $this.high === 0 && $this.low === 0;\n}\n;\n/**\n * Tests if this Long's value is negative.\n * @returns {boolean}\n */\nexport function isNegative($this) {\n    return !$this.unsigned && $this.high < 0;\n}\n;\n/**\n * Tests if this Long's value is positive.\n * @returns {boolean}\n */\nexport function isPositive($this) {\n    return $this.unsigned || $this.high >= 0;\n}\n;\n/**\n * Tests if this Long's value is odd.\n * @returns {boolean}\n */\nexport function isOdd($this) {\n    return ($this.low & 1) === 1;\n}\n;\n/**\n * Tests if this Long's value is even.\n * @returns {boolean}\n */\nexport function isEven($this) {\n    return ($this.low & 1) === 0;\n}\n;\n/**\n * Tests if this Long's value equals the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function equals($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if ($this.unsigned !== other.unsigned && ($this.high >>> 31) === 1 && (other.high >>> 31) === 1)\n        return false;\n    return $this.high === other.high && $this.low === other.low;\n}\n;\n/**\n * Tests if this Long's value differs from the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function notEquals($this, other) {\n    return !equals($this, /* validates */ other);\n}\n;\n/**\n * Tests if this Long's value is less than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThan($this, other) {\n    return compare($this, /* validates */ other) < 0;\n}\n;\n/**\n * Tests if this Long's value is less than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function lessThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) <= 0;\n}\n;\n/**\n * Tests if this Long's value is greater than the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThan($this, other) {\n    return compare($this, /* validates */ other) > 0;\n}\n;\n/**\n * Tests if this Long's value is greater than or equal the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {boolean}\n */\nexport function greaterThanOrEqual($this, other) {\n    return compare($this, /* validates */ other) >= 0;\n}\n;\n/**\n * Compares this Long's value with the specified's.\n * @param {!Long|number|string} other Other value\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n *  if the given one is greater\n */\nexport function compare($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    if (equals($this, other))\n        return 0;\n    var thisNeg = isNegative($this), otherNeg = isNegative(other);\n    if (thisNeg && !otherNeg)\n        return -1;\n    if (!thisNeg && otherNeg)\n        return 1;\n    // At this point the sign bits are the same\n    if (!$this.unsigned)\n        return isNegative(op_Subtraction($this, other)) ? -1 : 1;\n    // Both are positive if at least one is unsigned\n    return (other.high >>> 0) > ($this.high >>> 0) || (other.high === $this.high && (other.low >>> 0) > ($this.low >>> 0)) ? -1 : 1;\n}\n;\n/**\n * Absolute value of the given number.\n */\nexport function abs($this) {\n    if (!$this.unsigned && isNegative($this))\n        return op_UnaryNegation($this);\n    else\n        return $this;\n}\n/**\n * Negates this Long's value.\n * @returns {!Long} Negated Long\n */\nexport function op_UnaryNegation($this) {\n    if (!$this.unsigned && equals($this, MIN_VALUE))\n        return MIN_VALUE;\n    return op_Addition(op_LogicalNot($this), ONE);\n}\n;\n/**\n * Returns the sum of this and the specified Long.\n * @param {!Long|number|string} addend Addend\n * @returns {!Long} Sum\n */\nexport function op_Addition($this, addend) {\n    if (!isLong(addend))\n        addend = fromValue(addend);\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns the difference of this and the specified Long.\n * @param {!Long|number|string} subtrahend Subtrahend\n * @returns {!Long} Difference\n */\nexport function op_Subtraction($this, subtrahend) {\n    if (!isLong(subtrahend))\n        subtrahend = fromValue(subtrahend);\n    return op_Addition($this, op_UnaryNegation(subtrahend));\n}\n;\n/**\n * Returns the product of this and the specified Long.\n * @param {!Long|number|string} multiplier Multiplier\n * @returns {!Long} Product\n */\nexport function op_Multiply($this, multiplier) {\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    if (!isLong(multiplier))\n        multiplier = fromValue(multiplier);\n    // use wasm support if present\n    if (wasm) {\n        var low = wasm.mul($this.low, $this.high, multiplier.low, multiplier.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero(multiplier))\n        return $this.unsigned ? UZERO : ZERO;\n    if (equals($this, MIN_VALUE))\n        return isOdd(multiplier) ? MIN_VALUE : ZERO;\n    if (equals(multiplier, MIN_VALUE))\n        return isOdd($this) ? MIN_VALUE : ZERO;\n    if (isNegative($this)) {\n        if (isNegative(multiplier))\n            return op_Multiply(op_UnaryNegation($this), op_UnaryNegation(multiplier));\n        else\n            return op_UnaryNegation(op_Multiply(op_UnaryNegation($this), multiplier));\n    }\n    else if (isNegative(multiplier))\n        return op_UnaryNegation(op_Multiply($this, op_UnaryNegation(multiplier)));\n    // If both longs are small, use float multiplication\n    if (lessThan($this, TWO_PWR_24) && lessThan(multiplier, TWO_PWR_24))\n        return fromNumber(toNumber($this) * toNumber(multiplier), $this.unsigned);\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n    var a48 = $this.high >>> 16;\n    var a32 = $this.high & 0xFFFF;\n    var a16 = $this.low >>> 16;\n    var a00 = $this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, $this.unsigned);\n}\n;\n/**\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\n *  unsigned if this Long is unsigned.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Quotient\n */\nexport function op_Division($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    if (isZero(divisor))\n        throw Error('division by zero');\n    // use wasm support if present\n    if (wasm) {\n        // guard against signed division overflow: the largest\n        // negative number / -1 would be 1 larger than the largest\n        // positive number, due to two's complement.\n        if (!$this.unsigned &&\n            $this.high === -0x80000000 &&\n            divisor.low === -1 && divisor.high === -1) {\n            // be consistent with non-wasm code path\n            return $this;\n        }\n        var low = ($this.unsigned ? wasm.div_u : wasm.div_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    if (isZero($this))\n        return $this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n    if (!$this.unsigned) {\n        // This section is only relevant for signed longs and is derived from the\n        // closure library as a whole.\n        if (equals($this, MIN_VALUE)) {\n            if (equals(divisor, ONE) || equals(divisor, NEG_ONE))\n                return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n            else if (equals(divisor, MIN_VALUE))\n                return ONE;\n            else {\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n                var halfThis = op_RightShift($this, 1);\n                approx = op_LeftShift(op_Division(halfThis, divisor), 1);\n                if (equals(approx, ZERO)) {\n                    return isNegative(divisor) ? ONE : NEG_ONE;\n                }\n                else {\n                    rem = op_Subtraction($this, op_Multiply(divisor, approx));\n                    res = op_Addition(approx, op_Division(rem, divisor));\n                    return res;\n                }\n            }\n        }\n        else if (equals(divisor, MIN_VALUE))\n            return $this.unsigned ? UZERO : ZERO;\n        if (isNegative($this)) {\n            if (isNegative(divisor))\n                return op_Division(op_UnaryNegation($this), op_UnaryNegation(divisor));\n            return op_UnaryNegation(op_Division(op_UnaryNegation($this), divisor));\n        }\n        else if (isNegative(divisor))\n            return op_UnaryNegation(op_Division($this, op_UnaryNegation(divisor)));\n        res = ZERO;\n    }\n    else {\n        // The algorithm below has not been made for unsigned longs. It's therefore\n        // required to take special care of the MSB prior to running it.\n        if (!divisor.unsigned)\n            divisor = toUnsigned(divisor);\n        if (greaterThan(divisor, $this))\n            return UZERO;\n        if (greaterThan(divisor, op_RightShiftUnsigned($this, 1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n            return UONE;\n        res = UZERO;\n    }\n    // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n    rem = $this;\n    while (greaterThanOrEqual(rem, divisor)) {\n        // Approximate the result of division. This may be a little greater or\n        // smaller than the actual value.\n        approx = Math.max(1, Math.floor(toNumber(rem) / toNumber(divisor)));\n        // We will tweak the approximate result by changing it in the 48-th digit or\n        // the smallest non-fractional digit, whichever is larger.\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48), \n        // Decrease the approximation until it is smaller than the remainder.  Note\n        // that if it is too large, the product overflows and is negative.\n        approxRes = fromNumber(approx), approxRem = op_Multiply(approxRes, divisor);\n        while (isNegative(approxRem) || greaterThan(approxRem, rem)) {\n            approx -= delta;\n            approxRes = fromNumber(approx, $this.unsigned);\n            approxRem = op_Multiply(approxRes, divisor);\n        }\n        // We know the answer can't be zero... and actually, zero would cause\n        // infinite recursion since we would make no progress.\n        if (isZero(approxRes))\n            approxRes = ONE;\n        res = op_Addition(res, approxRes);\n        rem = op_Subtraction(rem, approxRem);\n    }\n    return res;\n}\n;\n/**\n * Returns this Long modulo the specified.\n * @param {!Long|number|string} divisor Divisor\n * @returns {!Long} Remainder\n */\nexport function op_Modulus($this, divisor) {\n    if (!isLong(divisor))\n        divisor = fromValue(divisor);\n    // use wasm support if present\n    if (wasm) {\n        var low = ($this.unsigned ? wasm.rem_u : wasm.rem_s)($this.low, $this.high, divisor.low, divisor.high);\n        return fromBits(low, wasm.get_high(), $this.unsigned);\n    }\n    return op_Subtraction($this, op_Multiply(op_Division($this, divisor), divisor));\n}\n;\n/**\n * Returns the bitwise NOT of this Long.\n * @returns {!Long}\n */\nexport function op_LogicalNot($this) {\n    return fromBits(~$this.low, ~$this.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise AND of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseAnd($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low & other.low, $this.high & other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise OR of this Long and the specified.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_BitwiseOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low | other.low, $this.high | other.high, $this.unsigned);\n}\n;\n/**\n * Returns the bitwise XOR of this Long and the given one.\n * @param {!Long|number|string} other Other Long\n * @returns {!Long}\n */\nexport function op_ExclusiveOr($this, other) {\n    if (!isLong(other))\n        other = fromValue(other);\n    return fromBits($this.low ^ other.low, $this.high ^ other.high, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits shifted to the left by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_LeftShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits($this.low << numBits, ($this.high << numBits) | ($this.low >>> (32 - numBits)), $this.unsigned);\n    else\n        return fromBits(0, $this.low << (numBits - 32), $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShift($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    if ((numBits &= 63) === 0)\n        return $this;\n    else if (numBits < 32)\n        return fromBits(($this.low >>> numBits) | ($this.high << (32 - numBits)), $this.high >> numBits, $this.unsigned);\n    else\n        return fromBits($this.high >> (numBits - 32), $this.high >= 0 ? 0 : -1, $this.unsigned);\n}\n;\n/**\n * Returns this Long with bits logically shifted to the right by the given amount.\n * @param {number|!Long} numBits Number of bits\n * @returns {!Long} Shifted Long\n */\nexport function op_RightShiftUnsigned($this, numBits) {\n    if (isLong(numBits))\n        numBits = toInt(numBits);\n    numBits &= 63;\n    if (numBits === 0)\n        return $this;\n    else {\n        var high = $this.high;\n        if (numBits < 32) {\n            var low = $this.low;\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, $this.unsigned);\n        }\n        else if (numBits === 32)\n            return fromBits(high, 0, $this.unsigned);\n        else\n            return fromBits(high >>> (numBits - 32), 0, $this.unsigned);\n    }\n}\n;\n/**\n * Converts this Long to signed.\n * @returns {!Long} Signed long\n */\nexport function toSigned($this) {\n    if (!$this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, false);\n}\n;\n/**\n * Converts this Long to unsigned.\n * @returns {!Long} Unsigned long\n */\nexport function toUnsigned($this) {\n    if ($this.unsigned)\n        return $this;\n    return fromBits($this.low, $this.high, true);\n}\n;\n/**\n * Converts this Long to its byte representation.\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {!Array.<number>} Byte representation\n */\nexport function toBytes($this, le) {\n    return le ? toBytesLE($this) : toBytesBE($this);\n}\n;\n/**\n * Converts this Long to its little endian byte representation.\n * @returns {!Array.<number>} Little endian byte representation\n */\nexport function toBytesLE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        lo & 0xff,\n        lo >>> 8 & 0xff,\n        lo >>> 16 & 0xff,\n        lo >>> 24,\n        hi & 0xff,\n        hi >>> 8 & 0xff,\n        hi >>> 16 & 0xff,\n        hi >>> 24\n    ];\n}\n;\n/**\n * Converts this Long to its big endian byte representation.\n * @returns {!Array.<number>} Big endian byte representation\n */\nexport function toBytesBE($this) {\n    var hi = $this.high, lo = $this.low;\n    return [\n        hi >>> 24,\n        hi >>> 16 & 0xff,\n        hi >>> 8 & 0xff,\n        hi & 0xff,\n        lo >>> 24,\n        lo >>> 16 & 0xff,\n        lo >>> 8 & 0xff,\n        lo & 0xff\n    ];\n}\n;\n/**\n * Creates a Long from its byte representation.\n * @param {!Array.<number>} bytes Byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @param {boolean=} le Whether little or big endian, defaults to big endian\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytes(bytes, unsigned, le) {\n    return le ? fromBytesLE(bytes, unsigned) : fromBytesBE(bytes, unsigned);\n}\n;\n/**\n * Creates a Long from its little endian byte representation.\n * @param {!Array.<number>} bytes Little endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] |\n        bytes[1] << 8 |\n        bytes[2] << 16 |\n        bytes[3] << 24, bytes[4] |\n        bytes[5] << 8 |\n        bytes[6] << 16 |\n        bytes[7] << 24, unsigned);\n}\n;\n/**\n * Creates a Long from its big endian byte representation.\n * @param {!Array.<number>} bytes Big endian byte representation\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n * @returns {Long} The corresponding Long value\n */\nexport function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 |\n        bytes[5] << 16 |\n        bytes[6] << 8 |\n        bytes[7], bytes[0] << 24 |\n        bytes[1] << 16 |\n        bytes[2] << 8 |\n        bytes[3], unsigned);\n}\n;\nexport function unixEpochMillisecondsToTicks(ms, offset) {\n    return op_Multiply(op_Addition(op_Addition(fromNumber(ms), 62135596800000), offset), 10000);\n}\nexport function ticksToUnixEpochMilliseconds(ticks) {\n    return toNumber(op_Subtraction(op_Division(ticks, 10000), 62135596800000));\n}\nexport function makeRangeStepFunction(step, last, unsigned) {\n    const zero = unsigned ? UZERO : ZERO;\n    return (x) => greaterThan(step, zero) && lessThanOrEqual(x, last)\n        || lessThan(step, zero) && greaterThanOrEqual(x, last)\n        ? [x, op_Addition(x, step)] : null;\n}\n","import { makeRangeStepFunction } from \"./Long\";\nimport { some, value } from \"./Option\";\nimport { compare, equals } from \"./Util\";\nexport class Enumerator {\n    constructor(iter) {\n        this.iter = iter;\n    }\n    MoveNext() {\n        const cur = this.iter.next();\n        this.current = cur.value;\n        return !cur.done;\n    }\n    get Current() {\n        return this.current;\n    }\n    Reset() {\n        throw new Error(\"JS iterators cannot be reset\");\n    }\n    Dispose() {\n        return;\n    }\n}\nexport function getEnumerator(o) {\n    return new Enumerator(o[Symbol.iterator]());\n}\nexport function toIterator(en) {\n    return {\n        next() {\n            return en.MoveNext()\n                ? { done: false, value: en.Current }\n                : { done: true, value: null };\n        },\n    };\n}\n// export function toIterable<T>(en: IEnumerable<T>): Iterable<T> {\n//   return {\n//     [Symbol.iterator]() {\n//       return toIterator(en.GetEnumerator());\n//     },\n//   };\n// }\nfunction __failIfNone(res) {\n    if (res == null) {\n        throw new Error(\"Seq did not contain any matching element\");\n    }\n    return value(res);\n}\nexport function ofArray(xs) {\n    return delay(() => unfold((i) => i < xs.length ? [xs[i], i + 1] : null, 0));\n}\nexport function append(xs, ys) {\n    return delay(() => {\n        let firstDone = false;\n        const i = xs[Symbol.iterator]();\n        let iters = [i, null];\n        return unfold(() => {\n            let cur;\n            if (!firstDone) {\n                cur = iters[0].next();\n                if (!cur.done) {\n                    return [cur.value, iters];\n                }\n                else {\n                    firstDone = true;\n                    iters = [null, ys[Symbol.iterator]()];\n                }\n            }\n            cur = iters[1].next();\n            return !cur.done ? [cur.value, iters] : null;\n        }, iters);\n    });\n}\nexport function average(xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, x);\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function averageBy(f, xs, averager) {\n    let count = 0;\n    const total = fold((acc, x) => {\n        count++;\n        return averager.Add(acc, f(x));\n    }, averager.GetZero(), xs);\n    return averager.DivideByInt(total, count);\n}\nexport function concat(xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        let output = { value: null };\n        return unfold((innerIter) => {\n            let hasFinished = false;\n            while (!hasFinished) {\n                if (innerIter == null) {\n                    const cur = iter.next();\n                    if (!cur.done) {\n                        innerIter = cur.value[Symbol.iterator]();\n                    }\n                    else {\n                        hasFinished = true;\n                    }\n                }\n                else {\n                    const cur = innerIter.next();\n                    if (!cur.done) {\n                        output = { value: cur.value };\n                        hasFinished = true;\n                    }\n                    else {\n                        innerIter = null;\n                    }\n                }\n            }\n            return innerIter != null && output != null ? [output.value, innerIter] : null;\n        }, null);\n    });\n}\nexport function collect(f, xs) {\n    return concat(map(f, xs));\n}\nexport function choose(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            const y = f(cur.value);\n            if (y != null) {\n                return [value(y), iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function compareWith(f, xs, ys) {\n    const nonZero = tryFind((i) => i !== 0, map2((x, y) => f(x, y), xs, ys));\n    return nonZero != null ? value(nonZero) : length(xs) - length(ys);\n}\nexport function delay(f) {\n    return {\n        [Symbol.iterator]: () => f()[Symbol.iterator](),\n    };\n}\nexport function empty() {\n    return unfold(() => void 0);\n}\nexport function enumerateWhile(cond, xs) {\n    return concat(unfold(() => cond() ? [xs, true] : null));\n}\nexport function enumerateThenFinally(xs, finalFn) {\n    return delay(() => {\n        let iter;\n        try {\n            iter = xs[Symbol.iterator]();\n        }\n        catch (err) {\n            return void 0;\n        }\n        finally {\n            finalFn();\n        }\n        return unfold((it) => {\n            try {\n                const cur = it.next();\n                return !cur.done ? [cur.value, it] : null;\n            }\n            catch (err) {\n                return void 0;\n            }\n            finally {\n                finalFn();\n            }\n        }, iter);\n    });\n}\nexport function enumerateUsing(disp, work) {\n    let isDisposed = false;\n    const disposeOnce = () => {\n        if (!isDisposed) {\n            isDisposed = true;\n            disp.Dispose();\n        }\n    };\n    try {\n        return enumerateThenFinally(work(disp), disposeOnce);\n    }\n    catch (err) {\n        return void 0;\n    }\n    finally {\n        disposeOnce();\n    }\n}\nexport function exactlyOne(xs) {\n    const iter = xs[Symbol.iterator]();\n    const fst = iter.next();\n    if (fst.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    const snd = iter.next();\n    if (!snd.done) {\n        throw new Error(\"Seq had multiple items\");\n    }\n    return fst.value;\n}\nexport function except(itemsToExclude, source) {\n    const exclusionItems = Array.from(itemsToExclude);\n    const testIsNotInExclusionItems = (element) => !exclusionItems.some((excludedItem) => equals(excludedItem, element));\n    return filter(testIsNotInExclusionItems, source);\n}\nexport function exists(f, xs) {\n    let cur;\n    for (const iter = xs[Symbol.iterator]();;) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function exists2(f, xs, ys) {\n    let cur1;\n    let cur2;\n    for (const iter1 = xs[Symbol.iterator](), iter2 = ys[Symbol.iterator]();;) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        if (f(cur1.value, cur2.value)) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function forAll(f, xs) {\n    return !exists((x) => !f(x), xs);\n}\nexport function forAll2(f, xs, ys) {\n    return !exists2((x, y) => !f(x, y), xs, ys);\n}\nexport function contains(i, xs) {\n    return exists((x) => equals(x, i), xs);\n}\nexport function filter(f, xs) {\n    return delay(() => unfold((iter) => {\n        let cur = iter.next();\n        while (!cur.done) {\n            if (f(cur.value)) {\n                return [cur.value, iter];\n            }\n            cur = iter.next();\n        }\n        return null;\n    }, xs[Symbol.iterator]()));\n}\nexport function where(f, xs) {\n    return filter(f, xs);\n}\nexport function fold(f, acc, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f, acc);\n    }\n    else {\n        let cur;\n        for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n            cur = iter.next();\n            if (cur.done) {\n                break;\n            }\n            acc = f(acc, cur.value, i);\n        }\n        return acc;\n    }\n}\nexport function foldBack(f, xs, acc) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        acc = f(arr[i], acc, i);\n    }\n    return acc;\n}\nexport function fold2(f, acc, xs, ys) {\n    const iter1 = xs[Symbol.iterator]();\n    const iter2 = ys[Symbol.iterator]();\n    let cur1;\n    let cur2;\n    for (let i = 0;; i++) {\n        cur1 = iter1.next();\n        cur2 = iter2.next();\n        if (cur1.done || cur2.done) {\n            break;\n        }\n        acc = f(acc, cur1.value, cur2.value, i);\n    }\n    return acc;\n}\nexport function foldBack2(f, xs, ys, acc) {\n    const ar1 = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const ar2 = Array.isArray(ys) || ArrayBuffer.isView(ys) ? ys : Array.from(ys);\n    for (let i = ar1.length - 1; i >= 0; i--) {\n        acc = f(ar1[i], ar2[i], acc, i);\n    }\n    return acc;\n}\nexport function tryHead(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    return cur.done ? null : some(cur.value);\n}\nexport function head(xs) {\n    return __failIfNone(tryHead(xs));\n}\nexport function initialize(n, f) {\n    return delay(() => unfold((i) => i < n ? [f(i), i + 1] : null, 0));\n}\nexport function initializeInfinite(f) {\n    return delay(() => unfold((i) => [f(i), i + 1], 0));\n}\nexport function tryItem(i, xs) {\n    if (i < 0) {\n        return null;\n    }\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return i < xs.length ? some(xs[i]) : null;\n    }\n    for (let j = 0, iter = xs[Symbol.iterator]();; j++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (j === i) {\n            return some(cur.value);\n        }\n    }\n    return null;\n}\nexport function item(i, xs) {\n    return __failIfNone(tryItem(i, xs));\n}\nexport function iterate(f, xs) {\n    fold((_, x) => f(x), null, xs);\n}\nexport function iterate2(f, xs, ys) {\n    fold2((_, x, y) => f(x, y), null, xs, ys);\n}\nexport function iterateIndexed(f, xs) {\n    fold((_, x, i) => f(i, x), null, xs);\n}\nexport function iterateIndexed2(f, xs, ys) {\n    fold2((_, x, y, i) => f(i, x, y), null, xs, ys);\n}\nexport function isEmpty(xs) {\n    const i = xs[Symbol.iterator]();\n    return i.next().done;\n}\nexport function tryLast(xs) {\n    return isEmpty(xs) ? null : some(reduce((_, x) => x, xs));\n}\nexport function last(xs) {\n    return __failIfNone(tryLast(xs));\n}\nexport function length(xs) {\n    return Array.isArray(xs) || ArrayBuffer.isView(xs)\n        ? xs.length\n        : fold((acc, x) => acc + 1, 0, xs);\n}\nexport function map(f, xs) {\n    return delay(() => unfold((iter) => {\n        const cur = iter.next();\n        return !cur.done ? [f(cur.value), iter] : null;\n    }, xs[Symbol.iterator]()));\n}\nexport function mapIndexed(f, xs) {\n    return delay(() => {\n        let i = 0;\n        return unfold((iter) => {\n            const cur = iter.next();\n            return !cur.done ? [f(i++, cur.value), iter] : null;\n        }, xs[Symbol.iterator]());\n    });\n}\nexport function indexed(xs) {\n    return mapIndexed((i, x) => [i, x], xs);\n}\nexport function map2(f, xs, ys) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function mapIndexed2(f, xs, ys) {\n    return delay(() => {\n        let i = 0;\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            return !cur1.done && !cur2.done ? [f(i++, cur1.value, cur2.value), null] : null;\n        });\n    });\n}\nexport function map3(f, xs, ys, zs) {\n    return delay(() => {\n        const iter1 = xs[Symbol.iterator]();\n        const iter2 = ys[Symbol.iterator]();\n        const iter3 = zs[Symbol.iterator]();\n        return unfold(() => {\n            const cur1 = iter1.next();\n            const cur2 = iter2.next();\n            const cur3 = iter3.next();\n            return !cur1.done && !cur2.done && !cur3.done ? [f(cur1.value, cur2.value, cur3.value), null] : null;\n        });\n    });\n}\nexport function mapFold(f, acc, xs, transform) {\n    const result = [];\n    let r;\n    let cur;\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        [r, acc] = f(acc, cur.value);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function mapFoldBack(f, xs, acc, transform) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    const result = [];\n    let r;\n    for (let i = arr.length - 1; i >= 0; i--) {\n        [r, acc] = f(arr[i], acc);\n        result.push(r);\n    }\n    return transform !== void 0 ? [transform(result), acc] : [result, acc];\n}\nexport function max(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === 1 ? acc : x, xs);\n}\nexport function maxBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === 1 ? acc : x, xs);\n}\nexport function min(xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(acc, x) === -1 ? acc : x, xs);\n}\nexport function minBy(f, xs, comparer) {\n    const compareFn = comparer != null ? comparer.Compare : compare;\n    return reduce((acc, x) => compareFn(f(acc), f(x)) === -1 ? acc : x, xs);\n}\nexport function pairwise(xs) {\n    return skip(2, scan((last, next) => [last[1], next], [0, 0], xs));\n}\nexport function rangeChar(first, last) {\n    return delay(() => unfold((x) => x <= last ? [x, String.fromCharCode(x.charCodeAt(0) + 1)] : null, first));\n}\nexport function rangeLong(first, step, last, unsigned) {\n    const stepFn = makeRangeStepFunction(step, last, unsigned);\n    return delay(() => unfold(stepFn, first));\n}\nexport function rangeNumber(first, step, last) {\n    if (step === 0) {\n        throw new Error(\"Step cannot be 0\");\n    }\n    return delay(() => unfold((x) => step > 0 && x <= last || step < 0 && x >= last ? [x, x + step] : null, first));\n}\nexport function readOnly(xs) {\n    return map((x) => x, xs);\n}\nexport function reduce(f, xs) {\n    if (Array.isArray(xs) || ArrayBuffer.isView(xs)) {\n        return xs.reduce(f);\n    }\n    const iter = xs[Symbol.iterator]();\n    let cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = cur.value;\n    while (true) {\n        cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        acc = f(acc, cur.value);\n    }\n    return acc;\n}\nexport function reduceBack(f, xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs : Array.from(xs);\n    if (ar.length === 0) {\n        throw new Error(\"Seq was empty\");\n    }\n    let acc = ar[ar.length - 1];\n    for (let i = ar.length - 2; i >= 0; i--) {\n        acc = f(ar[i], acc, i);\n    }\n    return acc;\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function reverse(xs) {\n    const ar = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return ofArray(ar.reverse());\n}\nexport function scan(f, seed, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((acc) => {\n            if (acc == null) {\n                return [seed, seed];\n            }\n            const cur = iter.next();\n            if (!cur.done) {\n                acc = f(acc, cur.value);\n                return [acc, acc];\n            }\n            return void 0;\n        }, null);\n    });\n}\nexport function scanBack(f, xs, seed) {\n    return reverse(scan((acc, x) => f(x, acc), seed, reverse(xs)));\n}\nexport function singleton(y) {\n    return [y];\n}\nexport function skip(n, xs) {\n    return {\n        [Symbol.iterator]: () => {\n            const iter = xs[Symbol.iterator]();\n            for (let i = 1; i <= n; i++) {\n                if (iter.next().done) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return iter;\n        },\n    };\n}\nexport function skipWhile(f, xs) {\n    return delay(() => {\n        let hasPassed = false;\n        return filter((x) => hasPassed || (hasPassed = !f(x)), xs);\n    });\n}\nexport function sortWith(f, xs) {\n    const ys = Array.from(xs);\n    return ofArray(ys.sort(f));\n}\nexport function sum(xs, adder) {\n    return fold((acc, x) => adder.Add(acc, x), adder.GetZero(), xs);\n}\nexport function sumBy(f, xs, adder) {\n    return fold((acc, x) => adder.Add(acc, f(x)), adder.GetZero(), xs);\n}\nexport function tail(xs) {\n    const iter = xs[Symbol.iterator]();\n    const cur = iter.next();\n    if (cur.done) {\n        throw new Error(\"Seq was empty\");\n    }\n    return {\n        [Symbol.iterator]: () => iter,\n    };\n}\nexport function take(n, xs, truncate = false) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            if (i < n) {\n                const cur = iter.next();\n                if (!cur.done) {\n                    return [cur.value, i + 1];\n                }\n                if (!truncate) {\n                    throw new Error(\"Seq has not enough elements\");\n                }\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function truncate(n, xs) {\n    return take(n, xs, true);\n}\nexport function takeWhile(f, xs) {\n    return delay(() => {\n        const iter = xs[Symbol.iterator]();\n        return unfold((i) => {\n            const cur = iter.next();\n            if (!cur.done && f(cur.value)) {\n                return [cur.value, null];\n            }\n            return void 0;\n        }, 0);\n    });\n}\nexport function tryFind(f, xs, defaultValue) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return some(cur.value);\n        }\n    }\n    return defaultValue === void 0 ? null : some(defaultValue);\n}\nexport function find(f, xs) {\n    return __failIfNone(tryFind(f, xs));\n}\nexport function tryFindBack(f, xs, defaultValue) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    return tryFind(f, arr.reverse(), defaultValue);\n}\nexport function findBack(f, xs) {\n    return __failIfNone(tryFindBack(f, xs));\n}\nexport function tryFindIndex(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        if (f(cur.value, i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndex(f, xs) {\n    return __failIfNone(tryFindIndex(f, xs));\n}\nexport function tryFindIndexBack(f, xs) {\n    const arr = Array.isArray(xs) || ArrayBuffer.isView(xs) ? xs.slice(0) : Array.from(xs);\n    for (let i = arr.length - 1; i >= 0; i--) {\n        if (f(arr[i], i)) {\n            return i;\n        }\n    }\n    return null;\n}\nexport function findIndexBack(f, xs) {\n    return __failIfNone(tryFindIndexBack(f, xs));\n}\nexport function tryPick(f, xs) {\n    for (let i = 0, iter = xs[Symbol.iterator]();; i++) {\n        const cur = iter.next();\n        if (cur.done) {\n            break;\n        }\n        const y = f(cur.value, i);\n        if (y != null) {\n            return y;\n        }\n    }\n    return null;\n}\nexport function pick(f, xs) {\n    return __failIfNone(tryPick(f, xs));\n}\nexport function unfold(f, fst) {\n    return {\n        [Symbol.iterator]: () => {\n            // Capture a copy of the first value in the closure\n            // so the sequence is restarted every time, see #1230\n            let acc = fst;\n            return {\n                next: () => {\n                    const res = f(acc);\n                    if (res != null) {\n                        acc = res[1];\n                        return { done: false, value: res[0] };\n                    }\n                    return { done: true };\n                },\n            };\n        },\n    };\n}\nexport function zip(xs, ys) {\n    return map2((x, y) => [x, y], xs, ys);\n}\nexport function zip3(xs, ys, zs) {\n    return map3((x, y, z) => [x, y, z], xs, ys, zs);\n}\nexport function windowed(windowSize, source) {\n    if (windowSize <= 0) {\n        throw new Error(\"windowSize must be positive\");\n    }\n    return {\n        [Symbol.iterator]: () => {\n            let window = [];\n            const iter = source[Symbol.iterator]();\n            return {\n                next: () => {\n                    let cur;\n                    while (window.length < windowSize) {\n                        if ((cur = iter.next()).done) {\n                            return { done: true };\n                        }\n                        window.push(cur.value);\n                    }\n                    const value = window;\n                    window = window.slice(1);\n                    return { done: false, value };\n                },\n            };\n        },\n    };\n}\n","/**\n * DateTimeOffset functions.\n *\n * Note: Date instances are always DateObjects in local\n * timezone (because JS dates are all kinds of messed up).\n * A local date returns UTC epoc when `.getTime()` is called.\n *\n * Basically; invariant: date.getTime() always return UTC time.\n */\nimport { fromValue, ticksToUnixEpochMilliseconds, unixEpochMillisecondsToTicks } from \"./Long\";\nimport { compareDates, dateOffset, padWithZeros } from \"./Util\";\nexport const offsetRegex = /(?:Z|[+-](\\d+):?([0-5]?\\d)?)\\s*$/;\nexport function dateOffsetToString(offset) {\n    const isMinus = offset < 0;\n    offset = Math.abs(offset);\n    const hours = ~~(offset / 3600000);\n    const minutes = (offset % 3600000) / 60000;\n    return (isMinus ? \"-\" : \"+\") +\n        padWithZeros(hours, 2) + \":\" +\n        padWithZeros(minutes, 2);\n}\nexport function dateToHalfUTCString(date, half) {\n    const str = date.toISOString();\n    return half === \"first\"\n        ? str.substring(0, str.indexOf(\"T\"))\n        : str.substring(str.indexOf(\"T\") + 1, str.length - 1);\n}\nfunction dateToISOString(d, utc) {\n    if (utc) {\n        return d.toISOString();\n    }\n    else {\n        // JS Date is always local\n        const printOffset = d.kind == null ? true : d.kind === 2 /* Local */;\n        return padWithZeros(d.getFullYear(), 4) + \"-\" +\n            padWithZeros(d.getMonth() + 1, 2) + \"-\" +\n            padWithZeros(d.getDate(), 2) + \"T\" +\n            padWithZeros(d.getHours(), 2) + \":\" +\n            padWithZeros(d.getMinutes(), 2) + \":\" +\n            padWithZeros(d.getSeconds(), 2) + \".\" +\n            padWithZeros(d.getMilliseconds(), 3) +\n            (printOffset ? dateOffsetToString(d.getTimezoneOffset() * -60000) : \"\");\n    }\n}\nfunction dateToISOStringWithOffset(dateWithOffset, offset) {\n    const str = dateWithOffset.toISOString();\n    return str.substring(0, str.length - 1) + dateOffsetToString(offset);\n}\nfunction dateToStringWithCustomFormat(date, format, utc) {\n    return format.replace(/(\\w)\\1*/g, (match) => {\n        let rep = match;\n        switch (match.substring(0, 1)) {\n            case \"y\":\n                const y = utc ? date.getUTCFullYear() : date.getFullYear();\n                rep = match.length < 4 ? y % 100 : y;\n                break;\n            case \"M\":\n                rep = (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n                break;\n            case \"d\":\n                rep = utc ? date.getUTCDate() : date.getDate();\n                break;\n            case \"H\":\n                rep = utc ? date.getUTCHours() : date.getHours();\n                break;\n            case \"h\":\n                const h = utc ? date.getUTCHours() : date.getHours();\n                rep = h > 12 ? h % 12 : h;\n                break;\n            case \"m\":\n                rep = utc ? date.getUTCMinutes() : date.getMinutes();\n                break;\n            case \"s\":\n                rep = utc ? date.getUTCSeconds() : date.getSeconds();\n                break;\n            case \"f\":\n                rep = utc ? date.getUTCMilliseconds() : date.getMilliseconds();\n                break;\n        }\n        if (rep !== match && rep < 10 && match.length > 1) {\n            rep = \"0\" + rep;\n        }\n        return rep;\n    });\n}\nfunction dateToStringWithOffset(date, format) {\n    const d = new Date(date.getTime() + date.offset);\n    if (typeof format !== \"string\") {\n        return d.toISOString().replace(/\\.\\d+/, \"\").replace(/[A-Z]|\\.\\d+/g, \" \") + dateOffsetToString(date.offset);\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\": return dateToHalfUTCString(d, \"first\");\n            case \"T\":\n            case \"t\": return dateToHalfUTCString(d, \"second\");\n            case \"O\":\n            case \"o\": return dateToISOStringWithOffset(d, date.offset);\n            default: throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(d, format, true);\n    }\n}\nfunction dateToStringWithKind(date, format) {\n    const utc = date.kind === 1 /* UTC */;\n    if (typeof format !== \"string\") {\n        return utc ? date.toUTCString() : date.toLocaleString();\n    }\n    else if (format.length === 1) {\n        switch (format) {\n            case \"D\":\n            case \"d\":\n                return utc ? dateToHalfUTCString(date, \"first\") : date.toLocaleDateString();\n            case \"T\":\n            case \"t\":\n                return utc ? dateToHalfUTCString(date, \"second\") : date.toLocaleTimeString();\n            case \"O\":\n            case \"o\":\n                return dateToISOString(date, utc);\n            default:\n                throw new Error(\"Unrecognized Date print format\");\n        }\n    }\n    else {\n        return dateToStringWithCustomFormat(date, format, utc);\n    }\n}\nexport function toString(date, format) {\n    return date.offset != null\n        ? dateToStringWithOffset(date, format)\n        : dateToStringWithKind(date, format);\n}\nexport default function DateTime(value, kind) {\n    const d = new Date(value);\n    d.kind = (kind == null ? 0 /* Unspecified */ : kind) | 0;\n    return d;\n}\nexport function fromTicks(ticks, kind) {\n    ticks = fromValue(ticks);\n    kind = kind != null ? kind : 0 /* Unspecified */;\n    let date = DateTime(ticksToUnixEpochMilliseconds(ticks), kind);\n    // Ticks are local to offset (in this case, either UTC or Local/Unknown).\n    // If kind is anything but UTC, that means that the tick number was not\n    // in utc, thus getTime() cannot return UTC, and needs to be shifted.\n    if (kind !== 1 /* UTC */) {\n        date = DateTime(date.getTime() - dateOffset(date), kind);\n    }\n    return date;\n}\nexport function fromDateTimeOffset(date, kind) {\n    switch (kind) {\n        case 1 /* UTC */: return DateTime(date.getTime(), 1 /* UTC */);\n        case 2 /* Local */: return DateTime(date.getTime(), 2 /* Local */);\n        default:\n            const d = DateTime(date.getTime() + date.offset, kind);\n            return DateTime(d.getTime() - dateOffset(d), kind);\n    }\n}\nexport function getTicks(date) {\n    return unixEpochMillisecondsToTicks(date.getTime(), dateOffset(date));\n}\nexport function minValue() {\n    // This is \"0001-01-01T00:00:00.000Z\", actual JS min value is -8640000000000000\n    return DateTime(-62135596800000, 0 /* Unspecified */);\n}\nexport function maxValue() {\n    // This is \"9999-12-31T23:59:59.999Z\", actual JS max value is 8640000000000000\n    return DateTime(253402300799999, 0 /* Unspecified */);\n}\nexport function parseRaw(str) {\n    let date = new Date(str);\n    if (isNaN(date.getTime())) {\n        // Try to check strings JS Date cannot parse (see #1045, #1422)\n        // tslint:disable-next-line:max-line-length\n        const m = /^\\s*(\\d+[^\\w\\s:]\\d+[^\\w\\s:]\\d+)?\\s*(\\d+:\\d+(?::\\d+(?:\\.\\d+)?)?)?\\s*([AaPp][Mm])?\\s*([+-]\\d+(?::\\d+)?)?\\s*$/.exec(str);\n        if (m != null) {\n            let baseDate = null;\n            let timeInSeconds = 0;\n            if (m[2] != null) {\n                const timeParts = m[2].split(\":\");\n                timeInSeconds = parseInt(timeParts[0], 10) * 3600 +\n                    parseInt(timeParts[1] || \"0\", 10) * 60 +\n                    parseFloat(timeParts[2] || \"0\");\n                if (m[3] != null && m[3].toUpperCase() === \"PM\") {\n                    timeInSeconds += 720;\n                }\n            }\n            if (m[4] != null) { // There's an offset, parse as UTC\n                if (m[1] != null) {\n                    baseDate = new Date(m[1] + \" UTC\");\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getUTCFullYear() + \"/\" + (d.getUTCMonth() + 1) + \"/\" + d.getUTCDate());\n                }\n                const offsetParts = m[4].substr(1).split(\":\");\n                let offsetInMinutes = parseInt(offsetParts[0], 10) * 60 + parseInt(offsetParts[1] || \"0\", 10);\n                if (m[4][0] === \"+\") {\n                    offsetInMinutes *= -1;\n                }\n                timeInSeconds += offsetInMinutes * 60;\n            }\n            else {\n                if (m[1] != null) {\n                    baseDate = new Date(m[1]);\n                }\n                else {\n                    const d = new Date();\n                    baseDate = new Date(d.getFullYear() + \"/\" + (d.getMonth() + 1) + \"/\" + d.getDate());\n                }\n            }\n            date = new Date(baseDate.getTime() + timeInSeconds * 1000);\n            // correct for daylight savings time\n            date = new Date(date.getTime() + (date.getTimezoneOffset() - baseDate.getTimezoneOffset()) * 60000);\n        }\n        else {\n            throw new Error(\"The string is not a valid Date.\");\n        }\n    }\n    return date;\n}\nexport function parse(str, detectUTC = false) {\n    const date = parseRaw(str);\n    const offset = offsetRegex.exec(str);\n    // .NET always parses DateTime as Local if there's offset info (even \"Z\")\n    // Newtonsoft.Json uses UTC if the offset is \"Z\"\n    const kind = offset != null\n        ? (detectUTC && offset[0] === \"Z\" ? 1 /* UTC */ : 2 /* Local */)\n        : 0 /* Unspecified */;\n    return DateTime(date.getTime(), kind);\n}\nexport function tryParse(v) {\n    try {\n        // if value is null or whitespace, parsing fails\n        if (v === null || v.trim() === \"\") {\n            return [false, minValue()];\n        }\n        return [true, parse(v)];\n    }\n    catch (_err) {\n        return [false, minValue()];\n    }\n}\nexport function create(year, month, day, h = 0, m = 0, s = 0, ms = 0, kind) {\n    const dateValue = kind === 1 /* UTC */\n        ? Date.UTC(year, month - 1, day, h, m, s, ms)\n        : new Date(year, month - 1, day, h, m, s, ms).getTime();\n    if (isNaN(dateValue)) {\n        throw new Error(\"The parameters describe an unrepresentable Date.\");\n    }\n    const date = DateTime(dateValue, kind);\n    if (year <= 99) {\n        date.setFullYear(year, month - 1, day);\n    }\n    return date;\n}\nexport function now() {\n    return DateTime(Date.now(), 2 /* Local */);\n}\nexport function utcNow() {\n    return DateTime(Date.now(), 1 /* UTC */);\n}\nexport function today() {\n    return date(now());\n}\nexport function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\nexport function daysInMonth(year, month) {\n    return month === 2\n        ? (isLeapYear(year) ? 29 : 28)\n        : (month >= 8 ? (month % 2 === 0 ? 31 : 30) : (month % 2 === 0 ? 30 : 31));\n}\nexport function toUniversalTime(date) {\n    return date.kind === 1 /* UTC */ ? date : DateTime(date.getTime(), 1 /* UTC */);\n}\nexport function toLocalTime(date) {\n    return date.kind === 2 /* Local */ ? date : DateTime(date.getTime(), 2 /* Local */);\n}\nexport function timeOfDay(d) {\n    return hour(d) * 3600000\n        + minute(d) * 60000\n        + second(d) * 1000\n        + millisecond(d);\n}\nexport function date(d) {\n    return create(year(d), month(d), day(d), 0, 0, 0, 0, d.kind);\n}\nexport function day(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDate() : d.getDate();\n}\nexport function hour(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCHours() : d.getHours();\n}\nexport function millisecond(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMilliseconds() : d.getMilliseconds();\n}\nexport function minute(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCMinutes() : d.getMinutes();\n}\nexport function month(d) {\n    return (d.kind === 1 /* UTC */ ? d.getUTCMonth() : d.getMonth()) + 1;\n}\nexport function second(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCSeconds() : d.getSeconds();\n}\nexport function year(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCFullYear() : d.getFullYear();\n}\nexport function dayOfWeek(d) {\n    return d.kind === 1 /* UTC */ ? d.getUTCDay() : d.getDay();\n}\nexport function dayOfYear(d) {\n    const _year = year(d);\n    const _month = month(d);\n    let _day = day(d);\n    for (let i = 1; i < _month; i++) {\n        _day += daysInMonth(_year, i);\n    }\n    return _day;\n}\nexport function add(d, ts) {\n    return DateTime(d.getTime() + ts, d.kind);\n}\nexport function addDays(d, v) {\n    return DateTime(d.getTime() + v * 86400000, d.kind);\n}\nexport function addHours(d, v) {\n    return DateTime(d.getTime() + v * 3600000, d.kind);\n}\nexport function addMinutes(d, v) {\n    return DateTime(d.getTime() + v * 60000, d.kind);\n}\nexport function addSeconds(d, v) {\n    return DateTime(d.getTime() + v * 1000, d.kind);\n}\nexport function addMilliseconds(d, v) {\n    return DateTime(d.getTime() + v, d.kind);\n}\nexport function addYears(d, v) {\n    const newMonth = month(d);\n    const newYear = year(d) + v;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function addMonths(d, v) {\n    let newMonth = month(d) + v;\n    let newMonth_ = 0;\n    let yearOffset = 0;\n    if (newMonth > 12) {\n        newMonth_ = newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12);\n        newMonth = newMonth_;\n    }\n    else if (newMonth < 1) {\n        newMonth_ = 12 + newMonth % 12;\n        yearOffset = Math.floor(newMonth / 12) + (newMonth_ === 12 ? -1 : 0);\n        newMonth = newMonth_;\n    }\n    const newYear = year(d) + yearOffset;\n    const _daysInMonth = daysInMonth(newYear, newMonth);\n    const newDay = Math.min(_daysInMonth, day(d));\n    return create(newYear, newMonth, newDay, hour(d), minute(d), second(d), millisecond(d), d.kind);\n}\nexport function subtract(d, that) {\n    return typeof that === \"number\"\n        ? DateTime(d.getTime() - that, d.kind)\n        : d.getTime() - that.getTime();\n}\nexport function toLongDateString(d) {\n    return d.toDateString();\n}\nexport function toShortDateString(d) {\n    return d.toLocaleDateString();\n}\nexport function toLongTimeString(d) {\n    return d.toLocaleTimeString();\n}\nexport function toShortTimeString(d) {\n    return d.toLocaleTimeString().replace(/:\\d\\d(?!:)/, \"\");\n}\nexport function equals(d1, d2) {\n    return d1.getTime() === d2.getTime();\n}\nexport const compare = compareDates;\nexport const compareTo = compareDates;\nexport function op_Addition(x, y) {\n    return add(x, y);\n}\nexport function op_Subtraction(x, y) {\n    return subtract(x, y);\n}\nexport function isDaylightSavingTime(x) {\n    const jan = new Date(x.getFullYear(), 0, 1);\n    const jul = new Date(x.getFullYear(), 6, 1);\n    return isDST(jan.getTimezoneOffset(), jul.getTimezoneOffset(), x.getTimezoneOffset());\n}\nfunction isDST(janOffset, julOffset, tOffset) {\n    return Math.min(janOffset, julOffset) === tOffset;\n}\n","import { toString as dateToString } from \"./Date\";\nimport Long, { fromBytes as longFromBytes, toBytes as longToBytes, toString as longToString } from \"./Long\";\nimport { escape } from \"./RegExp\";\nconst fsFormatRegExp = /(^|[^%])%([0+ ]*)(-?\\d+)?(?:\\.(\\d+))?(\\w)/;\nconst formatRegExp = /\\{(\\d+)(,-?\\d+)?(?:\\:([a-zA-Z])(\\d{0,2})|\\:(.+?))?\\}/g;\n// RFC 4122 compliant. From https://stackoverflow.com/a/13653180/3922220\n// const guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/;\n// Relax GUID parsing, see #1637\nconst guidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/;\nfunction cmp(x, y, ic) {\n    function isIgnoreCase(i) {\n        return i === true ||\n            i === 1 /* CurrentCultureIgnoreCase */ ||\n            i === 3 /* InvariantCultureIgnoreCase */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    function isOrdinal(i) {\n        return i === 4 /* Ordinal */ ||\n            i === 5 /* OrdinalIgnoreCase */;\n    }\n    if (x == null) {\n        return y == null ? 0 : -1;\n    }\n    if (y == null) {\n        return 1;\n    } // everything is bigger than null\n    if (isOrdinal(ic)) {\n        if (isIgnoreCase(ic)) {\n            x = x.toLowerCase();\n            y = y.toLowerCase();\n        }\n        return (x === y) ? 0 : (x < y ? -1 : 1);\n    }\n    else {\n        if (isIgnoreCase(ic)) {\n            x = x.toLocaleLowerCase();\n            y = y.toLocaleLowerCase();\n        }\n        return x.localeCompare(y);\n    }\n}\nexport function compare(...args) {\n    switch (args.length) {\n        case 2: return cmp(args[0], args[1], false);\n        case 3: return cmp(args[0], args[1], args[2]);\n        case 4: return cmp(args[0], args[1], args[2] === true);\n        case 5: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), false);\n        case 6: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5]);\n        case 7: return cmp(args[0].substr(args[1], args[4]), args[2].substr(args[3], args[4]), args[5] === true);\n        default: throw new Error(\"String.compare: Unsupported number of parameters\");\n    }\n}\nexport function compareOrdinal(x, y) {\n    return cmp(x, y, 4 /* Ordinal */);\n}\nexport function compareTo(x, y) {\n    return cmp(x, y, 0 /* CurrentCulture */);\n}\nexport function startsWith(str, pattern, ic) {\n    if (str.length >= pattern.length) {\n        return cmp(str.substr(0, pattern.length), pattern, ic) === 0;\n    }\n    return false;\n}\nexport function indexOfAny(str, anyOf, ...args) {\n    if (str == null || str === \"\") {\n        return -1;\n    }\n    const startIndex = (args.length > 0) ? args[0] : 0;\n    if (startIndex < 0) {\n        throw new Error(\"Start index cannot be negative\");\n    }\n    const length = (args.length > 1) ? args[1] : str.length - startIndex;\n    if (length < 0) {\n        throw new Error(\"Length cannot be negative\");\n    }\n    if (length > str.length - startIndex) {\n        throw new Error(\"Invalid startIndex and length\");\n    }\n    str = str.substr(startIndex, length);\n    for (const c of anyOf) {\n        const index = str.indexOf(c);\n        if (index > -1) {\n            return index + startIndex;\n        }\n    }\n    return -1;\n}\nfunction toHex(x) {\n    if (x instanceof Long) {\n        return longToString(x.unsigned ? x : longFromBytes(longToBytes(x), true), 16);\n    }\n    else {\n        return (Number(x) >>> 0).toString(16);\n    }\n}\nexport function printf(input) {\n    return {\n        input,\n        cont: fsFormat(input),\n    };\n}\nexport function toConsole(arg) {\n    // Don't remove the lambda here, see #1357\n    return arg.cont((x) => { console.log(x); });\n}\nexport function toConsoleError(arg) {\n    return arg.cont((x) => { console.error(x); });\n}\nexport function toText(arg) {\n    return arg.cont((x) => x);\n}\nexport function toFail(arg) {\n    return arg.cont((x) => { throw new Error(x); });\n}\nfunction formatOnce(str2, rep) {\n    return str2.replace(fsFormatRegExp, (_, prefix, flags, pad, precision, format) => {\n        switch (format) {\n            case \"f\":\n            case \"F\":\n                rep = Number(rep).toFixed(precision || 6);\n                break;\n            case \"g\":\n            case \"G\":\n                rep = Number(rep).toPrecision(precision);\n                break;\n            case \"e\":\n            case \"E\":\n                rep = Number(rep).toExponential(precision);\n                break;\n            case \"O\":\n            case \"A\":\n                rep = String(rep);\n                break;\n            case \"x\":\n                rep = toHex(rep);\n                break;\n            case \"X\":\n                rep = toHex(rep).toUpperCase();\n                break;\n        }\n        const plusPrefix = flags.indexOf(\"+\") >= 0 && parseInt(rep, 10) >= 0;\n        pad = parseInt(pad, 10);\n        if (!isNaN(pad)) {\n            const ch = pad >= 0 && flags.indexOf(\"0\") >= 0 ? \"0\" : \" \";\n            rep = padLeft(String(rep), Math.abs(pad) - (plusPrefix ? 1 : 0), ch, pad < 0);\n        }\n        const once = prefix + (plusPrefix ? \"+\" + rep : rep);\n        return once.replace(/%/g, \"%%\");\n    });\n}\nfunction createPrinter(str, cont) {\n    return (...args) => {\n        // Make a copy as the function may be used several times\n        let strCopy = str;\n        for (const arg of args) {\n            strCopy = formatOnce(strCopy, arg);\n        }\n        return fsFormatRegExp.test(strCopy)\n            ? createPrinter(strCopy, cont)\n            : cont(strCopy.replace(/%%/g, \"%\"));\n    };\n}\nexport function fsFormat(str) {\n    return (cont) => {\n        return fsFormatRegExp.test(str)\n            ? createPrinter(str, cont)\n            : cont(str);\n    };\n}\nexport function format(str, ...args) {\n    if (typeof str === \"object\" && args.length > 0) {\n        // Called with culture info\n        str = args[0];\n        args.shift();\n    }\n    return str.replace(formatRegExp, (match, idx, pad, format, precision, pattern) => {\n        let rep = args[idx];\n        let padSymbol = \" \";\n        const isNumericType = (typeof rep === \"number\") || (rep instanceof Long);\n        // TODO: || (rep instanceof Decimal) || (rep instanceof BigInt);\n        if (isNumericType) {\n            switch (format) {\n                case \"f\":\n                case \"F\":\n                    rep = precision ? rep.toFixed(precision) : rep.toFixed(2);\n                    break;\n                case \"g\":\n                case \"G\":\n                    rep = precision ? rep.toPrecision(precision) : rep.toPrecision();\n                    break;\n                case \"e\":\n                case \"E\":\n                    rep = precision ? rep.toExponential(precision) : rep.toExponential();\n                    break;\n                case \"p\":\n                case \"P\":\n                    rep = (precision ? (rep * 100).toFixed(precision) : (rep * 100).toFixed(2)) + \" %\";\n                    break;\n                case \"d\":\n                case \"D\":\n                    rep = precision ? padLeft(rep.toString(), precision, \"0\") : rep.toString();\n                    break;\n                case \"x\":\n                case \"X\":\n                    rep = precision ? padLeft(toHex(rep), precision, \"0\") : toHex(rep);\n                    if (format === \"X\") {\n                        rep = rep.toUpperCase();\n                    }\n                    break;\n                default:\n                    const m = /^(0+)(\\.0+)?$/.exec(pattern);\n                    if (m != null) {\n                        let decs = 0;\n                        if (m[2] != null) {\n                            rep = rep.toFixed(decs = m[2].length - 1);\n                        }\n                        pad = \",\" + (m[1].length + (decs ? decs + 1 : 0)).toString();\n                        padSymbol = \"0\";\n                    }\n                    else if (pattern) {\n                        rep = pattern;\n                    }\n            }\n        }\n        else if (rep instanceof Date) {\n            rep = dateToString(rep, pattern || format);\n        }\n        pad = parseInt((pad || \"\").substring(1), 10);\n        if (!isNaN(pad)) {\n            rep = padLeft(String(rep), Math.abs(pad), padSymbol, pad < 0);\n        }\n        return rep;\n    });\n}\nexport function endsWith(str, search) {\n    const idx = str.lastIndexOf(search);\n    return idx >= 0 && idx === str.length - search.length;\n}\nexport function initialize(n, f) {\n    if (n < 0) {\n        throw new Error(\"String length must be non-negative\");\n    }\n    const xs = new Array(n);\n    for (let i = 0; i < n; i++) {\n        xs[i] = f(i);\n    }\n    return xs.join(\"\");\n}\nexport function insert(str, startIndex, value) {\n    if (startIndex < 0 || startIndex > str.length) {\n        throw new Error(\"startIndex is negative or greater than the length of this instance.\");\n    }\n    return str.substring(0, startIndex) + value + str.substring(startIndex);\n}\nexport function isNullOrEmpty(str) {\n    return typeof str !== \"string\" || str.length === 0;\n}\nexport function isNullOrWhiteSpace(str) {\n    return typeof str !== \"string\" || /^\\s*$/.test(str);\n}\nexport function join(delimiter, ...xs) {\n    return xs.map((x) => String(x)).join(delimiter);\n}\nexport function joinWithIndices(delimiter, xs, startIndex, count) {\n    const endIndexPlusOne = startIndex + count;\n    if (endIndexPlusOne > xs.length) {\n        throw new Error(\"Index and count must refer to a location within the buffer.\");\n    }\n    return join(delimiter, ...xs.slice(startIndex, endIndexPlusOne));\n}\n/** Validates UUID as specified in RFC4122 (versions 1-5). Trims braces. */\nexport function validateGuid(str, doNotThrow) {\n    const trimmedAndLowered = trim(str, \"{\", \"}\").toLowerCase();\n    if (guidRegex.test(trimmedAndLowered)) {\n        return doNotThrow ? [true, trimmedAndLowered] : trimmedAndLowered;\n    }\n    else if (doNotThrow) {\n        return [false, \"00000000-0000-0000-0000-000000000000\"];\n    }\n    throw new Error(\"Guid should contain 32 digits with 4 dashes: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\");\n}\n// From https://gist.github.com/LeverOne/1308368\nexport function newGuid() {\n    let b = \"\";\n    for (let a = 0; a++ < 36;) {\n        b += a * 51 & 52\n            ? (a ^ 15 ? 8 ^ Math.random() * (a ^ 20 ? 16 : 4) : 4).toString(16)\n            : \"-\";\n    }\n    return b;\n}\n// Maps for number <-> hex string conversion\nlet _convertMapsInitialized = false;\nlet _byteToHex;\nlet _hexToByte;\nfunction initConvertMaps() {\n    _byteToHex = new Array(256);\n    _hexToByte = {};\n    for (let i = 0; i < 256; i++) {\n        _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n        _hexToByte[_byteToHex[i]] = i;\n    }\n    _convertMapsInitialized = true;\n}\n/** Parse a UUID into it's component bytes */\n// Adapted from https://github.com/zefferus/uuid-parse\nexport function guidToArray(s) {\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    let i = 0;\n    const buf = new Uint8Array(16);\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, ((oct) => {\n        switch (i) {\n            // .NET saves first three byte groups with different endianness\n            // See https://stackoverflow.com/a/16722909/3922220\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n                buf[3 - i++] = _hexToByte[oct];\n                break;\n            case 4:\n            case 5:\n                buf[9 - i++] = _hexToByte[oct];\n                break;\n            case 6:\n            case 7:\n                buf[13 - i++] = _hexToByte[oct];\n                break;\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n                buf[i++] = _hexToByte[oct];\n                break;\n        }\n    }));\n    // Zero out remaining bytes if string was short\n    while (i < 16) {\n        buf[i++] = 0;\n    }\n    return buf;\n}\n/** Convert UUID byte array into a string */\nexport function arrayToGuid(buf) {\n    if (buf.length !== 16) {\n        throw new Error(\"Byte array for GUID must be exactly 16 bytes long\");\n    }\n    if (!_convertMapsInitialized) {\n        initConvertMaps();\n    }\n    return _byteToHex[buf[3]] + _byteToHex[buf[2]] +\n        _byteToHex[buf[1]] + _byteToHex[buf[0]] + \"-\" +\n        _byteToHex[buf[5]] + _byteToHex[buf[4]] + \"-\" +\n        _byteToHex[buf[7]] + _byteToHex[buf[6]] + \"-\" +\n        _byteToHex[buf[8]] + _byteToHex[buf[9]] + \"-\" +\n        _byteToHex[buf[10]] + _byteToHex[buf[11]] +\n        _byteToHex[buf[12]] + _byteToHex[buf[13]] +\n        _byteToHex[buf[14]] + _byteToHex[buf[15]];\n}\nfunction notSupported(name) {\n    throw new Error(\"The environment doesn't support '\" + name + \"', please use a polyfill.\");\n}\nexport function toBase64String(inArray) {\n    let str = \"\";\n    for (let i = 0; i < inArray.length; i++) {\n        str += String.fromCharCode(inArray[i]);\n    }\n    return typeof btoa === \"function\" ? btoa(str) : notSupported(\"btoa\");\n}\nexport function fromBase64String(b64Encoded) {\n    const binary = typeof atob === \"function\" ? atob(b64Encoded) : notSupported(\"atob\");\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n}\nexport function padLeft(str, len, ch, isRight) {\n    ch = ch || \" \";\n    len = len - str.length;\n    for (let i = 0; i < len; i++) {\n        str = isRight ? str + ch : ch + str;\n    }\n    return str;\n}\nexport function padRight(str, len, ch) {\n    return padLeft(str, len, ch, true);\n}\nexport function remove(str, startIndex, count) {\n    if (startIndex >= str.length) {\n        throw new Error(\"startIndex must be less than length of string\");\n    }\n    if (typeof count === \"number\" && (startIndex + count) > str.length) {\n        throw new Error(\"Index and count must refer to a location within the string.\");\n    }\n    return str.slice(0, startIndex) + (typeof count === \"number\" ? str.substr(startIndex + count) : \"\");\n}\nexport function replace(str, search, replace) {\n    return str.replace(new RegExp(escape(search), \"g\"), replace);\n}\nexport function replicate(n, x) {\n    return initialize(n, () => x);\n}\nexport function getCharAtIndex(input, index) {\n    if (index < 0 || index >= input.length) {\n        throw new Error(\"Index was outside the bounds of the array.\");\n    }\n    return input[index];\n}\nexport function split(str, splitters, count, removeEmpty) {\n    count = typeof count === \"number\" ? count : null;\n    removeEmpty = typeof removeEmpty === \"number\" ? removeEmpty : null;\n    if (count < 0) {\n        throw new Error(\"Count cannot be less than zero\");\n    }\n    if (count === 0) {\n        return [];\n    }\n    if (!Array.isArray(splitters)) {\n        if (removeEmpty === 0) {\n            return str.split(splitters, count);\n        }\n        const len = arguments.length;\n        splitters = Array(len - 1);\n        for (let key = 1; key < len; key++) {\n            splitters[key - 1] = arguments[key];\n        }\n    }\n    splitters = splitters.map((x) => escape(x));\n    splitters = splitters.length > 0 ? splitters : [\" \"];\n    let i = 0;\n    const splits = [];\n    const reg = new RegExp(splitters.join(\"|\"), \"g\");\n    while (count == null || count > 1) {\n        const m = reg.exec(str);\n        if (m === null) {\n            break;\n        }\n        if (!removeEmpty || (m.index - i) > 0) {\n            count = count != null ? count - 1 : count;\n            splits.push(str.substring(i, m.index));\n        }\n        i = reg.lastIndex;\n    }\n    if (!removeEmpty || (str.length - i) > 0) {\n        splits.push(str.substring(i));\n    }\n    return splits;\n}\nexport function trim(str, ...chars) {\n    if (chars.length === 0) {\n        return str.trim();\n    }\n    const pattern = \"[\" + escape(chars.join(\"\")) + \"]+\";\n    return str.replace(new RegExp(\"^\" + pattern), \"\").replace(new RegExp(pattern + \"$\"), \"\");\n}\nexport function trimStart(str, ...chars) {\n    return chars.length === 0\n        ? str.trimStart()\n        : str.replace(new RegExp(\"^[\" + escape(chars.join(\"\")) + \"]+\"), \"\");\n}\nexport function trimEnd(str, ...chars) {\n    return chars.length === 0\n        ? str.trimEnd()\n        : str.replace(new RegExp(\"[\" + escape(chars.join(\"\")) + \"]+$\"), \"\");\n}\nexport function filter(pred, x) {\n    return x.split(\"\").filter((c) => pred(c)).join(\"\");\n}\n","import { Record, List, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union, int32 } from \"./Reflection.js\";\nimport { value as value$$3, some } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, toIterator, map as map$$1, unfold, getEnumerator, fold as fold$$1 } from \"./Seq.js\";\nimport { compare, structuralHash, isDisposable } from \"./Util.js\";\nimport { join, toText, printf } from \"./String.js\";\nexport const MapTree$00602 = declare(function Map_MapTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function MapTree$00602$reflection($gen$$3, $gen$$4) {\n  return union(\"Map.MapTree`2\", [$gen$$3, $gen$$4], MapTree$00602, () => [\"MapEmpty\", [\"MapOne\", [$gen$$3, $gen$$4]], [\"MapNode\", [$gen$$3, $gen$$4, MapTree$00602$reflection($gen$$3, $gen$$4), MapTree$00602$reflection($gen$$3, $gen$$4), int32]]]);\n}\nexport function MapTreeModule$$$sizeAux(acc, m) {\n  MapTreeModule$$$sizeAux: while (true) {\n    switch (m.tag) {\n      case 1:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 2:\n        {\n          const r = m.fields[3];\n          const l = m.fields[2];\n          const $acc$$5 = acc;\n          acc = MapTreeModule$$$sizeAux($acc$$5 + 1, l);\n          m = r;\n          continue MapTreeModule$$$sizeAux;\n        }\n\n      default:\n        {\n          return acc | 0;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$size(x) {\n  return MapTreeModule$$$sizeAux(0, x);\n}\nexport function MapTreeModule$$$empty() {\n  return new MapTree$00602(0, \"MapEmpty\");\n}\nexport function MapTreeModule$$$height(_arg1) {\n  switch (_arg1.tag) {\n    case 1:\n      {\n        return 1;\n      }\n\n    case 2:\n      {\n        const h = _arg1.fields[4] | 0;\n        return h | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport function MapTreeModule$$$isEmpty(m$$1) {\n  if (m$$1.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function MapTreeModule$$$mk(l$$1, k, v, r$$1) {\n  const matchValue = [l$$1, r$$1];\n  var $target$$6;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$6 = 0;\n    } else {\n      $target$$6 = 1;\n    }\n  } else {\n    $target$$6 = 1;\n  }\n\n  switch ($target$$6) {\n    case 0:\n      {\n        return new MapTree$00602(1, \"MapOne\", k, v);\n      }\n\n    case 1:\n      {\n        const hl = MapTreeModule$$$height(l$$1) | 0;\n        const hr = MapTreeModule$$$height(r$$1) | 0;\n        const m$$2 = (hl < hr ? hr : hl) | 0;\n        return new MapTree$00602(2, \"MapNode\", k, v, l$$1, r$$1, m$$2 + 1);\n      }\n  }\n}\nexport function MapTreeModule$$$rebalance(t1, k$$1, v$$1, t2) {\n  const t1h = MapTreeModule$$$height(t1) | 0;\n  const t2h = MapTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + 2) {\n    if (t2.tag === 2) {\n      const t2v = t2.fields[1];\n      const t2r = t2.fields[3];\n      const t2l = t2.fields[2];\n      const t2k = t2.fields[0];\n\n      if (MapTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 2) {\n          const t2lv = t2l.fields[1];\n          const t2lr = t2l.fields[3];\n          const t2ll = t2l.fields[2];\n          const t2lk = t2l.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2ll), t2lk, t2lv, MapTreeModule$$$mk(t2lr, t2k, t2v, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(MapTreeModule$$$mk(t1, k$$1, v$$1, t2l), t2k, t2v, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + 2) {\n    if (t1.tag === 2) {\n      const t1v = t1.fields[1];\n      const t1r = t1.fields[3];\n      const t1l = t1.fields[2];\n      const t1k = t1.fields[0];\n\n      if (MapTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 2) {\n          const t1rv = t1r.fields[1];\n          const t1rr = t1r.fields[3];\n          const t1rl = t1r.fields[2];\n          const t1rk = t1r.fields[0];\n          return MapTreeModule$$$mk(MapTreeModule$$$mk(t1l, t1k, t1v, t1rl), t1rk, t1rv, MapTreeModule$$$mk(t1rr, k$$1, v$$1, t2));\n        } else {\n          throw new Error(\"re  balance\");\n        }\n      } else {\n        return MapTreeModule$$$mk(t1l, t1k, t1v, MapTreeModule$$$mk(t1r, k$$1, v$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return MapTreeModule$$$mk(t1, k$$1, v$$1, t2);\n  }\n}\nexport function MapTreeModule$$$add(comparer, k$$2, v$$2, m$$3) {\n  switch (m$$3.tag) {\n    case 1:\n      {\n        const k2 = m$$3.fields[0];\n        const c = comparer.Compare(k$$2, k2) | 0;\n\n        if (c < 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, new MapTree$00602(0, \"MapEmpty\"), m$$3, 2);\n        } else if (c === 0) {\n          return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n        } else {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, m$$3, new MapTree$00602(0, \"MapEmpty\"), 2);\n        }\n      }\n\n    case 2:\n      {\n        const v2 = m$$3.fields[1];\n        const r$$2 = m$$3.fields[3];\n        const l$$2 = m$$3.fields[2];\n        const k2$$1 = m$$3.fields[0];\n        const h$$1 = m$$3.fields[4] | 0;\n        const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n        if (c$$1 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$add(comparer, k$$2, v$$2, l$$2), k2$$1, v2, r$$2);\n        } else if (c$$1 === 0) {\n          return new MapTree$00602(2, \"MapNode\", k$$2, v$$2, l$$2, r$$2, h$$1);\n        } else {\n          return MapTreeModule$$$rebalance(l$$2, k2$$1, v2, MapTreeModule$$$add(comparer, k$$2, v$$2, r$$2));\n        }\n      }\n\n    default:\n      {\n        return new MapTree$00602(1, \"MapOne\", k$$2, v$$2);\n      }\n  }\n}\nexport function MapTreeModule$$$find(comparer$$1, k$$3, m$$4) {\n  MapTreeModule$$$find: while (true) {\n    switch (m$$4.tag) {\n      case 1:\n        {\n          const v2$$1 = m$$4.fields[1];\n          const k2$$2 = m$$4.fields[0];\n          const c$$2 = comparer$$1.Compare(k$$3, k2$$2) | 0;\n\n          if (c$$2 === 0) {\n            return v2$$1;\n          } else {\n            throw new Error(\"key not found\");\n          }\n        }\n\n      case 2:\n        {\n          const v2$$2 = m$$4.fields[1];\n          const r$$3 = m$$4.fields[3];\n          const l$$3 = m$$4.fields[2];\n          const k2$$3 = m$$4.fields[0];\n          const c$$3 = comparer$$1.Compare(k$$3, k2$$3) | 0;\n\n          if (c$$3 < 0) {\n            const $comparer$$1$$7 = comparer$$1;\n            const $k$$3$$8 = k$$3;\n            comparer$$1 = $comparer$$1$$7;\n            k$$3 = $k$$3$$8;\n            m$$4 = l$$3;\n            continue MapTreeModule$$$find;\n          } else if (c$$3 === 0) {\n            return v2$$2;\n          } else {\n            const $comparer$$1$$9 = comparer$$1;\n            const $k$$3$$10 = k$$3;\n            comparer$$1 = $comparer$$1$$9;\n            k$$3 = $k$$3$$10;\n            m$$4 = r$$3;\n            continue MapTreeModule$$$find;\n          }\n        }\n\n      default:\n        {\n          throw new Error(\"key not found\");\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryFind(comparer$$2, k$$4, m$$5) {\n  MapTreeModule$$$tryFind: while (true) {\n    switch (m$$5.tag) {\n      case 1:\n        {\n          const v2$$3 = m$$5.fields[1];\n          const k2$$4 = m$$5.fields[0];\n          const c$$4 = comparer$$2.Compare(k$$4, k2$$4) | 0;\n\n          if (c$$4 === 0) {\n            return some(v2$$3);\n          } else {\n            return null;\n          }\n        }\n\n      case 2:\n        {\n          const v2$$4 = m$$5.fields[1];\n          const r$$4 = m$$5.fields[3];\n          const l$$4 = m$$5.fields[2];\n          const k2$$5 = m$$5.fields[0];\n          const c$$5 = comparer$$2.Compare(k$$4, k2$$5) | 0;\n\n          if (c$$5 < 0) {\n            const $comparer$$2$$11 = comparer$$2;\n            const $k$$4$$12 = k$$4;\n            comparer$$2 = $comparer$$2$$11;\n            k$$4 = $k$$4$$12;\n            m$$5 = l$$4;\n            continue MapTreeModule$$$tryFind;\n          } else if (c$$5 === 0) {\n            return some(v2$$4);\n          } else {\n            const $comparer$$2$$13 = comparer$$2;\n            const $k$$4$$14 = k$$4;\n            comparer$$2 = $comparer$$2$$13;\n            k$$4 = $k$$4$$14;\n            m$$5 = r$$4;\n            continue MapTreeModule$$$tryFind;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition1(comparer$$3, f, k$$5, v$$3, acc1, acc2) {\n  if (f(k$$5, v$$3)) {\n    return [MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc1), acc2];\n  } else {\n    return [acc1, MapTreeModule$$$add(comparer$$3, k$$5, v$$3, acc2)];\n  }\n}\nexport function MapTreeModule$$$partitionAux($arg$$21, $arg$$22, $arg$$23, $arg$$24, $arg$$25) {\n  MapTreeModule$$$partitionAux: while (true) {\n    const comparer$$4 = $arg$$21,\n          f$$1 = $arg$$22,\n          s = $arg$$23,\n          acc_0 = $arg$$24,\n          acc_1 = $arg$$25;\n    const acc$$1 = [acc_0, acc_1];\n\n    switch (s.tag) {\n      case 1:\n        {\n          const v$$4 = s.fields[1];\n          const k$$6 = s.fields[0];\n          return MapTreeModule$$$partition1(comparer$$4, f$$1, k$$6, v$$4, acc$$1[0], acc$$1[1]);\n        }\n\n      case 2:\n        {\n          const v$$5 = s.fields[1];\n          const r$$5 = s.fields[3];\n          const l$$5 = s.fields[2];\n          const k$$7 = s.fields[0];\n          const acc$$2 = MapTreeModule$$$partitionAux(comparer$$4, f$$1, r$$5, acc$$1[0], acc$$1[1]);\n          const acc$$3 = MapTreeModule$$$partition1(comparer$$4, f$$1, k$$7, v$$5, acc$$2[0], acc$$2[1]);\n          $arg$$21 = comparer$$4;\n          $arg$$22 = f$$1;\n          $arg$$23 = l$$5;\n          $arg$$24 = acc$$3[0];\n          $arg$$25 = acc$$3[1];\n          continue MapTreeModule$$$partitionAux;\n        }\n\n      default:\n        {\n          return acc$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$partition(comparer$$5, f$$2, s$$1) {\n  return MapTreeModule$$$partitionAux(comparer$$5, f$$2, s$$1, MapTreeModule$$$empty(), MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$filter1(comparer$$6, f$$3, k$$8, v$$6, acc$$4) {\n  if (f$$3(k$$8, v$$6)) {\n    return MapTreeModule$$$add(comparer$$6, k$$8, v$$6, acc$$4);\n  } else {\n    return acc$$4;\n  }\n}\nexport function MapTreeModule$$$filterAux($arg$$34, $arg$$35, $arg$$36, $arg$$37) {\n  MapTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$34,\n          f$$4 = $arg$$35,\n          s$$2 = $arg$$36,\n          acc$$5 = $arg$$37;\n\n    switch (s$$2.tag) {\n      case 1:\n        {\n          const v$$7 = s$$2.fields[1];\n          const k$$9 = s$$2.fields[0];\n          return MapTreeModule$$$filter1(comparer$$7, f$$4, k$$9, v$$7, acc$$5);\n        }\n\n      case 2:\n        {\n          const v$$8 = s$$2.fields[1];\n          const r$$6 = s$$2.fields[3];\n          const l$$6 = s$$2.fields[2];\n          const k$$10 = s$$2.fields[0];\n          const acc$$6 = MapTreeModule$$$filterAux(comparer$$7, f$$4, l$$6, acc$$5);\n          const acc$$7 = MapTreeModule$$$filter1(comparer$$7, f$$4, k$$10, v$$8, acc$$6);\n          $arg$$34 = comparer$$7;\n          $arg$$35 = f$$4;\n          $arg$$36 = r$$6;\n          $arg$$37 = acc$$7;\n          continue MapTreeModule$$$filterAux;\n        }\n\n      default:\n        {\n          return acc$$5;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$filter(comparer$$8, f$$5, s$$3) {\n  return MapTreeModule$$$filterAux(comparer$$8, f$$5, s$$3, MapTreeModule$$$empty());\n}\nexport function MapTreeModule$$$spliceOutSuccessor(m$$6) {\n  switch (m$$6.tag) {\n    case 1:\n      {\n        const v2$$5 = m$$6.fields[1];\n        const k2$$6 = m$$6.fields[0];\n        return [k2$$6, v2$$5, new MapTree$00602(0, \"MapEmpty\")];\n      }\n\n    case 2:\n      {\n        const v2$$6 = m$$6.fields[1];\n        const r$$7 = m$$6.fields[3];\n        const l$$7 = m$$6.fields[2];\n        const k2$$7 = m$$6.fields[0];\n\n        if (l$$7.tag === 0) {\n          return [k2$$7, v2$$6, r$$7];\n        } else {\n          const patternInput = MapTreeModule$$$spliceOutSuccessor(l$$7);\n          return [patternInput[0], patternInput[1], MapTreeModule$$$mk(patternInput[2], k2$$7, v2$$6, r$$7)];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Map.spliceOutSuccessor\");\n      }\n  }\n}\nexport function MapTreeModule$$$remove(comparer$$9, k$$11, m$$7) {\n  switch (m$$7.tag) {\n    case 1:\n      {\n        const k2$$8 = m$$7.fields[0];\n        const c$$6 = comparer$$9.Compare(k$$11, k2$$8) | 0;\n\n        if (c$$6 === 0) {\n          return new MapTree$00602(0, \"MapEmpty\");\n        } else {\n          return m$$7;\n        }\n      }\n\n    case 2:\n      {\n        const v2$$7 = m$$7.fields[1];\n        const r$$8 = m$$7.fields[3];\n        const l$$8 = m$$7.fields[2];\n        const k2$$9 = m$$7.fields[0];\n        const c$$7 = comparer$$9.Compare(k$$11, k2$$9) | 0;\n\n        if (c$$7 < 0) {\n          return MapTreeModule$$$rebalance(MapTreeModule$$$remove(comparer$$9, k$$11, l$$8), k2$$9, v2$$7, r$$8);\n        } else if (c$$7 === 0) {\n          const matchValue$$1 = [l$$8, r$$8];\n\n          if (matchValue$$1[0].tag === 0) {\n            return r$$8;\n          } else if (matchValue$$1[1].tag === 0) {\n            return l$$8;\n          } else {\n            const patternInput$$1 = MapTreeModule$$$spliceOutSuccessor(r$$8);\n            return MapTreeModule$$$mk(l$$8, patternInput$$1[0], patternInput$$1[1], patternInput$$1[2]);\n          }\n        } else {\n          return MapTreeModule$$$rebalance(l$$8, k2$$9, v2$$7, MapTreeModule$$$remove(comparer$$9, k$$11, r$$8));\n        }\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mem(comparer$$10, k$$12, m$$8) {\n  MapTreeModule$$$mem: while (true) {\n    switch (m$$8.tag) {\n      case 1:\n        {\n          const k2$$10 = m$$8.fields[0];\n          return comparer$$10.Compare(k$$12, k2$$10) === 0;\n        }\n\n      case 2:\n        {\n          const r$$9 = m$$8.fields[3];\n          const l$$9 = m$$8.fields[2];\n          const k2$$11 = m$$8.fields[0];\n          const c$$8 = comparer$$10.Compare(k$$12, k2$$11) | 0;\n\n          if (c$$8 < 0) {\n            const $comparer$$10$$41 = comparer$$10;\n            const $k$$12$$42 = k$$12;\n            comparer$$10 = $comparer$$10$$41;\n            k$$12 = $k$$12$$42;\n            m$$8 = l$$9;\n            continue MapTreeModule$$$mem;\n          } else if (c$$8 === 0) {\n            return true;\n          } else {\n            const $comparer$$10$$43 = comparer$$10;\n            const $k$$12$$44 = k$$12;\n            comparer$$10 = $comparer$$10$$43;\n            k$$12 = $k$$12$$44;\n            m$$8 = r$$9;\n            continue MapTreeModule$$$mem;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$iter($arg$$45, $arg$$46) {\n  MapTreeModule$$$iter: while (true) {\n    const f$$6 = $arg$$45,\n          m$$9 = $arg$$46;\n\n    switch (m$$9.tag) {\n      case 1:\n        {\n          const v2$$8 = m$$9.fields[1];\n          const k2$$12 = m$$9.fields[0];\n          f$$6(k2$$12, v2$$8);\n          break;\n        }\n\n      case 2:\n        {\n          const v2$$9 = m$$9.fields[1];\n          const r$$10 = m$$9.fields[3];\n          const l$$10 = m$$9.fields[2];\n          const k2$$13 = m$$9.fields[0];\n          MapTreeModule$$$iter(f$$6, l$$10);\n          f$$6(k2$$13, v2$$9);\n          $arg$$45 = f$$6;\n          $arg$$46 = r$$10;\n          continue MapTreeModule$$$iter;\n          break;\n        }\n\n      default:\n        {}\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$tryPick($arg$$47, $arg$$48) {\n  MapTreeModule$$$tryPick: while (true) {\n    const f$$7 = $arg$$47,\n          m$$10 = $arg$$48;\n\n    switch (m$$10.tag) {\n      case 1:\n        {\n          const v2$$10 = m$$10.fields[1];\n          const k2$$14 = m$$10.fields[0];\n          return f$$7(k2$$14, v2$$10);\n        }\n\n      case 2:\n        {\n          const v2$$11 = m$$10.fields[1];\n          const r$$11 = m$$10.fields[3];\n          const l$$11 = m$$10.fields[2];\n          const k2$$15 = m$$10.fields[0];\n          const matchValue$$2 = MapTreeModule$$$tryPick(f$$7, l$$11);\n\n          if (matchValue$$2 == null) {\n            const matchValue$$3 = f$$7(k2$$15, v2$$11);\n\n            if (matchValue$$3 == null) {\n              $arg$$47 = f$$7;\n              $arg$$48 = r$$11;\n              continue MapTreeModule$$$tryPick;\n            } else {\n              const res$$1 = matchValue$$3;\n              return res$$1;\n            }\n          } else {\n            const res = matchValue$$2;\n            return res;\n          }\n        }\n\n      default:\n        {\n          return null;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$exists($arg$$49, $arg$$50) {\n  MapTreeModule$$$exists: while (true) {\n    const f$$8 = $arg$$49,\n          m$$11 = $arg$$50;\n\n    switch (m$$11.tag) {\n      case 1:\n        {\n          const v2$$12 = m$$11.fields[1];\n          const k2$$16 = m$$11.fields[0];\n          return f$$8(k2$$16, v2$$12);\n        }\n\n      case 2:\n        {\n          const v2$$13 = m$$11.fields[1];\n          const r$$12 = m$$11.fields[3];\n          const l$$12 = m$$11.fields[2];\n          const k2$$17 = m$$11.fields[0];\n\n          if (MapTreeModule$$$exists(f$$8, l$$12) ? true : f$$8(k2$$17, v2$$13)) {\n            return true;\n          } else {\n            $arg$$49 = f$$8;\n            $arg$$50 = r$$12;\n            continue MapTreeModule$$$exists;\n          }\n        }\n\n      default:\n        {\n          return false;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$forall($arg$$51, $arg$$52) {\n  MapTreeModule$$$forall: while (true) {\n    const f$$9 = $arg$$51,\n          m$$12 = $arg$$52;\n\n    switch (m$$12.tag) {\n      case 1:\n        {\n          const v2$$14 = m$$12.fields[1];\n          const k2$$18 = m$$12.fields[0];\n          return f$$9(k2$$18, v2$$14);\n        }\n\n      case 2:\n        {\n          const v2$$15 = m$$12.fields[1];\n          const r$$13 = m$$12.fields[3];\n          const l$$13 = m$$12.fields[2];\n          const k2$$19 = m$$12.fields[0];\n\n          if (MapTreeModule$$$forall(f$$9, l$$13) ? f$$9(k2$$19, v2$$15) : false) {\n            $arg$$51 = f$$9;\n            $arg$$52 = r$$13;\n            continue MapTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n\n      default:\n        {\n          return true;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$map(f$$10, m$$13) {\n  switch (m$$13.tag) {\n    case 1:\n      {\n        const v$$9 = m$$13.fields[1];\n        const k$$13 = m$$13.fields[0];\n        return new MapTree$00602(1, \"MapOne\", k$$13, f$$10(v$$9));\n      }\n\n    case 2:\n      {\n        const v$$10 = m$$13.fields[1];\n        const r$$14 = m$$13.fields[3];\n        const l$$14 = m$$13.fields[2];\n        const k$$14 = m$$13.fields[0];\n        const h$$2 = m$$13.fields[4] | 0;\n        const l2 = MapTreeModule$$$map(f$$10, l$$14);\n        const v2$$16 = f$$10(v$$10);\n        const r2 = MapTreeModule$$$map(f$$10, r$$14);\n        return new MapTree$00602(2, \"MapNode\", k$$14, v2$$16, l2, r2, h$$2);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$mapi(f$$11, m$$14) {\n  switch (m$$14.tag) {\n    case 1:\n      {\n        const v$$11 = m$$14.fields[1];\n        const k$$15 = m$$14.fields[0];\n        return new MapTree$00602(1, \"MapOne\", k$$15, f$$11(k$$15, v$$11));\n      }\n\n    case 2:\n      {\n        const v$$12 = m$$14.fields[1];\n        const r$$15 = m$$14.fields[3];\n        const l$$15 = m$$14.fields[2];\n        const k$$16 = m$$14.fields[0];\n        const h$$3 = m$$14.fields[4] | 0;\n        const l2$$1 = MapTreeModule$$$mapi(f$$11, l$$15);\n        const v2$$17 = f$$11(k$$16, v$$12);\n        const r2$$1 = MapTreeModule$$$mapi(f$$11, r$$15);\n        return new MapTree$00602(2, \"MapNode\", k$$16, v2$$17, l2$$1, r2$$1, h$$3);\n      }\n\n    default:\n      {\n        return MapTreeModule$$$empty();\n      }\n  }\n}\nexport function MapTreeModule$$$foldBack($arg$$57, $arg$$58, $arg$$59) {\n  MapTreeModule$$$foldBack: while (true) {\n    const f$$12 = $arg$$57,\n          m$$15 = $arg$$58,\n          x$$1 = $arg$$59;\n\n    switch (m$$15.tag) {\n      case 1:\n        {\n          const v$$13 = m$$15.fields[1];\n          const k$$17 = m$$15.fields[0];\n          return f$$12(k$$17, v$$13, x$$1);\n        }\n\n      case 2:\n        {\n          const v$$14 = m$$15.fields[1];\n          const r$$16 = m$$15.fields[3];\n          const l$$16 = m$$15.fields[2];\n          const k$$18 = m$$15.fields[0];\n          const x$$2 = MapTreeModule$$$foldBack(f$$12, r$$16, x$$1);\n          const x$$3 = f$$12(k$$18, v$$14, x$$2);\n          $arg$$57 = f$$12;\n          $arg$$58 = l$$16;\n          $arg$$59 = x$$3;\n          continue MapTreeModule$$$foldBack;\n        }\n\n      default:\n        {\n          return x$$1;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$fold($arg$$60, $arg$$61, $arg$$62) {\n  MapTreeModule$$$fold: while (true) {\n    const f$$13 = $arg$$60,\n          x$$4 = $arg$$61,\n          m$$16 = $arg$$62;\n\n    switch (m$$16.tag) {\n      case 1:\n        {\n          const v$$15 = m$$16.fields[1];\n          const k$$19 = m$$16.fields[0];\n          return f$$13(x$$4, k$$19, v$$15);\n        }\n\n      case 2:\n        {\n          const v$$16 = m$$16.fields[1];\n          const r$$17 = m$$16.fields[3];\n          const l$$17 = m$$16.fields[2];\n          const k$$20 = m$$16.fields[0];\n          const x$$5 = MapTreeModule$$$fold(f$$13, x$$4, l$$17);\n          const x$$6 = f$$13(x$$5, k$$20, v$$16);\n          $arg$$60 = f$$13;\n          $arg$$61 = x$$6;\n          $arg$$62 = r$$17;\n          continue MapTreeModule$$$fold;\n        }\n\n      default:\n        {\n          return x$$4;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, m$$17, x$$7) {\n  switch (m$$17.tag) {\n    case 1:\n      {\n        const v$$17 = m$$17.fields[1];\n        const k$$21 = m$$17.fields[0];\n        const cLoKey = comparer$$11.Compare(lo, k$$21) | 0;\n        const cKeyHi = comparer$$11.Compare(k$$21, hi) | 0;\n        const x$$8 = (cLoKey <= 0 ? cKeyHi <= 0 : false) ? f$$14(k$$21, v$$17, x$$7) : x$$7;\n        return x$$8;\n      }\n\n    case 2:\n      {\n        const v$$18 = m$$17.fields[1];\n        const r$$18 = m$$17.fields[3];\n        const l$$18 = m$$17.fields[2];\n        const k$$22 = m$$17.fields[0];\n        const cLoKey$$1 = comparer$$11.Compare(lo, k$$22) | 0;\n        const cKeyHi$$1 = comparer$$11.Compare(k$$22, hi) | 0;\n        const x$$9 = cLoKey$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, l$$18, x$$7) : x$$7;\n        const x$$10 = (cLoKey$$1 <= 0 ? cKeyHi$$1 <= 0 : false) ? f$$14(k$$22, v$$18, x$$9) : x$$9;\n        const x$$11 = cKeyHi$$1 < 0 ? MapTreeModule$$$foldFromTo(comparer$$11, lo, hi, f$$14, r$$18, x$$10) : x$$10;\n        return x$$11;\n      }\n\n    default:\n      {\n        return x$$7;\n      }\n  }\n}\nexport function MapTreeModule$$$foldSection(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12) {\n  if (comparer$$12.Compare(lo$$1, hi$$1) === 1) {\n    return x$$12;\n  } else {\n    return MapTreeModule$$$foldFromTo(comparer$$12, lo$$1, hi$$1, f$$15, m$$18, x$$12);\n  }\n}\nexport function MapTreeModule$$$loop(m$$19, acc$$8) {\n  MapTreeModule$$$loop: while (true) {\n    switch (m$$19.tag) {\n      case 1:\n        {\n          const v$$19 = m$$19.fields[1];\n          const k$$23 = m$$19.fields[0];\n          return new List([k$$23, v$$19], acc$$8);\n        }\n\n      case 2:\n        {\n          const v$$20 = m$$19.fields[1];\n          const r$$19 = m$$19.fields[3];\n          const l$$19 = m$$19.fields[2];\n          const k$$24 = m$$19.fields[0];\n          const $acc$$8$$75 = acc$$8;\n          m$$19 = l$$19;\n          acc$$8 = new List([k$$24, v$$20], MapTreeModule$$$loop(r$$19, $acc$$8$$75));\n          continue MapTreeModule$$$loop;\n        }\n\n      default:\n        {\n          return acc$$8;\n        }\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$toList(m$$20) {\n  return MapTreeModule$$$loop(m$$20, new List());\n}\nexport function MapTreeModule$$$ofList(comparer$$13, l$$20) {\n  return fold$$1(function (acc$$9, tupledArg) {\n    return MapTreeModule$$$add(comparer$$13, tupledArg[0], tupledArg[1], acc$$9);\n  }, MapTreeModule$$$empty(), l$$20);\n}\nexport function MapTreeModule$$$mkFromEnumerator(comparer$$14, acc$$10, e) {\n  MapTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const patternInput$$2 = e.Current;\n      const $acc$$10$$77 = acc$$10;\n      const $comparer$$14$$76 = comparer$$14;\n      const $e$$78 = e;\n      comparer$$14 = $comparer$$14$$76;\n      acc$$10 = MapTreeModule$$$add($comparer$$14$$76, patternInput$$2[0], patternInput$$2[1], $acc$$10$$77);\n      e = $e$$78;\n      continue MapTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$10;\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$ofArray(comparer$$15, arr) {\n  let res$$2 = MapTreeModule$$$empty();\n\n  for (let i = 0; i <= arr.length - 1; i++) {\n    const patternInput$$3 = arr[i];\n    res$$2 = MapTreeModule$$$add(comparer$$15, patternInput$$3[0], patternInput$$3[1], res$$2);\n  }\n\n  return res$$2;\n}\nexport function MapTreeModule$$$ofSeq(comparer$$16, c$$9) {\n  const ie = getEnumerator(c$$9);\n\n  try {\n    return MapTreeModule$$$mkFromEnumerator(comparer$$16, MapTreeModule$$$empty(), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function MapTreeModule$$$copyToArray(s$$4, arr$$1, i$$1) {\n  let j = i$$1 | 0;\n  MapTreeModule$$$iter(function f$$16(x$$15, y$$2) {\n    arr$$1[j] = [x$$15, y$$2];\n    j = j + 1;\n  }, s$$4);\n}\nexport const MapTreeModule$002EMapIterator$00602 = declare(function Map_MapTreeModule_MapIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function MapTreeModule$002EMapIterator$00602$reflection($gen$$79, $gen$$80) {\n  return record(\"Map.MapTreeModule.MapIterator`2\", [$gen$$79, $gen$$80], MapTreeModule$002EMapIterator$00602, () => [[\"stack\", list(MapTree$00602$reflection($gen$$79, $gen$$80))], [\"started\", bool]]);\n}\nexport function MapTreeModule$$$collapseLHS(stack) {\n  MapTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 1) {\n        return stack;\n      } else if (stack.head.tag === 2) {\n        const $stack$$81 = stack;\n        stack = new List($stack$$81.head.fields[2], new List(new MapTree$00602(1, \"MapOne\", $stack$$81.head.fields[0], $stack$$81.head.fields[1]), new List($stack$$81.head.fields[3], $stack$$81.tail)));\n        continue MapTreeModule$$$collapseLHS;\n      } else {\n        const $stack$$82 = stack;\n        stack = $stack$$82.tail;\n        continue MapTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function MapTreeModule$$$mkIterator(s$$5) {\n  return new MapTreeModule$002EMapIterator$00602(MapTreeModule$$$collapseLHS(new List(s$$5, new List())), false);\n}\nexport function MapTreeModule$$$notStarted() {\n  throw new Error(\"enumeration not started\");\n}\nexport function MapTreeModule$$$alreadyFinished() {\n  throw new Error(\"enumeration already finished\");\n}\nexport function MapTreeModule$$$current(i$$2) {\n  if (i$$2.started) {\n    const matchValue$$4 = i$$2.stack;\n\n    if (matchValue$$4.tail == null) {\n      return MapTreeModule$$$alreadyFinished();\n    } else if (matchValue$$4.head.tag === 1) {\n      return [matchValue$$4.head.fields[0], matchValue$$4.head.fields[1]];\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for current\");\n    }\n  } else {\n    return MapTreeModule$$$notStarted();\n  }\n}\nexport function MapTreeModule$$$moveNext(i$$3) {\n  if (i$$3.started) {\n    const matchValue$$5 = i$$3.stack;\n\n    if (matchValue$$5.tail == null) {\n      return false;\n    } else if (matchValue$$5.head.tag === 1) {\n      i$$3.stack = MapTreeModule$$$collapseLHS(matchValue$$5.tail);\n      return !(i$$3.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Map iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$3.started = true;\n    return !(i$$3.stack.tail == null);\n  }\n}\nexport const MapTreeModule$002EmkIEnumerator$0027$00602 = declare(function Map_MapTreeModule_mkIEnumerator_(s$$6) {\n  const $this$$1 = this;\n  $this$$1.s = s$$6;\n  $this$$1.i = MapTreeModule$$$mkIterator($this$$1.s);\n});\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$reflection($gen$$83, $gen$$84) {\n  return type(\"Map.MapTreeModule.mkIEnumerator'`2\", [$gen$$83, $gen$$84]);\n}\nexport function MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$6) {\n  return this instanceof MapTreeModule$002EmkIEnumerator$0027$00602 ? MapTreeModule$002EmkIEnumerator$0027$00602.call(this, s$$6) : new MapTreeModule$002EmkIEnumerator$0027$00602(s$$6);\n}\nObject.defineProperty(MapTreeModule$002EmkIEnumerator$0027$00602.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return MapTreeModule$$$current(__.i);\n  }\n});\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return MapTreeModule$$$moveNext(__$$1.i);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = MapTreeModule$$$mkIterator(__$$2.s);\n};\n\nMapTreeModule$002EmkIEnumerator$0027$00602.prototype.Dispose = function () {};\n\nexport function MapTreeModule$$$mkIEnumerator(s$$7) {\n  return MapTreeModule$002EmkIEnumerator$0027$00602$$$$002Ector$$Z26BC498C(s$$7);\n}\nexport function MapTreeModule$$$toSeq(s$$8) {\n  const en = MapTreeModule$$$mkIEnumerator(s$$8);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport const FSharpMap = declare(function Map_Map(comparer$$17, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$17;\n  $this$$2.tree = tree;\n});\nexport function FSharpMap$reflection($gen$$85, $gen$$86) {\n  return type(\"Map.FSharpMap\", [$gen$$85, $gen$$86]);\n}\nexport function FSharpMap$$$$002Ector$$58ADD115(comparer$$17, tree) {\n  return this instanceof FSharpMap ? FSharpMap.call(this, comparer$$17, tree) : new FSharpMap(comparer$$17, tree);\n}\nexport function FSharpMap$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpMap$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpMap$$Add$$5BDDA1(__$$6, k$$28, v$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$6.comparer, MapTreeModule$$$add(__$$6.comparer, k$$28, v$$24, __$$6.tree));\n}\nexport function FSharpMap$$get_IsEmpty(__$$7) {\n  return MapTreeModule$$$isEmpty(__$$7.tree);\n}\nexport function FSharpMap$$get_Item$$2B595(__$$8, k$$29) {\n  return MapTreeModule$$$find(__$$8.comparer, k$$29, __$$8.tree);\n}\nexport function FSharpMap$$TryGetValue$$5BDDA1(__$$9, k$$30, defValue) {\n  const matchValue$$6 = MapTreeModule$$$tryFind(__$$9.comparer, k$$30, __$$9.tree);\n\n  if (matchValue$$6 == null) {\n    return [false, defValue];\n  } else {\n    const v$$25 = value$$3(matchValue$$6);\n    return [true, v$$25];\n  }\n}\nexport function FSharpMap$$TryPick$$72321DD7(__$$10, f$$17) {\n  return MapTreeModule$$$tryPick(f$$17, __$$10.tree);\n}\nexport function FSharpMap$$Exists$$Z395DDC35(__$$11, f$$18) {\n  return MapTreeModule$$$exists(f$$18, __$$11.tree);\n}\nexport function FSharpMap$$Filter$$Z395DDC35(__$$12, f$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$12.comparer, MapTreeModule$$$filter(__$$12.comparer, f$$19, __$$12.tree));\n}\nexport function FSharpMap$$ForAll$$Z395DDC35(__$$13, f$$20) {\n  return MapTreeModule$$$forall(f$$20, __$$13.tree);\n}\nexport function FSharpMap$$Fold(__$$14, f$$21, acc$$11) {\n  return MapTreeModule$$$foldBack(f$$21, __$$14.tree, acc$$11);\n}\nexport function FSharpMap$$FoldSection(__$$15, lo$$2, hi$$2, f$$22, acc$$12) {\n  return MapTreeModule$$$foldSection(__$$15.comparer, lo$$2, hi$$2, f$$22, __$$15.tree, acc$$12);\n}\nexport function FSharpMap$$Iterate$$1DCFB91D(__$$16, f$$23) {\n  MapTreeModule$$$iter(f$$23, __$$16.tree);\n}\nexport function FSharpMap$$MapRange$$6DC7247(__$$17, f$$24) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$17.comparer, MapTreeModule$$$map(f$$24, __$$17.tree));\n}\nexport function FSharpMap$$Map$$Z6F6B671C(__$$18, f$$25) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$18.comparer, MapTreeModule$$$mapi(f$$25, __$$18.tree));\n}\nexport function FSharpMap$$Partition$$Z395DDC35(__$$19, f$$26) {\n  const patternInput$$4 = MapTreeModule$$$partition(__$$19.comparer, f$$26, __$$19.tree);\n  return [FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[0]), FSharpMap$$$$002Ector$$58ADD115(__$$19.comparer, patternInput$$4[1])];\n}\nexport function FSharpMap$$get_Count(__$$20) {\n  return MapTreeModule$$$size(__$$20.tree);\n}\nexport function FSharpMap$$ContainsKey$$2B595(__$$21, k$$31) {\n  return MapTreeModule$$$mem(__$$21.comparer, k$$31, __$$21.tree);\n}\nexport function FSharpMap$$Remove$$2B595(__$$22, k$$32) {\n  return FSharpMap$$$$002Ector$$58ADD115(__$$22.comparer, MapTreeModule$$$remove(__$$22.comparer, k$$32, __$$22.tree));\n}\nexport function FSharpMap$$TryFind$$2B595(__$$23, k$$33) {\n  return MapTreeModule$$$tryFind(__$$23.comparer, k$$33, __$$23.tree);\n}\nexport function FSharpMap$$ToList(__$$24) {\n  return MapTreeModule$$$toList(__$$24.tree);\n}\n\nFSharpMap.prototype.toString = function () {\n  const this$ = this;\n  return \"map [\" + join(\"; \", ...map$$1(function mapping(kv) {\n    return toText(printf(\"(%A, %A)\"))(kv[0])(kv[1]);\n  }, this$)) + \"]\";\n};\n\nFSharpMap.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$16, y$$3) {\n    return (x$$16 << 1) + y$$3 + 631;\n  };\n\n  let res$$3 = 0;\n  const e$$1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    const activePatternResult3090 = e$$1.Current;\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3090[0]));\n    res$$3 = combineHash(res$$3, structuralHash(activePatternResult3090[1]));\n  }\n\n  return Math.abs(res$$3) | 0;\n};\n\nFSharpMap.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return this$$$2.CompareTo(that) === 0;\n};\n\nFSharpMap.prototype[Symbol.iterator] = function () {\n  const __$$25 = this;\n  return toIterator(MapTreeModule$$$mkIEnumerator(__$$25.tree));\n};\n\nFSharpMap.prototype.CompareTo = function (obj) {\n  const m$$22 = this;\n  const m2 = obj;\n  let res$$4 = 0;\n  let finished = false;\n  const e1 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m$$22));\n\n  try {\n    const e2 = MapTreeModule$$$mkIEnumerator(FSharpMap$$get_Tree(m2));\n\n    try {\n      while (!finished ? res$$4 === 0 : false) {\n        const matchValue$$7 = [e1.MoveNext(), e2.MoveNext()];\n\n        if (matchValue$$7[0]) {\n          if (matchValue$$7[1]) {\n            const kvp1 = e1.Current;\n            const kvp2 = e2.Current;\n            const c$$10 = m$$22.comparer.Compare(kvp1[0], kvp2[0]) | 0;\n            res$$4 = c$$10 !== 0 ? c$$10 : compare(kvp1[1], kvp2[1]);\n          } else {\n            res$$4 = 1;\n          }\n        } else if (matchValue$$7[1]) {\n          res$$4 = -1;\n        } else {\n          finished = true;\n        }\n      }\n\n      return res$$4 | 0;\n    } finally {\n      if (isDisposable(e2)) {\n        e2.Dispose();\n      }\n    }\n  } finally {\n    if (isDisposable(e1)) {\n      e1.Dispose();\n    }\n  }\n};\n\nexport function isEmpty(m$$23) {\n  return FSharpMap$$get_IsEmpty(m$$23);\n}\nexport function add(k$$34, v$$26, m$$24) {\n  return FSharpMap$$Add$$5BDDA1(m$$24, k$$34, v$$26);\n}\nexport function find(k$$35, m$$25) {\n  return FSharpMap$$get_Item$$2B595(m$$25, k$$35);\n}\nexport function tryFind(k$$36, m$$26) {\n  return FSharpMap$$TryFind$$2B595(m$$26, k$$36);\n}\nexport function remove(k$$37, m$$27) {\n  return FSharpMap$$Remove$$2B595(m$$27, k$$37);\n}\nexport function containsKey(k$$38, m$$28) {\n  return FSharpMap$$ContainsKey$$2B595(m$$28, k$$38);\n}\nexport function iterate(f$$27, m$$29) {\n  FSharpMap$$Iterate$$1DCFB91D(m$$29, f$$27);\n}\nexport function tryPick(f$$28, m$$30) {\n  return FSharpMap$$TryPick$$72321DD7(m$$30, f$$28);\n}\nexport function pick(f$$29, m$$31) {\n  const matchValue$$8 = tryPick(f$$29, m$$31);\n\n  if (matchValue$$8 != null) {\n    const res$$5 = value$$3(matchValue$$8);\n    return res$$5;\n  } else {\n    throw new Error(\"key not found\");\n  }\n}\nexport function exists(f$$30, m$$32) {\n  return FSharpMap$$Exists$$Z395DDC35(m$$32, f$$30);\n}\nexport function filter(f$$31, m$$33) {\n  return FSharpMap$$Filter$$Z395DDC35(m$$33, f$$31);\n}\nexport function partition(f$$32, m$$34) {\n  return FSharpMap$$Partition$$Z395DDC35(m$$34, f$$32);\n}\nexport function forAll(f$$33, m$$35) {\n  return FSharpMap$$ForAll$$Z395DDC35(m$$35, f$$33);\n}\nexport function mapRange(f$$34, m$$36) {\n  return FSharpMap$$MapRange$$6DC7247(m$$36, f$$34);\n}\nexport function map(f$$35, m$$37) {\n  return FSharpMap$$Map$$Z6F6B671C(m$$37, f$$35);\n}\nexport function fold(f$$36, z, m$$38) {\n  return MapTreeModule$$$fold(f$$36, z, FSharpMap$$get_Tree(m$$38));\n}\nexport function foldBack(f$$37, m$$39, z$$1) {\n  return MapTreeModule$$$foldBack(f$$37, FSharpMap$$get_Tree(m$$39), z$$1);\n}\nexport function toSeq(m$$40) {\n  return MapTreeModule$$$toSeq(FSharpMap$$get_Tree(m$$40));\n}\nexport function findKey(f$$38, m$$41) {\n  const _arg1$$1 = MapTreeModule$$$tryPick(function f$$39(k$$39, v$$27) {\n    if (f$$38(k$$39, v$$27)) {\n      return some(k$$39);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$41));\n\n  if (_arg1$$1 == null) {\n    throw new Error(\"Key not found\");\n  } else {\n    const k$$40 = value$$3(_arg1$$1);\n    return k$$40;\n  }\n}\nexport function tryFindKey(f$$40, m$$43) {\n  return MapTreeModule$$$tryPick(function f$$41(k$$41, v$$28) {\n    if (f$$40(k$$41, v$$28)) {\n      return some(k$$41);\n    } else {\n      return null;\n    }\n  }, FSharpMap$$get_Tree(m$$43));\n}\nexport function ofList(l$$22, comparer$$18) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$18, MapTreeModule$$$ofList(comparer$$18, l$$22));\n}\nexport function ofSeq(l$$23, comparer$$19) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$19, MapTreeModule$$$ofSeq(comparer$$19, l$$23));\n}\nexport function ofArray(array, comparer$$20) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$20, MapTreeModule$$$ofArray(comparer$$20, array));\n}\nexport function toList(m$$45) {\n  return FSharpMap$$ToList(m$$45);\n}\nexport function toArray(m$$46) {\n  const res$$6 = new Array(FSharpMap$$get_Count(m$$46));\n  MapTreeModule$$$copyToArray(FSharpMap$$get_Tree(m$$46), res$$6, 0);\n  return res$$6;\n}\nexport function empty(comparer$$21) {\n  return FSharpMap$$$$002Ector$$58ADD115(comparer$$21, new MapTree$00602(0, \"MapEmpty\"));\n}\n\nfunction createMutablePrivate(comparer$$22, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return MapTreeModule$$$size(tree$$1);\n    },\n\n    clear() {\n      tree$$1 = new MapTree$00602(0, \"MapEmpty\");\n    },\n\n    delete(x$$18) {\n      if (MapTreeModule$$$mem(comparer$$22, x$$18, tree$$1)) {\n        tree$$1 = MapTreeModule$$$remove(comparer$$22, x$$18, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    entries() {\n      return MapTreeModule$$$toSeq(tree$$1);\n    },\n\n    get(k$$42) {\n      return MapTreeModule$$$find(comparer$$22, k$$42, tree$$1);\n    },\n\n    has(x$$19) {\n      return MapTreeModule$$$mem(comparer$$22, x$$19, tree$$1);\n    },\n\n    keys() {\n      return map$$1(function mapping$$1(kv$$1) {\n        return kv$$1[0];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    set(k$$43, v$$29) {\n      const this$$$3 = this;\n      tree$$1 = MapTreeModule$$$add(comparer$$22, k$$43, v$$29, tree$$1);\n      return this$$$3;\n    },\n\n    values() {\n      return map$$1(function mapping$$2(kv$$2) {\n        return kv$$2[1];\n      }, MapTreeModule$$$toSeq(tree$$1));\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(MapTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return MapTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source$$3, comparer$$23) {\n  return createMutablePrivate(comparer$$23, MapTreeModule$$$ofSeq(comparer$$23, source$$3));\n}\nexport function groupBy(projection, xs, comparer$$24) {\n  const dict = createMutable(empty$$1(), comparer$$24);\n  iterate$$1(function (v$$30) {\n    const key = projection(v$$30);\n\n    if (dict.has(key)) {\n      dict.get(key).push(v$$30);\n    } else {\n      dict.set(key, Array.from([v$$30]));\n    }\n  }, xs);\n  return map$$1(function mapping$$3(kv$$3) {\n    return [kv$$3[0], kv$$3[1]];\n  }, dict);\n}\nexport function countBy(projection$$1, xs$$1, comparer$$25) {\n  const dict$$1 = createMutable(empty$$1(), comparer$$25);\n  iterate$$1(function (value$$1) {\n    const key$$1 = projection$$1(value$$1);\n    dict$$1.has(key$$1) ? dict$$1.set(key$$1, dict$$1.get(key$$1) + 1) : dict$$1.set(key$$1, 1);\n  }, xs$$1);\n  return map$$1(function mapping$$4(kv$$4) {\n    return [kv$$4[0], kv$$4[1]];\n  }, dict$$1);\n}\nexport function count(m$$47) {\n  return FSharpMap$$get_Count(m$$47);\n}","import { List, Record, declare, Union } from \"./Types.js\";\nimport { type, record, bool, list, union as union$$1, int32 } from \"./Reflection.js\";\nimport { value as value$$2, some, Choice } from \"./Option.js\";\nimport { iterate as iterate$$1, empty as empty$$1, fold as fold$$1, toIterator, map as map$$1, reduce, getEnumerator, unfold } from \"./Seq.js\";\nimport { structuralHash, isDisposable } from \"./Util.js\";\nimport { join } from \"./String.js\";\nexport const SetTree$00601 = declare(function Set_SetTree(tag, name, ...fields) {\n  Union.call(this, tag, name, ...fields);\n}, Union);\nexport function SetTree$00601$reflection($gen$$3) {\n  return union$$1(\"Set.SetTree`1\", [$gen$$3], SetTree$00601, () => [\"SetEmpty\", [\"SetNode\", [$gen$$3, SetTree$00601$reflection($gen$$3), SetTree$00601$reflection($gen$$3), int32]], [\"SetOne\", [$gen$$3]]]);\n}\nexport function SetTreeModule$$$countAux(s, acc) {\n  SetTreeModule$$$countAux: while (true) {\n    switch (s.tag) {\n      case 2:\n        {\n          return acc + 1 | 0;\n        }\n\n      case 0:\n        {\n          return acc | 0;\n        }\n\n      default:\n        {\n          const r = s.fields[2];\n          const l = s.fields[1];\n          const $acc$$4 = acc;\n          s = l;\n          acc = SetTreeModule$$$countAux(r, $acc$$4 + 1);\n          continue SetTreeModule$$$countAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$count(s$$1) {\n  return SetTreeModule$$$countAux(s$$1, 0);\n}\nexport function SetTreeModule$$$SetOne(n) {\n  return new SetTree$00601(2, \"SetOne\", n);\n}\nexport function SetTreeModule$$$SetNode(x, l$$1, r$$1, h) {\n  return new SetTree$00601(1, \"SetNode\", x, l$$1, r$$1, h);\n}\nexport function SetTreeModule$$$height(t) {\n  switch (t.tag) {\n    case 2:\n      {\n        return 1;\n      }\n\n    case 1:\n      {\n        const h$$1 = t.fields[3] | 0;\n        return h$$1 | 0;\n      }\n\n    default:\n      {\n        return 0;\n      }\n  }\n}\nexport const SetTreeModule$$$tolerance = 2;\nexport function SetTreeModule$$$mk(l$$2, k, r$$2) {\n  const matchValue = [l$$2, r$$2];\n  var $target$$5;\n\n  if (matchValue[0].tag === 0) {\n    if (matchValue[1].tag === 0) {\n      $target$$5 = 0;\n    } else {\n      $target$$5 = 1;\n    }\n  } else {\n    $target$$5 = 1;\n  }\n\n  switch ($target$$5) {\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k);\n      }\n\n    case 1:\n      {\n        const hl = SetTreeModule$$$height(l$$2) | 0;\n        const hr = SetTreeModule$$$height(r$$2) | 0;\n        const m = (hl < hr ? hr : hl) | 0;\n        return SetTreeModule$$$SetNode(k, l$$2, r$$2, m + 1);\n      }\n  }\n}\nexport function SetTreeModule$$$rebalance(t1, k$$1, t2) {\n  const t1h = SetTreeModule$$$height(t1) | 0;\n  const t2h = SetTreeModule$$$height(t2) | 0;\n\n  if (t2h > t1h + SetTreeModule$$$tolerance) {\n    if (t2.tag === 1) {\n      const t2r = t2.fields[2];\n      const t2l = t2.fields[1];\n      const t2k = t2.fields[0];\n\n      if (SetTreeModule$$$height(t2l) > t1h + 1) {\n        if (t2l.tag === 1) {\n          const t2lr = t2l.fields[2];\n          const t2ll = t2l.fields[1];\n          const t2lk = t2l.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2ll), t2lk, SetTreeModule$$$mk(t2lr, t2k, t2r));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(SetTreeModule$$$mk(t1, k$$1, t2l), t2k, t2r);\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else if (t1h > t2h + SetTreeModule$$$tolerance) {\n    if (t1.tag === 1) {\n      const t1r = t1.fields[2];\n      const t1l = t1.fields[1];\n      const t1k = t1.fields[0];\n\n      if (SetTreeModule$$$height(t1r) > t2h + 1) {\n        if (t1r.tag === 1) {\n          const t1rr = t1r.fields[2];\n          const t1rl = t1r.fields[1];\n          const t1rk = t1r.fields[0];\n          return SetTreeModule$$$mk(SetTreeModule$$$mk(t1l, t1k, t1rl), t1rk, SetTreeModule$$$mk(t1rr, k$$1, t2));\n        } else {\n          throw new Error(\"rebalance\");\n        }\n      } else {\n        return SetTreeModule$$$mk(t1l, t1k, SetTreeModule$$$mk(t1r, k$$1, t2));\n      }\n    } else {\n      throw new Error(\"rebalance\");\n    }\n  } else {\n    return SetTreeModule$$$mk(t1, k$$1, t2);\n  }\n}\nexport function SetTreeModule$$$add(comparer, k$$2, t$$1) {\n  switch (t$$1.tag) {\n    case 2:\n      {\n        const k2$$1 = t$$1.fields[0];\n        const c$$1 = comparer.Compare(k$$2, k2$$1) | 0;\n\n        if (c$$1 < 0) {\n          return SetTreeModule$$$SetNode(k$$2, new SetTree$00601(0, \"SetEmpty\"), t$$1, 2);\n        } else if (c$$1 === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$SetNode(k$$2, t$$1, new SetTree$00601(0, \"SetEmpty\"), 2);\n        }\n      }\n\n    case 0:\n      {\n        return SetTreeModule$$$SetOne(k$$2);\n      }\n\n    default:\n      {\n        const r$$3 = t$$1.fields[2];\n        const l$$3 = t$$1.fields[1];\n        const k2 = t$$1.fields[0];\n        const c = comparer.Compare(k$$2, k2) | 0;\n\n        if (c < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$add(comparer, k$$2, l$$3), k2, r$$3);\n        } else if (c === 0) {\n          return t$$1;\n        } else {\n          return SetTreeModule$$$rebalance(l$$3, k2, SetTreeModule$$$add(comparer, k$$2, r$$3));\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t2$$1) {\n  const matchValue$$1 = [t1$$1, t2$$1];\n  var $target$$6, t2$$2, t1$$2, k1, t2$$3, k2$$2, t1$$3, h1, h2, k1$$1, k2$$3, t11, t12, t21, t22;\n\n  if (matchValue$$1[0].tag === 2) {\n    if (matchValue$$1[1].tag === 0) {\n      $target$$6 = 1;\n      t1$$2 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 2) {\n      $target$$6 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    } else {\n      $target$$6 = 2;\n      k1 = matchValue$$1[0].fields[0];\n      t2$$3 = matchValue$$1[1];\n    }\n  } else if (matchValue$$1[0].tag === 1) {\n    if (matchValue$$1[1].tag === 2) {\n      $target$$6 = 3;\n      k2$$2 = matchValue$$1[1].fields[0];\n      t1$$3 = matchValue$$1[0];\n    } else if (matchValue$$1[1].tag === 1) {\n      $target$$6 = 4;\n      h1 = matchValue$$1[0].fields[3];\n      h2 = matchValue$$1[1].fields[3];\n      k1$$1 = matchValue$$1[0].fields[0];\n      k2$$3 = matchValue$$1[1].fields[0];\n      t11 = matchValue$$1[0].fields[1];\n      t12 = matchValue$$1[0].fields[2];\n      t21 = matchValue$$1[1].fields[1];\n      t22 = matchValue$$1[1].fields[2];\n    } else {\n      $target$$6 = 1;\n      t1$$2 = matchValue$$1[0];\n    }\n  } else {\n    $target$$6 = 0;\n    t2$$2 = matchValue$$1[1];\n  }\n\n  switch ($target$$6) {\n    case 0:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t2$$2);\n      }\n\n    case 1:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, t1$$2);\n      }\n\n    case 2:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k1, t2$$3));\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$1, k$$3, SetTreeModule$$$add(comparer$$1, k2$$2, t1$$3));\n      }\n\n    case 4:\n      {\n        if (h1 + SetTreeModule$$$tolerance < h2) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$balance(comparer$$1, t1$$1, k$$3, t21), k2$$3, t22);\n        } else if (h2 + SetTreeModule$$$tolerance < h1) {\n          return SetTreeModule$$$rebalance(t11, k1$$1, SetTreeModule$$$balance(comparer$$1, t12, k$$3, t2$$1));\n        } else {\n          return SetTreeModule$$$mk(t1$$1, k$$3, t2$$1);\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$split(comparer$$2, pivot, t$$2) {\n  switch (t$$2.tag) {\n    case 2:\n      {\n        const k1$$3 = t$$2.fields[0];\n        const c$$3 = comparer$$2.Compare(k1$$3, pivot) | 0;\n\n        if (c$$3 < 0) {\n          return [t$$2, false, new SetTree$00601(0, \"SetEmpty\")];\n        } else if (c$$3 === 0) {\n          return [new SetTree$00601(0, \"SetEmpty\"), true, new SetTree$00601(0, \"SetEmpty\")];\n        } else {\n          return [new SetTree$00601(0, \"SetEmpty\"), false, t$$2];\n        }\n      }\n\n    case 0:\n      {\n        return [new SetTree$00601(0, \"SetEmpty\"), false, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    default:\n      {\n        const t12$$1 = t$$2.fields[2];\n        const t11$$1 = t$$2.fields[1];\n        const k1$$2 = t$$2.fields[0];\n        const c$$2 = comparer$$2.Compare(pivot, k1$$2) | 0;\n\n        if (c$$2 < 0) {\n          const patternInput = SetTreeModule$$$split(comparer$$2, pivot, t11$$1);\n          return [patternInput[0], patternInput[1], SetTreeModule$$$balance(comparer$$2, patternInput[2], k1$$2, t12$$1)];\n        } else if (c$$2 === 0) {\n          return [t11$$1, true, t12$$1];\n        } else {\n          const patternInput$$1 = SetTreeModule$$$split(comparer$$2, pivot, t12$$1);\n          return [SetTreeModule$$$balance(comparer$$2, t11$$1, k1$$2, patternInput$$1[0]), patternInput$$1[1], patternInput$$1[2]];\n        }\n      }\n  }\n}\nexport function SetTreeModule$$$spliceOutSuccessor(t$$3) {\n  switch (t$$3.tag) {\n    case 2:\n      {\n        const k2$$4 = t$$3.fields[0];\n        return [k2$$4, new SetTree$00601(0, \"SetEmpty\")];\n      }\n\n    case 1:\n      {\n        const r$$4 = t$$3.fields[2];\n        const l$$4 = t$$3.fields[1];\n        const k2$$5 = t$$3.fields[0];\n\n        if (l$$4.tag === 0) {\n          return [k2$$5, r$$4];\n        } else {\n          const patternInput$$2 = SetTreeModule$$$spliceOutSuccessor(l$$4);\n          return [patternInput$$2[0], SetTreeModule$$$mk(patternInput$$2[1], k2$$5, r$$4)];\n        }\n      }\n\n    default:\n      {\n        throw new Error(\"internal error: Set.spliceOutSuccessor\");\n      }\n  }\n}\nexport function SetTreeModule$$$remove(comparer$$3, k$$4, t$$4) {\n  switch (t$$4.tag) {\n    case 2:\n      {\n        const k2$$6 = t$$4.fields[0];\n        const c$$4 = comparer$$3.Compare(k$$4, k2$$6) | 0;\n\n        if (c$$4 === 0) {\n          return new SetTree$00601(0, \"SetEmpty\");\n        } else {\n          return t$$4;\n        }\n      }\n\n    case 1:\n      {\n        const r$$5 = t$$4.fields[2];\n        const l$$5 = t$$4.fields[1];\n        const k2$$7 = t$$4.fields[0];\n        const c$$5 = comparer$$3.Compare(k$$4, k2$$7) | 0;\n\n        if (c$$5 < 0) {\n          return SetTreeModule$$$rebalance(SetTreeModule$$$remove(comparer$$3, k$$4, l$$5), k2$$7, r$$5);\n        } else if (c$$5 === 0) {\n          const matchValue$$2 = [l$$5, r$$5];\n\n          if (matchValue$$2[0].tag === 0) {\n            return r$$5;\n          } else if (matchValue$$2[1].tag === 0) {\n            return l$$5;\n          } else {\n            const patternInput$$3 = SetTreeModule$$$spliceOutSuccessor(r$$5);\n            return SetTreeModule$$$mk(l$$5, patternInput$$3[0], patternInput$$3[1]);\n          }\n        } else {\n          return SetTreeModule$$$rebalance(l$$5, k2$$7, SetTreeModule$$$remove(comparer$$3, k$$4, r$$5));\n        }\n      }\n\n    default:\n      {\n        return t$$4;\n      }\n  }\n}\nexport function SetTreeModule$$$mem(comparer$$4, k$$5, t$$5) {\n  SetTreeModule$$$mem: while (true) {\n    switch (t$$5.tag) {\n      case 2:\n        {\n          const k2$$9 = t$$5.fields[0];\n          return comparer$$4.Compare(k$$5, k2$$9) === 0;\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const r$$6 = t$$5.fields[2];\n          const l$$6 = t$$5.fields[1];\n          const k2$$8 = t$$5.fields[0];\n          const c$$6 = comparer$$4.Compare(k$$5, k2$$8) | 0;\n\n          if (c$$6 < 0) {\n            const $comparer$$4$$7 = comparer$$4;\n            const $k$$5$$8 = k$$5;\n            comparer$$4 = $comparer$$4$$7;\n            k$$5 = $k$$5$$8;\n            t$$5 = l$$6;\n            continue SetTreeModule$$$mem;\n          } else if (c$$6 === 0) {\n            return true;\n          } else {\n            const $comparer$$4$$9 = comparer$$4;\n            const $k$$5$$10 = k$$5;\n            comparer$$4 = $comparer$$4$$9;\n            k$$5 = $k$$5$$10;\n            t$$5 = r$$6;\n            continue SetTreeModule$$$mem;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$iter($arg$$11, $arg$$12) {\n  SetTreeModule$$$iter: while (true) {\n    const f = $arg$$11,\n          t$$6 = $arg$$12;\n\n    switch (t$$6.tag) {\n      case 2:\n        {\n          const k2$$11 = t$$6.fields[0];\n          f(k2$$11);\n          break;\n        }\n\n      case 0:\n        {\n          break;\n        }\n\n      default:\n        {\n          const r$$7 = t$$6.fields[2];\n          const l$$7 = t$$6.fields[1];\n          const k2$$10 = t$$6.fields[0];\n          SetTreeModule$$$iter(f, l$$7);\n          f(k2$$10);\n          $arg$$11 = f;\n          $arg$$12 = r$$7;\n          continue SetTreeModule$$$iter;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$foldBack($arg$$13, $arg$$14, $arg$$15) {\n  SetTreeModule$$$foldBack: while (true) {\n    const f$$1 = $arg$$13,\n          m$$1 = $arg$$14,\n          x$$1 = $arg$$15;\n\n    switch (m$$1.tag) {\n      case 2:\n        {\n          const k$$7 = m$$1.fields[0];\n          return f$$1(k$$7, x$$1);\n        }\n\n      case 0:\n        {\n          return x$$1;\n        }\n\n      default:\n        {\n          const r$$8 = m$$1.fields[2];\n          const l$$8 = m$$1.fields[1];\n          const k$$6 = m$$1.fields[0];\n          $arg$$13 = f$$1;\n          $arg$$14 = l$$8;\n          $arg$$15 = f$$1(k$$6, SetTreeModule$$$foldBack(f$$1, r$$8, x$$1));\n          continue SetTreeModule$$$foldBack;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$fold($arg$$16, $arg$$17, $arg$$18) {\n  SetTreeModule$$$fold: while (true) {\n    const f$$2 = $arg$$16,\n          x$$2 = $arg$$17,\n          m$$2 = $arg$$18;\n\n    switch (m$$2.tag) {\n      case 2:\n        {\n          const k$$9 = m$$2.fields[0];\n          return f$$2(x$$2, k$$9);\n        }\n\n      case 0:\n        {\n          return x$$2;\n        }\n\n      default:\n        {\n          const r$$9 = m$$2.fields[2];\n          const l$$9 = m$$2.fields[1];\n          const k$$8 = m$$2.fields[0];\n          const x$$3 = SetTreeModule$$$fold(f$$2, x$$2, l$$9);\n          const x$$4 = f$$2(x$$3, k$$8);\n          $arg$$16 = f$$2;\n          $arg$$17 = x$$4;\n          $arg$$18 = r$$9;\n          continue SetTreeModule$$$fold;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$forall($arg$$19, $arg$$20) {\n  SetTreeModule$$$forall: while (true) {\n    const f$$3 = $arg$$19,\n          m$$3 = $arg$$20;\n\n    switch (m$$3.tag) {\n      case 2:\n        {\n          const k2$$13 = m$$3.fields[0];\n          return f$$3(k2$$13);\n        }\n\n      case 0:\n        {\n          return true;\n        }\n\n      default:\n        {\n          const r$$10 = m$$3.fields[2];\n          const l$$10 = m$$3.fields[1];\n          const k2$$12 = m$$3.fields[0];\n\n          if (f$$3(k2$$12) ? SetTreeModule$$$forall(f$$3, l$$10) : false) {\n            $arg$$19 = f$$3;\n            $arg$$20 = r$$10;\n            continue SetTreeModule$$$forall;\n          } else {\n            return false;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$exists($arg$$21, $arg$$22) {\n  SetTreeModule$$$exists: while (true) {\n    const f$$4 = $arg$$21,\n          m$$4 = $arg$$22;\n\n    switch (m$$4.tag) {\n      case 2:\n        {\n          const k2$$15 = m$$4.fields[0];\n          return f$$4(k2$$15);\n        }\n\n      case 0:\n        {\n          return false;\n        }\n\n      default:\n        {\n          const r$$11 = m$$4.fields[2];\n          const l$$11 = m$$4.fields[1];\n          const k2$$14 = m$$4.fields[0];\n\n          if (f$$4(k2$$14) ? true : SetTreeModule$$$exists(f$$4, l$$11)) {\n            return true;\n          } else {\n            $arg$$21 = f$$4;\n            $arg$$22 = r$$11;\n            continue SetTreeModule$$$exists;\n          }\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$isEmpty(m$$5) {\n  if (m$$5.tag === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$subset(comparer$$5, a, b) {\n  return SetTreeModule$$$forall(function (x$$5) {\n    return SetTreeModule$$$mem(comparer$$5, x$$5, b);\n  }, a);\n}\nexport function SetTreeModule$$$psubset(comparer$$6, a$$1, b$$1) {\n  if (SetTreeModule$$$forall(function (x$$6) {\n    return SetTreeModule$$$mem(comparer$$6, x$$6, b$$1);\n  }, a$$1)) {\n    return SetTreeModule$$$exists(function (x$$7) {\n      return !SetTreeModule$$$mem(comparer$$6, x$$7, a$$1);\n    }, b$$1);\n  } else {\n    return false;\n  }\n}\nexport function SetTreeModule$$$filterAux($arg$$23, $arg$$24, $arg$$25, $arg$$26) {\n  SetTreeModule$$$filterAux: while (true) {\n    const comparer$$7 = $arg$$23,\n          f$$5 = $arg$$24,\n          s$$2 = $arg$$25,\n          acc$$1 = $arg$$26;\n\n    switch (s$$2.tag) {\n      case 2:\n        {\n          const k$$11 = s$$2.fields[0];\n\n          if (f$$5(k$$11)) {\n            return SetTreeModule$$$add(comparer$$7, k$$11, acc$$1);\n          } else {\n            return acc$$1;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$1;\n        }\n\n      default:\n        {\n          const r$$12 = s$$2.fields[2];\n          const l$$12 = s$$2.fields[1];\n          const k$$10 = s$$2.fields[0];\n          const acc$$2 = f$$5(k$$10) ? SetTreeModule$$$add(comparer$$7, k$$10, acc$$1) : acc$$1;\n          $arg$$23 = comparer$$7;\n          $arg$$24 = f$$5;\n          $arg$$25 = l$$12;\n          $arg$$26 = SetTreeModule$$$filterAux(comparer$$7, f$$5, r$$12, acc$$2);\n          continue SetTreeModule$$$filterAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$filter(comparer$$8, f$$6, s$$3) {\n  return SetTreeModule$$$filterAux(comparer$$8, f$$6, s$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$diffAux(comparer$$9, m$$6, acc$$3) {\n  SetTreeModule$$$diffAux: while (true) {\n    switch (m$$6.tag) {\n      case 2:\n        {\n          const k$$13 = m$$6.fields[0];\n          return SetTreeModule$$$remove(comparer$$9, k$$13, acc$$3);\n        }\n\n      case 0:\n        {\n          return acc$$3;\n        }\n\n      default:\n        {\n          const r$$13 = m$$6.fields[2];\n          const l$$13 = m$$6.fields[1];\n          const k$$12 = m$$6.fields[0];\n          const $acc$$3$$31 = acc$$3;\n          const $comparer$$9$$30 = comparer$$9;\n          comparer$$9 = $comparer$$9$$30;\n          m$$6 = l$$13;\n          acc$$3 = SetTreeModule$$$diffAux($comparer$$9$$30, r$$13, SetTreeModule$$$remove($comparer$$9$$30, k$$12, $acc$$3$$31));\n          continue SetTreeModule$$$diffAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$diff(comparer$$10, a$$2, b$$2) {\n  return SetTreeModule$$$diffAux(comparer$$10, b$$2, a$$2);\n}\nexport function SetTreeModule$$$union(comparer$$11, t1$$4, t2$$4) {\n  const matchValue$$3 = [t1$$4, t2$$4];\n  var $target$$32, h1$$1, h2$$1, k1$$4, k2$$16, t11$$2, t12$$2, t21$$1, t22$$1, t$$7, t$$8, k1$$5, t2$$5, k2$$17, t1$$5;\n\n  if (matchValue$$3[0].tag === 0) {\n    $target$$32 = 1;\n    t$$7 = matchValue$$3[1];\n  } else if (matchValue$$3[0].tag === 2) {\n    if (matchValue$$3[1].tag === 0) {\n      $target$$32 = 2;\n      t$$8 = matchValue$$3[0];\n    } else if (matchValue$$3[1].tag === 2) {\n      $target$$32 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    } else {\n      $target$$32 = 3;\n      k1$$5 = matchValue$$3[0].fields[0];\n      t2$$5 = matchValue$$3[1];\n    }\n  } else if (matchValue$$3[1].tag === 0) {\n    $target$$32 = 2;\n    t$$8 = matchValue$$3[0];\n  } else if (matchValue$$3[1].tag === 2) {\n    $target$$32 = 4;\n    k2$$17 = matchValue$$3[1].fields[0];\n    t1$$5 = matchValue$$3[0];\n  } else {\n    $target$$32 = 0;\n    h1$$1 = matchValue$$3[0].fields[3];\n    h2$$1 = matchValue$$3[1].fields[3];\n    k1$$4 = matchValue$$3[0].fields[0];\n    k2$$16 = matchValue$$3[1].fields[0];\n    t11$$2 = matchValue$$3[0].fields[1];\n    t12$$2 = matchValue$$3[0].fields[2];\n    t21$$1 = matchValue$$3[1].fields[1];\n    t22$$1 = matchValue$$3[1].fields[2];\n  }\n\n  switch ($target$$32) {\n    case 0:\n      {\n        if (h1$$1 > h2$$1) {\n          const patternInput$$4 = SetTreeModule$$$split(comparer$$11, k1$$4, t2$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t11$$2, patternInput$$4[0]), k1$$4, SetTreeModule$$$union(comparer$$11, t12$$2, patternInput$$4[2]));\n        } else {\n          const patternInput$$5 = SetTreeModule$$$split(comparer$$11, k2$$16, t1$$4);\n          return SetTreeModule$$$balance(comparer$$11, SetTreeModule$$$union(comparer$$11, t21$$1, patternInput$$5[0]), k2$$16, SetTreeModule$$$union(comparer$$11, t22$$1, patternInput$$5[2]));\n        }\n      }\n\n    case 1:\n      {\n        return t$$7;\n      }\n\n    case 2:\n      {\n        return t$$8;\n      }\n\n    case 3:\n      {\n        return SetTreeModule$$$add(comparer$$11, k1$$5, t2$$5);\n      }\n\n    case 4:\n      {\n        return SetTreeModule$$$add(comparer$$11, k2$$17, t1$$5);\n      }\n  }\n}\nexport function SetTreeModule$$$intersectionAux(comparer$$12, b$$3, m$$7, acc$$4) {\n  SetTreeModule$$$intersectionAux: while (true) {\n    switch (m$$7.tag) {\n      case 2:\n        {\n          const k$$15 = m$$7.fields[0];\n\n          if (SetTreeModule$$$mem(comparer$$12, k$$15, b$$3)) {\n            return SetTreeModule$$$add(comparer$$12, k$$15, acc$$4);\n          } else {\n            return acc$$4;\n          }\n        }\n\n      case 0:\n        {\n          return acc$$4;\n        }\n\n      default:\n        {\n          const r$$14 = m$$7.fields[2];\n          const l$$14 = m$$7.fields[1];\n          const k$$14 = m$$7.fields[0];\n          const acc$$5 = SetTreeModule$$$intersectionAux(comparer$$12, b$$3, r$$14, acc$$4);\n          const acc$$6 = SetTreeModule$$$mem(comparer$$12, k$$14, b$$3) ? SetTreeModule$$$add(comparer$$12, k$$14, acc$$5) : acc$$5;\n          const $b$$3$$34 = b$$3;\n          const $comparer$$12$$33 = comparer$$12;\n          comparer$$12 = $comparer$$12$$33;\n          b$$3 = $b$$3$$34;\n          m$$7 = l$$14;\n          acc$$4 = acc$$6;\n          continue SetTreeModule$$$intersectionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$intersection(comparer$$13, a$$3, b$$4) {\n  return SetTreeModule$$$intersectionAux(comparer$$13, b$$4, a$$3, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function SetTreeModule$$$partition1(comparer$$14, f$$7, k$$16, acc1, acc2) {\n  if (f$$7(k$$16)) {\n    return [SetTreeModule$$$add(comparer$$14, k$$16, acc1), acc2];\n  } else {\n    return [acc1, SetTreeModule$$$add(comparer$$14, k$$16, acc2)];\n  }\n}\nexport function SetTreeModule$$$partitionAux($arg$$40, $arg$$41, $arg$$42, $arg$$43, $arg$$44) {\n  SetTreeModule$$$partitionAux: while (true) {\n    const comparer$$15 = $arg$$40,\n          f$$8 = $arg$$41,\n          s$$4 = $arg$$42,\n          acc_0 = $arg$$43,\n          acc_1 = $arg$$44;\n    const acc$$7 = [acc_0, acc_1];\n\n    switch (s$$4.tag) {\n      case 2:\n        {\n          const k$$18 = s$$4.fields[0];\n          return SetTreeModule$$$partition1(comparer$$15, f$$8, k$$18, acc$$7[0], acc$$7[1]);\n        }\n\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      default:\n        {\n          const r$$15 = s$$4.fields[2];\n          const l$$15 = s$$4.fields[1];\n          const k$$17 = s$$4.fields[0];\n          const acc$$8 = SetTreeModule$$$partitionAux(comparer$$15, f$$8, r$$15, acc$$7[0], acc$$7[1]);\n          const acc$$9 = SetTreeModule$$$partition1(comparer$$15, f$$8, k$$17, acc$$8[0], acc$$8[1]);\n          $arg$$40 = comparer$$15;\n          $arg$$41 = f$$8;\n          $arg$$42 = l$$15;\n          $arg$$43 = acc$$9[0];\n          $arg$$44 = acc$$9[1];\n          continue SetTreeModule$$$partitionAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$partition(comparer$$16, f$$9, s$$5) {\n  const seed = [new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")];\n  return SetTreeModule$$$partitionAux(comparer$$16, f$$9, s$$5, seed[0], seed[1]);\n}\nexport function SetTreeModule$$$$007CMatchSetNode$007CMatchSetEmpty$007C(s$$6) {\n  switch (s$$6.tag) {\n    case 2:\n      {\n        const k2$$19 = s$$6.fields[0];\n        return new Choice(0, \"Choice1Of2\", [k2$$19, new SetTree$00601(0, \"SetEmpty\"), new SetTree$00601(0, \"SetEmpty\")]);\n      }\n\n    case 0:\n      {\n        return new Choice(1, \"Choice2Of2\", null);\n      }\n\n    default:\n      {\n        const r$$16 = s$$6.fields[2];\n        const l$$16 = s$$6.fields[1];\n        const k2$$18 = s$$6.fields[0];\n        return new Choice(0, \"Choice1Of2\", [k2$$18, l$$16, r$$16]);\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElementAux(s$$7, n$$1) {\n  SetTreeModule$$$minimumElementAux: while (true) {\n    switch (s$$7.tag) {\n      case 2:\n        {\n          const k$$20 = s$$7.fields[0];\n          return k$$20;\n        }\n\n      case 0:\n        {\n          return n$$1;\n        }\n\n      default:\n        {\n          const l$$17 = s$$7.fields[1];\n          const k$$19 = s$$7.fields[0];\n          s$$7 = l$$17;\n          n$$1 = k$$19;\n          continue SetTreeModule$$$minimumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$minimumElementOpt(s$$8) {\n  switch (s$$8.tag) {\n    case 2:\n      {\n        const k$$22 = s$$8.fields[0];\n        return some(k$$22);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        const l$$18 = s$$8.fields[1];\n        const k$$21 = s$$8.fields[0];\n        return some(SetTreeModule$$$minimumElementAux(l$$18, k$$21));\n      }\n  }\n}\nexport function SetTreeModule$$$maximumElementAux(s$$9, n$$2) {\n  SetTreeModule$$$maximumElementAux: while (true) {\n    switch (s$$9.tag) {\n      case 2:\n        {\n          const k$$24 = s$$9.fields[0];\n          return k$$24;\n        }\n\n      case 0:\n        {\n          return n$$2;\n        }\n\n      default:\n        {\n          const r$$17 = s$$9.fields[2];\n          const k$$23 = s$$9.fields[0];\n          s$$9 = r$$17;\n          n$$2 = k$$23;\n          continue SetTreeModule$$$maximumElementAux;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$maximumElementOpt(s$$10) {\n  switch (s$$10.tag) {\n    case 2:\n      {\n        const k$$26 = s$$10.fields[0];\n        return some(k$$26);\n      }\n\n    case 0:\n      {\n        return null;\n      }\n\n    default:\n      {\n        const r$$18 = s$$10.fields[2];\n        const k$$25 = s$$10.fields[0];\n        return some(SetTreeModule$$$maximumElementAux(r$$18, k$$25));\n      }\n  }\n}\nexport function SetTreeModule$$$minimumElement(s$$11) {\n  const matchValue$$4 = SetTreeModule$$$minimumElementOpt(s$$11);\n\n  if (matchValue$$4 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$27 = value$$2(matchValue$$4);\n    return k$$27;\n  }\n}\nexport function SetTreeModule$$$maximumElement(s$$12) {\n  const matchValue$$5 = SetTreeModule$$$maximumElementOpt(s$$12);\n\n  if (matchValue$$5 == null) {\n    throw new Error(\"Set contains no elements\");\n  } else {\n    const k$$28 = value$$2(matchValue$$5);\n    return k$$28;\n  }\n}\nexport const SetTreeModule$002ESetIterator$00601 = declare(function Set_SetTreeModule_SetIterator(arg1, arg2) {\n  this.stack = arg1;\n  this.started = arg2;\n}, Record);\nexport function SetTreeModule$002ESetIterator$00601$reflection($gen$$48) {\n  return record(\"Set.SetTreeModule.SetIterator`1\", [$gen$$48], SetTreeModule$002ESetIterator$00601, () => [[\"stack\", list(SetTree$00601$reflection($gen$$48))], [\"started\", bool]]);\n}\nexport function SetTreeModule$$$collapseLHS(stack) {\n  SetTreeModule$$$collapseLHS: while (true) {\n    if (stack.tail != null) {\n      if (stack.head.tag === 2) {\n        return stack;\n      } else if (stack.head.tag === 1) {\n        const $stack$$49 = stack;\n        stack = new List($stack$$49.head.fields[1], new List(SetTreeModule$$$SetOne($stack$$49.head.fields[0]), new List($stack$$49.head.fields[2], $stack$$49.tail)));\n        continue SetTreeModule$$$collapseLHS;\n      } else {\n        const $stack$$50 = stack;\n        stack = $stack$$50.tail;\n        continue SetTreeModule$$$collapseLHS;\n      }\n    } else {\n      return new List();\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$mkIterator(s$$13) {\n  return new SetTreeModule$002ESetIterator$00601(SetTreeModule$$$collapseLHS(new List(s$$13, new List())), false);\n}\nexport function SetTreeModule$$$notStarted() {\n  throw new Error(\"Enumeration not started\");\n}\nexport function SetTreeModule$$$alreadyFinished() {\n  throw new Error(\"Enumeration already started\");\n}\nexport function SetTreeModule$$$current(i) {\n  if (i.started) {\n    const matchValue$$6 = i.stack;\n\n    if (matchValue$$6.tail == null) {\n      return SetTreeModule$$$alreadyFinished();\n    } else if (matchValue$$6.head.tag === 2) {\n      return matchValue$$6.head.fields[0];\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for current\");\n    }\n  } else {\n    return SetTreeModule$$$notStarted();\n  }\n}\nexport function SetTreeModule$$$moveNext(i$$1) {\n  if (i$$1.started) {\n    const matchValue$$7 = i$$1.stack;\n\n    if (matchValue$$7.tail == null) {\n      return false;\n    } else if (matchValue$$7.head.tag === 2) {\n      i$$1.stack = SetTreeModule$$$collapseLHS(matchValue$$7.tail);\n      return !(i$$1.stack.tail == null);\n    } else {\n      throw new Error(\"Please report error: Set iterator, unexpected stack for moveNext\");\n    }\n  } else {\n    i$$1.started = true;\n    return !(i$$1.stack.tail == null);\n  }\n}\nexport const SetTreeModule$002EmkIEnumerator$00601 = declare(function Set_SetTreeModule_mkIEnumerator(s$$14) {\n  const $this$$1 = this;\n  $this$$1.s = s$$14;\n  $this$$1.i = SetTreeModule$$$mkIterator($this$$1.s);\n});\nexport function SetTreeModule$002EmkIEnumerator$00601$reflection($gen$$51) {\n  return type(\"Set.SetTreeModule.mkIEnumerator`1\", [$gen$$51]);\n}\nexport function SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$14) {\n  return this instanceof SetTreeModule$002EmkIEnumerator$00601 ? SetTreeModule$002EmkIEnumerator$00601.call(this, s$$14) : new SetTreeModule$002EmkIEnumerator$00601(s$$14);\n}\nObject.defineProperty(SetTreeModule$002EmkIEnumerator$00601.prototype, \"Current\", {\n  \"get\": function () {\n    const __ = this;\n    return SetTreeModule$$$current(__.i);\n  }\n});\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.MoveNext = function () {\n  const __$$1 = this;\n  return SetTreeModule$$$moveNext(__$$1.i);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Reset = function () {\n  const __$$2 = this;\n  __$$2.i = SetTreeModule$$$mkIterator(__$$2.s);\n};\n\nSetTreeModule$002EmkIEnumerator$00601.prototype.Dispose = function () {};\n\nexport function SetTreeModule$$$mkIEnumerator(s$$15) {\n  return SetTreeModule$002EmkIEnumerator$00601$$$$002Ector$$Z5B395D56(s$$15);\n}\nexport function SetTreeModule$$$toSeq(s$$16) {\n  const en = SetTreeModule$$$mkIEnumerator(s$$16);\n  return unfold(function generator(en$$1) {\n    if (en$$1.MoveNext()) {\n      return [en$$1.Current, en$$1];\n    } else {\n      return null;\n    }\n  }, en);\n}\nexport function SetTreeModule$$$compareStacks(comparer$$17, l1, l2) {\n  SetTreeModule$$$compareStacks: while (true) {\n    const matchValue$$8 = [l1, l2];\n    var $target$$52, t1$$6, t2$$6, n1k, n2k, t1$$7, t2$$7, n1k$$1, n2k$$1, n2r, t1$$8, t2$$8, emp, n1k$$2, n1r, n2k$$2, t1$$9, t2$$9, n1k$$3, n1r$$1, n2k$$3, n2r$$1, t1$$10, t2$$10, n1k$$4, t1$$11, n1k$$5, n1l, n1r$$2, t1$$12, n2k$$4, t2$$11, n2k$$5, n2l, n2r$$2, t2$$12;\n\n    if (matchValue$$8[0].tail != null) {\n      if (matchValue$$8[1].tail != null) {\n        if (matchValue$$8[1].head.tag === 2) {\n          if (matchValue$$8[0].head.tag === 2) {\n            $target$$52 = 4;\n            n1k = matchValue$$8[0].head.fields[0];\n            n2k = matchValue$$8[1].head.fields[0];\n            t1$$7 = matchValue$$8[0].tail;\n            t2$$7 = matchValue$$8[1].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            if (matchValue$$8[0].head.fields[1].tag === 0) {\n              $target$$52 = 6;\n              emp = matchValue$$8[0].head.fields[1];\n              n1k$$2 = matchValue$$8[0].head.fields[0];\n              n1r = matchValue$$8[0].head.fields[2];\n              n2k$$2 = matchValue$$8[1].head.fields[0];\n              t1$$9 = matchValue$$8[0].tail;\n              t2$$9 = matchValue$$8[1].tail;\n            } else {\n              $target$$52 = 9;\n              n1k$$5 = matchValue$$8[0].head.fields[0];\n              n1l = matchValue$$8[0].head.fields[1];\n              n1r$$2 = matchValue$$8[0].head.fields[2];\n              t1$$12 = matchValue$$8[0].tail;\n            }\n          } else {\n            $target$$52 = 10;\n            n2k$$4 = matchValue$$8[1].head.fields[0];\n            t2$$11 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[1].head.tag === 1) {\n          if (matchValue$$8[1].head.fields[1].tag === 0) {\n            if (matchValue$$8[0].head.tag === 2) {\n              $target$$52 = 5;\n              n1k$$1 = matchValue$$8[0].head.fields[0];\n              n2k$$1 = matchValue$$8[1].head.fields[0];\n              n2r = matchValue$$8[1].head.fields[2];\n              t1$$8 = matchValue$$8[0].tail;\n              t2$$8 = matchValue$$8[1].tail;\n            } else if (matchValue$$8[0].head.tag === 1) {\n              if (matchValue$$8[0].head.fields[1].tag === 0) {\n                $target$$52 = 7;\n                n1k$$3 = matchValue$$8[0].head.fields[0];\n                n1r$$1 = matchValue$$8[0].head.fields[2];\n                n2k$$3 = matchValue$$8[1].head.fields[0];\n                n2r$$1 = matchValue$$8[1].head.fields[2];\n                t1$$10 = matchValue$$8[0].tail;\n                t2$$10 = matchValue$$8[1].tail;\n              } else {\n                $target$$52 = 9;\n                n1k$$5 = matchValue$$8[0].head.fields[0];\n                n1l = matchValue$$8[0].head.fields[1];\n                n1r$$2 = matchValue$$8[0].head.fields[2];\n                t1$$12 = matchValue$$8[0].tail;\n              }\n            } else {\n              $target$$52 = 11;\n              n2k$$5 = matchValue$$8[1].head.fields[0];\n              n2l = matchValue$$8[1].head.fields[1];\n              n2r$$2 = matchValue$$8[1].head.fields[2];\n              t2$$12 = matchValue$$8[1].tail;\n            }\n          } else if (matchValue$$8[0].head.tag === 2) {\n            $target$$52 = 8;\n            n1k$$4 = matchValue$$8[0].head.fields[0];\n            t1$$11 = matchValue$$8[0].tail;\n          } else if (matchValue$$8[0].head.tag === 1) {\n            $target$$52 = 9;\n            n1k$$5 = matchValue$$8[0].head.fields[0];\n            n1l = matchValue$$8[0].head.fields[1];\n            n1r$$2 = matchValue$$8[0].head.fields[2];\n            t1$$12 = matchValue$$8[0].tail;\n          } else {\n            $target$$52 = 11;\n            n2k$$5 = matchValue$$8[1].head.fields[0];\n            n2l = matchValue$$8[1].head.fields[1];\n            n2r$$2 = matchValue$$8[1].head.fields[2];\n            t2$$12 = matchValue$$8[1].tail;\n          }\n        } else if (matchValue$$8[0].head.tag === 2) {\n          $target$$52 = 8;\n          n1k$$4 = matchValue$$8[0].head.fields[0];\n          t1$$11 = matchValue$$8[0].tail;\n        } else if (matchValue$$8[0].head.tag === 1) {\n          $target$$52 = 9;\n          n1k$$5 = matchValue$$8[0].head.fields[0];\n          n1l = matchValue$$8[0].head.fields[1];\n          n1r$$2 = matchValue$$8[0].head.fields[2];\n          t1$$12 = matchValue$$8[0].tail;\n        } else {\n          $target$$52 = 3;\n          t1$$6 = matchValue$$8[0].tail;\n          t2$$6 = matchValue$$8[1].tail;\n        }\n      } else {\n        $target$$52 = 2;\n      }\n    } else if (matchValue$$8[1].tail != null) {\n      $target$$52 = 1;\n    } else {\n      $target$$52 = 0;\n    }\n\n    switch ($target$$52) {\n      case 0:\n        {\n          return 0;\n        }\n\n      case 1:\n        {\n          return -1 | 0;\n        }\n\n      case 2:\n        {\n          return 1;\n        }\n\n      case 3:\n        {\n          const $comparer$$17$$53 = comparer$$17;\n          comparer$$17 = $comparer$$17$$53;\n          l1 = t1$$6;\n          l2 = t2$$6;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 4:\n        {\n          const c$$7 = comparer$$17.Compare(n1k, n2k) | 0;\n\n          if (c$$7 !== 0) {\n            return c$$7 | 0;\n          } else {\n            const $comparer$$17$$54 = comparer$$17;\n            comparer$$17 = $comparer$$17$$54;\n            l1 = t1$$7;\n            l2 = t2$$7;\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 5:\n        {\n          const c$$8 = comparer$$17.Compare(n1k$$1, n2k$$1) | 0;\n\n          if (c$$8 !== 0) {\n            return c$$8 | 0;\n          } else {\n            const $comparer$$17$$55 = comparer$$17;\n            comparer$$17 = $comparer$$17$$55;\n            l1 = new List(new SetTree$00601(0, \"SetEmpty\"), t1$$8);\n            l2 = new List(n2r, t2$$8);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 6:\n        {\n          const c$$9 = comparer$$17.Compare(n1k$$2, n2k$$2) | 0;\n\n          if (c$$9 !== 0) {\n            return c$$9 | 0;\n          } else {\n            const $comparer$$17$$56 = comparer$$17;\n            comparer$$17 = $comparer$$17$$56;\n            l1 = new List(n1r, t1$$9);\n            l2 = new List(emp, t2$$9);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 7:\n        {\n          const c$$10 = comparer$$17.Compare(n1k$$3, n2k$$3) | 0;\n\n          if (c$$10 !== 0) {\n            return c$$10 | 0;\n          } else {\n            const $comparer$$17$$57 = comparer$$17;\n            comparer$$17 = $comparer$$17$$57;\n            l1 = new List(n1r$$1, t1$$10);\n            l2 = new List(n2r$$1, t2$$10);\n            continue SetTreeModule$$$compareStacks;\n          }\n        }\n\n      case 8:\n        {\n          const $comparer$$17$$58 = comparer$$17;\n          const $l2$$59 = l2;\n          comparer$$17 = $comparer$$17$$58;\n          l1 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n1k$$4), t1$$11));\n          l2 = $l2$$59;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 9:\n        {\n          const $comparer$$17$$60 = comparer$$17;\n          const $l2$$61 = l2;\n          comparer$$17 = $comparer$$17$$60;\n          l1 = new List(n1l, new List(SetTreeModule$$$SetNode(n1k$$5, new SetTree$00601(0, \"SetEmpty\"), n1r$$2, 0), t1$$12));\n          l2 = $l2$$61;\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 10:\n        {\n          const $comparer$$17$$62 = comparer$$17;\n          const $l1$$63 = l1;\n          comparer$$17 = $comparer$$17$$62;\n          l1 = $l1$$63;\n          l2 = new List(new SetTree$00601(0, \"SetEmpty\"), new List(SetTreeModule$$$SetOne(n2k$$4), t2$$11));\n          continue SetTreeModule$$$compareStacks;\n        }\n\n      case 11:\n        {\n          const $comparer$$17$$64 = comparer$$17;\n          const $l1$$65 = l1;\n          comparer$$17 = $comparer$$17$$64;\n          l1 = $l1$$65;\n          l2 = new List(n2l, new List(SetTreeModule$$$SetNode(n2k$$5, new SetTree$00601(0, \"SetEmpty\"), n2r$$2, 0), t2$$12));\n          continue SetTreeModule$$$compareStacks;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$compare(comparer$$18, s1, s2) {\n  const matchValue$$9 = [s1, s2];\n\n  if (matchValue$$9[0].tag === 0) {\n    if (matchValue$$9[1].tag === 0) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (matchValue$$9[1].tag === 0) {\n    return 1;\n  } else {\n    return SetTreeModule$$$compareStacks(comparer$$18, new List(s1, new List()), new List(s2, new List())) | 0;\n  }\n}\nexport function SetTreeModule$$$choose(s$$17) {\n  return SetTreeModule$$$minimumElement(s$$17);\n}\nexport function SetTreeModule$$$loop(m$$8, acc$$10) {\n  SetTreeModule$$$loop: while (true) {\n    switch (m$$8.tag) {\n      case 2:\n        {\n          const k$$32 = m$$8.fields[0];\n          return new List(k$$32, acc$$10);\n        }\n\n      case 0:\n        {\n          return acc$$10;\n        }\n\n      default:\n        {\n          const r$$20 = m$$8.fields[2];\n          const l$$20 = m$$8.fields[1];\n          const k$$31 = m$$8.fields[0];\n          const $acc$$10$$66 = acc$$10;\n          m$$8 = l$$20;\n          acc$$10 = new List(k$$31, SetTreeModule$$$loop(r$$20, $acc$$10$$66));\n          continue SetTreeModule$$$loop;\n        }\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$toList(s$$18) {\n  return SetTreeModule$$$loop(s$$18, new List());\n}\nexport function SetTreeModule$$$copyToArray(s$$19, arr, i$$2) {\n  let j = i$$2 | 0;\n  SetTreeModule$$$iter(function (x$$8) {\n    arr[j] = x$$8;\n    j = j + 1;\n  }, s$$19);\n}\nexport function SetTreeModule$$$mkFromEnumerator(comparer$$19, acc$$11, e) {\n  SetTreeModule$$$mkFromEnumerator: while (true) {\n    if (e.MoveNext()) {\n      const $acc$$11$$68 = acc$$11;\n      const $comparer$$19$$67 = comparer$$19;\n      const $e$$69 = e;\n      comparer$$19 = $comparer$$19$$67;\n      acc$$11 = SetTreeModule$$$add($comparer$$19$$67, $e$$69.Current, $acc$$11$$68);\n      e = $e$$69;\n      continue SetTreeModule$$$mkFromEnumerator;\n    } else {\n      return acc$$11;\n    }\n\n    break;\n  }\n}\nexport function SetTreeModule$$$ofSeq(comparer$$20, c$$11) {\n  const ie = getEnumerator(c$$11);\n\n  try {\n    return SetTreeModule$$$mkFromEnumerator(comparer$$20, new SetTree$00601(0, \"SetEmpty\"), ie);\n  } finally {\n    if (isDisposable(ie)) {\n      ie.Dispose();\n    }\n  }\n}\nexport function SetTreeModule$$$ofArray(comparer$$21, arr$$1) {\n  let acc$$12 = new SetTree$00601(0, \"SetEmpty\");\n\n  for (let i$$3 = 0; i$$3 <= arr$$1.length - 1; i$$3++) {\n    acc$$12 = SetTreeModule$$$add(comparer$$21, arr$$1[i$$3], acc$$12);\n  }\n\n  return acc$$12;\n}\nexport const FSharpSet = declare(function Set_Set(comparer$$22, tree) {\n  const $this$$2 = this;\n  $this$$2.comparer = comparer$$22;\n  $this$$2.tree = tree;\n});\nexport function FSharpSet$reflection($gen$$70) {\n  return type(\"Set.FSharpSet\", [$gen$$70]);\n}\nexport function FSharpSet$$$$002Ector$$2528C5CB(comparer$$22, tree) {\n  return this instanceof FSharpSet ? FSharpSet.call(this, comparer$$22, tree) : new FSharpSet(comparer$$22, tree);\n}\nexport function FSharpSet$$get_Comparer(__$$4) {\n  return __$$4.comparer;\n}\nexport function FSharpSet$$get_Tree(__$$5) {\n  return __$$5.tree;\n}\nexport function FSharpSet$$Add$$2B595(s$$20, x$$9) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$20), SetTreeModule$$$add(FSharpSet$$get_Comparer(s$$20), x$$9, FSharpSet$$get_Tree(s$$20)));\n}\nexport function FSharpSet$$Remove$$2B595(s$$21, x$$10) {\n  return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$21), SetTreeModule$$$remove(FSharpSet$$get_Comparer(s$$21), x$$10, FSharpSet$$get_Tree(s$$21)));\n}\nexport function FSharpSet$$get_Count(s$$22) {\n  return SetTreeModule$$$count(FSharpSet$$get_Tree(s$$22));\n}\nexport function FSharpSet$$Contains$$2B595(s$$23, x$$11) {\n  return SetTreeModule$$$mem(FSharpSet$$get_Comparer(s$$23), x$$11, FSharpSet$$get_Tree(s$$23));\n}\nexport function FSharpSet$$Iterate$$5028453F(s$$24, x$$12) {\n  SetTreeModule$$$iter(x$$12, FSharpSet$$get_Tree(s$$24));\n}\nexport function FSharpSet$$Fold(s$$25, f$$10, z) {\n  return SetTreeModule$$$fold(function (x$$13, z$$1) {\n    return f$$10(z$$1, x$$13);\n  }, z, FSharpSet$$get_Tree(s$$25));\n}\nexport function FSharpSet$$get_IsEmpty(s$$26) {\n  return SetTreeModule$$$isEmpty(FSharpSet$$get_Tree(s$$26));\n}\nexport function FSharpSet$$Partition$$Z1D55A0D7(s$$27, f$$11) {\n  if (FSharpSet$$get_Tree(s$$27).tag === 0) {\n    return [s$$27, s$$27];\n  } else {\n    const patternInput$$6 = SetTreeModule$$$partition(FSharpSet$$get_Comparer(s$$27), f$$11, FSharpSet$$get_Tree(s$$27));\n    return [FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[0]), FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$27), patternInput$$6[1])];\n  }\n}\nexport function FSharpSet$$Filter$$Z1D55A0D7(s$$28, f$$12) {\n  if (FSharpSet$$get_Tree(s$$28).tag === 0) {\n    return s$$28;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(s$$28), SetTreeModule$$$filter(FSharpSet$$get_Comparer(s$$28), f$$12, FSharpSet$$get_Tree(s$$28)));\n  }\n}\nexport function FSharpSet$$Map$$38806891(s$$29, f$$13, comparer$$23) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$23, SetTreeModule$$$fold(function (acc$$13, k$$33) {\n    return SetTreeModule$$$add(comparer$$23, f$$13(k$$33), acc$$13);\n  }, new SetTree$00601(0, \"SetEmpty\"), FSharpSet$$get_Tree(s$$29)));\n}\nexport function FSharpSet$$Exists$$Z1D55A0D7(s$$30, f$$14) {\n  return SetTreeModule$$$exists(f$$14, FSharpSet$$get_Tree(s$$30));\n}\nexport function FSharpSet$$ForAll$$Z1D55A0D7(s$$31, f$$15) {\n  return SetTreeModule$$$forall(f$$15, FSharpSet$$get_Tree(s$$31));\n}\nexport function FSharpSet$$$op_Subtraction(a$$4, b$$5) {\n  if (FSharpSet$$get_Tree(a$$4).tag === 0) {\n    return a$$4;\n  } else if (FSharpSet$$get_Tree(b$$5).tag === 0) {\n    return a$$4;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$4), SetTreeModule$$$diff(FSharpSet$$get_Comparer(a$$4), FSharpSet$$get_Tree(a$$4), FSharpSet$$get_Tree(b$$5)));\n  }\n}\nexport function FSharpSet$$$op_Addition(a$$5, b$$6) {\n  if (FSharpSet$$get_Tree(b$$6).tag === 0) {\n    return a$$5;\n  } else if (FSharpSet$$get_Tree(a$$5).tag === 0) {\n    return b$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$5), SetTreeModule$$$union(FSharpSet$$get_Comparer(a$$5), FSharpSet$$get_Tree(a$$5), FSharpSet$$get_Tree(b$$6)));\n  }\n}\nexport function FSharpSet$$$Intersection$$Z3BE9BFE0(a$$6, b$$7) {\n  if (FSharpSet$$get_Tree(b$$7).tag === 0) {\n    return b$$7;\n  } else if (FSharpSet$$get_Tree(a$$6).tag === 0) {\n    return a$$6;\n  } else {\n    return FSharpSet$$$$002Ector$$2528C5CB(FSharpSet$$get_Comparer(a$$6), SetTreeModule$$$intersection(FSharpSet$$get_Comparer(a$$6), FSharpSet$$get_Tree(a$$6), FSharpSet$$get_Tree(b$$7)));\n  }\n}\nexport function FSharpSet$$$IntersectionMany$$Z15B59630(sets) {\n  return reduce(FSharpSet$$$Intersection$$Z3BE9BFE0, sets);\n}\nexport function FSharpSet$$$Equality$$Z3BE9BFE0(a$$7, b$$8) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$7), FSharpSet$$get_Tree(a$$7), FSharpSet$$get_Tree(b$$8)) === 0;\n}\nexport function FSharpSet$$$Compare$$Z3BE9BFE0(a$$8, b$$9) {\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(a$$8), FSharpSet$$get_Tree(a$$8), FSharpSet$$get_Tree(b$$9));\n}\nexport function FSharpSet$$get_Choose(x$$14) {\n  return SetTreeModule$$$choose(FSharpSet$$get_Tree(x$$14));\n}\nexport function FSharpSet$$get_MinimumElement(x$$15) {\n  return SetTreeModule$$$minimumElement(FSharpSet$$get_Tree(x$$15));\n}\nexport function FSharpSet$$get_MaximumElement(x$$16) {\n  return SetTreeModule$$$maximumElement(FSharpSet$$get_Tree(x$$16));\n}\nexport function FSharpSet$$IsSubsetOf$$6A20B1FF(x$$17, y) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$17), FSharpSet$$get_Tree(x$$17), FSharpSet$$get_Tree(y));\n}\nexport function FSharpSet$$IsSupersetOf$$6A20B1FF(x$$18, y$$1) {\n  return SetTreeModule$$$subset(FSharpSet$$get_Comparer(x$$18), FSharpSet$$get_Tree(y$$1), FSharpSet$$get_Tree(x$$18));\n}\nexport function FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$19, y$$2) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$19), FSharpSet$$get_Tree(x$$19), FSharpSet$$get_Tree(y$$2));\n}\nexport function FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$20, y$$3) {\n  return SetTreeModule$$$psubset(FSharpSet$$get_Comparer(x$$20), FSharpSet$$get_Tree(y$$3), FSharpSet$$get_Tree(x$$20));\n}\n\nFSharpSet.prototype.toString = function () {\n  const this$ = this;\n  return \"set [\" + join(\"; \", ...map$$1(String, this$)) + \"]\";\n};\n\nFSharpSet.prototype.GetHashCode = function () {\n  const this$$$1 = this;\n\n  const combineHash = function combineHash(x$$22, y$$4) {\n    return (x$$22 << 1) + y$$4 + 631;\n  };\n\n  let res = 0;\n  const e$$1 = SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(this$$$1));\n\n  while (e$$1.MoveNext()) {\n    res = combineHash(res, structuralHash(e$$1.Current));\n  }\n\n  return Math.abs(res) | 0;\n};\n\nFSharpSet.prototype.Equals = function (that) {\n  const this$$$2 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$2), FSharpSet$$get_Tree(this$$$2), FSharpSet$$get_Tree(that)) === 0;\n};\n\nFSharpSet.prototype.CompareTo = function (that$$1) {\n  const this$$$3 = this;\n  return SetTreeModule$$$compare(FSharpSet$$get_Comparer(this$$$3), FSharpSet$$get_Tree(this$$$3), FSharpSet$$get_Tree(that$$1)) | 0;\n};\n\nFSharpSet.prototype[Symbol.iterator] = function () {\n  const s$$32 = this;\n  return toIterator(SetTreeModule$$$mkIEnumerator(FSharpSet$$get_Tree(s$$32)));\n};\n\nexport function isEmpty(s$$33) {\n  return FSharpSet$$get_IsEmpty(s$$33);\n}\nexport function contains(x$$23, s$$34) {\n  return FSharpSet$$Contains$$2B595(s$$34, x$$23);\n}\nexport function add(x$$24, s$$35) {\n  return FSharpSet$$Add$$2B595(s$$35, x$$24);\n}\nexport function singleton(x$$25, comparer$$24) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$24, new SetTree$00601(2, \"SetOne\", x$$25));\n}\nexport function remove(x$$26, s$$36) {\n  return FSharpSet$$Remove$$2B595(s$$36, x$$26);\n}\nexport function union(s1$$2, s2$$2) {\n  return FSharpSet$$$op_Addition(s1$$2, s2$$2);\n}\nexport function unionMany(sets$$1, comparer$$25) {\n  return fold$$1(FSharpSet$$$op_Addition, FSharpSet$$$$002Ector$$2528C5CB(comparer$$25, new SetTree$00601(0, \"SetEmpty\")), sets$$1);\n}\nexport function intersect(s1$$3, s2$$3) {\n  return FSharpSet$$$Intersection$$Z3BE9BFE0(s1$$3, s2$$3);\n}\nexport function intersectMany(sets$$2) {\n  return FSharpSet$$$IntersectionMany$$Z15B59630(sets$$2);\n}\nexport function iterate(f$$16, s$$37) {\n  FSharpSet$$Iterate$$5028453F(s$$37, f$$16);\n}\nexport function empty(comparer$$26) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$26, new SetTree$00601(0, \"SetEmpty\"));\n}\nexport function forAll(f$$17, s$$38) {\n  return FSharpSet$$ForAll$$Z1D55A0D7(s$$38, f$$17);\n}\nexport function exists(f$$18, s$$39) {\n  return FSharpSet$$Exists$$Z1D55A0D7(s$$39, f$$18);\n}\nexport function filter(f$$19, s$$40) {\n  return FSharpSet$$Filter$$Z1D55A0D7(s$$40, f$$19);\n}\nexport function partition(f$$20, s$$41) {\n  return FSharpSet$$Partition$$Z1D55A0D7(s$$41, f$$20);\n}\nexport function fold(f$$21, z$$2, s$$42) {\n  return SetTreeModule$$$fold(f$$21, z$$2, FSharpSet$$get_Tree(s$$42));\n}\nexport function foldBack(f$$22, s$$43, z$$3) {\n  return SetTreeModule$$$foldBack(f$$22, FSharpSet$$get_Tree(s$$43), z$$3);\n}\nexport function map(f$$23, s$$44, comparer$$27) {\n  return FSharpSet$$Map$$38806891(s$$44, f$$23, comparer$$27);\n}\nexport function count(s$$45) {\n  return FSharpSet$$get_Count(s$$45);\n}\nexport function minimumElement(s$$46) {\n  return FSharpSet$$get_MinimumElement(s$$46);\n}\nexport function maximumElement(s$$47) {\n  return FSharpSet$$get_MaximumElement(s$$47);\n}\nexport function ofList(li, comparer$$28) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$28, SetTreeModule$$$ofSeq(comparer$$28, li));\n}\nexport function ofArray(arr$$2, comparer$$29) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$29, SetTreeModule$$$ofArray(comparer$$29, arr$$2));\n}\nexport function toList(s$$48) {\n  return SetTreeModule$$$toList(FSharpSet$$get_Tree(s$$48));\n}\nexport function toArray(s$$49, cons) {\n  const n$$3 = count(s$$49) | 0;\n  const res$$1 = new cons(n$$3);\n  SetTreeModule$$$copyToArray(FSharpSet$$get_Tree(s$$49), res$$1, 0);\n  return res$$1;\n}\nexport function toSeq(s$$50) {\n  return SetTreeModule$$$toSeq(FSharpSet$$get_Tree(s$$50));\n}\nexport function ofSeq(elements, comparer$$30) {\n  return FSharpSet$$$$002Ector$$2528C5CB(comparer$$30, SetTreeModule$$$ofSeq(comparer$$30, elements));\n}\nexport function difference(x$$28, y$$6) {\n  return FSharpSet$$$op_Subtraction(x$$28, y$$6);\n}\nexport function isSubset(x$$29, y$$7) {\n  return FSharpSet$$IsSubsetOf$$6A20B1FF(x$$29, y$$7);\n}\nexport function isSuperset(x$$30, y$$8) {\n  return FSharpSet$$IsSupersetOf$$6A20B1FF(x$$30, y$$8);\n}\nexport function isProperSubset(x$$31, y$$9) {\n  return FSharpSet$$IsProperSubsetOf$$6A20B1FF(x$$31, y$$9);\n}\nexport function isProperSuperset(x$$32, y$$10) {\n  return FSharpSet$$IsProperSupersetOf$$6A20B1FF(x$$32, y$$10);\n}\nexport function minElement(s$$51) {\n  return FSharpSet$$get_MinimumElement(s$$51);\n}\nexport function maxElement(s$$52) {\n  return FSharpSet$$get_MaximumElement(s$$52);\n}\n\nfunction createMutablePrivate(comparer$$31, tree$0027) {\n  let tree$$1 = tree$0027;\n  return {\n    get size() {\n      return SetTreeModule$$$count(tree$$1);\n    },\n\n    add(x$$33) {\n      const this$$$4 = this;\n      tree$$1 = SetTreeModule$$$add(comparer$$31, x$$33, tree$$1);\n      return this$$$4;\n    },\n\n    add_(x$$34) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$34, tree$$1)) {\n        return false;\n      } else {\n        tree$$1 = SetTreeModule$$$add(comparer$$31, x$$34, tree$$1);\n        return true;\n      }\n    },\n\n    clear() {\n      tree$$1 = new SetTree$00601(0, \"SetEmpty\");\n    },\n\n    delete(x$$35) {\n      if (SetTreeModule$$$mem(comparer$$31, x$$35, tree$$1)) {\n        tree$$1 = SetTreeModule$$$remove(comparer$$31, x$$35, tree$$1);\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    has(x$$36) {\n      return SetTreeModule$$$mem(comparer$$31, x$$36, tree$$1);\n    },\n\n    values() {\n      return SetTreeModule$$$toSeq(tree$$1);\n    },\n\n    [Symbol.iterator]() {\n      return toIterator(SetTreeModule$$$mkIEnumerator(tree$$1));\n    },\n\n    GetEnumerator() {\n      return SetTreeModule$$$mkIEnumerator(tree$$1);\n    }\n\n  };\n}\n\nexport function createMutable(source, comparer$$32) {\n  return createMutablePrivate(comparer$$32, SetTreeModule$$$ofSeq(comparer$$32, source));\n}\nexport function distinct(xs, comparer$$33) {\n  return createMutable(xs, comparer$$33);\n}\nexport function distinctBy(projection, xs$$1, comparer$$34) {\n  const li$$1 = [];\n  const hashSet = createMutable(empty$$1(), comparer$$34);\n  iterate$$1(function (x$$37) {\n    if (hashSet.add_(projection(x$$37))) {\n      li$$1.push(x$$37);\n    }\n  }, xs$$1);\n  return li$$1;\n}\nexport function unionWith(s1$$4, s2$$4) {\n  return fold$$1(function folder(acc$$14, x$$38) {\n    return acc$$14.add(x$$38);\n  }, s1$$4, s2$$4);\n}\nexport function intersectWith(s1$$5, s2$$5, comparer$$35) {\n  const s2$$6 = ofSeq(s2$$5, comparer$$35);\n  iterate$$1(function (x$$39) {\n    if (!FSharpSet$$Contains$$2B595(s2$$6, x$$39)) {\n      s1$$5.delete(x$$39);\n    }\n  }, s1$$5);\n}\nexport function exceptWith(s1$$6, s2$$7) {\n  iterate$$1(function (x$$40) {\n    s1$$6.delete(x$$40);\n  }, s2$$7);\n}\nexport function isSubsetOf(s1$$7, s2$$8, comparer$$36) {\n  return isSubset(ofSeq(s1$$7, comparer$$36), ofSeq(s2$$8, comparer$$36));\n}\nexport function isSupersetOf(s1$$8, s2$$9, comparer$$37) {\n  return isSuperset(ofSeq(s1$$8, comparer$$37), ofSeq(s2$$9, comparer$$37));\n}\nexport function isProperSubsetOf(s1$$9, s2$$10, comparer$$38) {\n  return isProperSubset(ofSeq(s1$$9, comparer$$38), ofSeq(s2$$10, comparer$$38));\n}\nexport function isProperSupersetOf(s1$$10, s2$$11, comparer$$39) {\n  return isProperSuperset(ofSeq(s1$$10, comparer$$39), ofSeq(s2$$11, comparer$$39));\n}","import { defaultArg, value as value$$10, some } from \"./Option.js\";\nimport { compare, getItemFromDict, count as count$$26, addToDict, addToSet, tryGetValue, comparerFromEqualityComparer, max as max$$1, comparePrimitives } from \"./Util.js\";\nimport { createMutable } from \"./Map.js\";\nimport { iterateIndexed as iterateIndexed$$1, iterate as iterate$$1 } from \"./Seq.js\";\nimport { createMutable as createMutable$$1 } from \"./Set.js\";\nimport { List } from \"./Types.js\";\n\nfunction indexNotFound() {\n  throw new Error(\"An index satisfying the predicate was not found in the collection.\");\n}\n\nexport function append(array1, array2, cons) {\n  if (ArrayBuffer.isView(array1)) {\n    const len1 = array1.length | 0;\n    const len2 = array2.length | 0;\n    const newArray = new cons(len1 + len2);\n\n    for (let i = 0; i <= len1 - 1; i++) {\n      newArray[i] = array1[i];\n    }\n\n    for (let i$$1 = 0; i$$1 <= len2 - 1; i$$1++) {\n      newArray[i$$1 + len1] = array2[i$$1];\n    }\n\n    return newArray;\n  } else {\n    return array1.concat(array2);\n  }\n}\nexport function filter(predicate, array) {\n  return array.filter(predicate);\n}\nexport function fill(target, targetIndex, count, value) {\n  target.fill(value, targetIndex, targetIndex + count);\n  return target;\n}\nexport function getSubArray(array$$3, start$$1, count$$2) {\n  return array$$3.slice(start$$1, start$$1 + count$$2);\n}\nexport function last(array$$5) {\n  if (array$$5.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  return array$$5[array$$5.length - 1];\n}\nexport function tryLast(array$$6) {\n  if (array$$6.length === 0) {\n    return null;\n  } else {\n    return some(array$$6[array$$6.length - 1]);\n  }\n}\nexport function mapIndexed(f, source, cons$$1) {\n  if (ArrayBuffer.isView(source)) {\n    const len = source.length | 0;\n    const target$$1 = new cons$$1(len);\n\n    for (let i$$2 = 0; i$$2 <= len - 1; i$$2++) {\n      target$$1[i$$2] = f(i$$2, source[i$$2]);\n    }\n\n    return target$$1;\n  } else {\n    return source.map(function mapping(x, i$$3) {\n      return f(i$$3, x);\n    });\n  }\n}\nexport function map(f$$1, source$$1, cons$$2) {\n  if (ArrayBuffer.isView(source$$1)) {\n    const len$$1 = source$$1.length | 0;\n    const target$$2 = new cons$$2(len$$1);\n\n    for (let i$$4 = 0; i$$4 <= len$$1 - 1; i$$4++) {\n      target$$2[i$$4] = f$$1(source$$1[i$$4]);\n    }\n\n    return target$$2;\n  } else {\n    return source$$1.map(function mapping$$1(x$$1) {\n      return f$$1(x$$1);\n    });\n  }\n}\nexport function mapIndexed2(f$$2, source1, source2, cons$$3) {\n  if (source1.length !== source2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result = new cons$$3(source1.length);\n\n  for (let i$$5 = 0; i$$5 <= source1.length - 1; i$$5++) {\n    result[i$$5] = f$$2(i$$5, source1[i$$5], source2[i$$5]);\n  }\n\n  return result;\n}\nexport function map2(f$$3, source1$$1, source2$$1, cons$$4) {\n  if (source1$$1.length !== source2$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$1 = new cons$$4(source1$$1.length);\n\n  for (let i$$6 = 0; i$$6 <= source1$$1.length - 1; i$$6++) {\n    result$$1[i$$6] = f$$3(source1$$1[i$$6], source2$$1[i$$6]);\n  }\n\n  return result$$1;\n}\nexport function mapIndexed3(f$$4, source1$$2, source2$$2, source3, cons$$5) {\n  if (source1$$2.length !== source2$$2.length ? true : source2$$2.length !== source3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$2 = new cons$$5(source1$$2.length);\n\n  for (let i$$7 = 0; i$$7 <= source1$$2.length - 1; i$$7++) {\n    result$$2[i$$7] = f$$4(i$$7, source1$$2[i$$7], source2$$2[i$$7], source3[i$$7]);\n  }\n\n  return result$$2;\n}\nexport function map3(f$$5, source1$$3, source2$$3, source3$$1, cons$$6) {\n  if (source1$$3.length !== source2$$3.length ? true : source2$$3.length !== source3$$1.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$3 = new cons$$6(source1$$3.length);\n\n  for (let i$$8 = 0; i$$8 <= source1$$3.length - 1; i$$8++) {\n    result$$3[i$$8] = f$$5(source1$$3[i$$8], source2$$3[i$$8], source3$$1[i$$8]);\n  }\n\n  return result$$3;\n}\nexport function mapFold(mapping$$2, state, array$$9, cons$$7) {\n  const matchValue = array$$9.length | 0;\n\n  if (matchValue === 0) {\n    return [[], state];\n  } else {\n    const len$$2 = matchValue | 0;\n    let acc = state;\n    const res = new cons$$7(len$$2);\n\n    for (let i$$9 = 0; i$$9 <= array$$9.length - 1; i$$9++) {\n      const patternInput = mapping$$2(acc, array$$9[i$$9]);\n      res[i$$9] = patternInput[0];\n      acc = patternInput[1];\n    }\n\n    return [res, acc];\n  }\n}\nexport function mapFoldBack(mapping$$3, array$$10, state$$1, cons$$8) {\n  const matchValue$$1 = array$$10.length | 0;\n\n  if (matchValue$$1 === 0) {\n    return [[], state$$1];\n  } else {\n    const len$$3 = matchValue$$1 | 0;\n    let acc$$1 = state$$1;\n    const res$$1 = new cons$$8(len$$3);\n\n    for (let i$$10 = array$$10.length - 1; i$$10 >= 0; i$$10--) {\n      const patternInput$$1 = mapping$$3(array$$10[i$$10], acc$$1);\n      res$$1[i$$10] = patternInput$$1[0];\n      acc$$1 = patternInput$$1[1];\n    }\n\n    return [res$$1, acc$$1];\n  }\n}\nexport function indexed(source$$2) {\n  const len$$4 = source$$2.length | 0;\n  const target$$3 = new Array(len$$4);\n\n  for (let i$$11 = 0; i$$11 <= len$$4 - 1; i$$11++) {\n    target$$3[i$$11] = [i$$11, source$$2[i$$11]];\n  }\n\n  return target$$3;\n}\nexport function truncate(count$$4, array$$11) {\n  const count$$5 = max$$1(comparePrimitives, 0, count$$4) | 0;\n  return array$$11.slice(0, 0 + count$$5);\n}\nexport function concat(arrays, cons$$9) {\n  const arrays$$1 = Array.from(arrays);\n  const matchValue$$2 = arrays$$1.length | 0;\n\n  switch (matchValue$$2) {\n    case 0:\n      {\n        return new cons$$9(0);\n      }\n\n    case 1:\n      {\n        return arrays$$1[0];\n      }\n\n    default:\n      {\n        if (ArrayBuffer.isView(arrays$$1[0])) {\n          let totalIdx = 0;\n          let totalLength = 0;\n\n          for (let idx = 0; idx <= arrays$$1.length - 1; idx++) {\n            const arr$$4 = arrays$$1[idx];\n            totalLength = totalLength + arr$$4.length;\n          }\n\n          const result$$4 = new cons$$9(totalLength);\n\n          for (let idx$$1 = 0; idx$$1 <= arrays$$1.length - 1; idx$$1++) {\n            const arr$$5 = arrays$$1[idx$$1];\n\n            for (let j = 0; j <= arr$$5.length - 1; j++) {\n              result$$4[totalIdx] = arr$$5[j];\n              totalIdx = totalIdx + 1;\n            }\n          }\n\n          return result$$4;\n        } else {\n          return arrays$$1[0].concat(...arrays$$1.slice(1));\n        }\n      }\n  }\n}\nexport function collect(mapping$$4, array$$14, cons$$10) {\n  const mapped = map(mapping$$4, array$$14, Array);\n  return concat(mapped, cons$$10);\n}\nexport function countBy(projection, array$$15, eq) {\n  const dict = createMutable([], comparerFromEqualityComparer(eq));\n\n  for (let idx$$2 = 0; idx$$2 <= array$$15.length - 1; idx$$2++) {\n    const value$$2 = array$$15[idx$$2];\n    const key = projection(value$$2);\n    const matchValue$$3 = tryGetValue(dict, key, 0);\n\n    if (matchValue$$3[0]) {\n      dict.set(key, matchValue$$3[1] + 1);\n    } else {\n      dict.set(key, 1);\n    }\n  }\n\n  const res$$2 = new Array(dict.size);\n  let i$$12 = 0;\n  iterate$$1(function (group) {\n    res$$2[i$$12] = [group[0], group[1]];\n    i$$12 = i$$12 + 1;\n  }, dict);\n  return res$$2;\n}\nexport function distinctBy(projection$$1, array$$16, eq$$1) {\n  const hashSet = createMutable$$1([], comparerFromEqualityComparer(eq$$1));\n  return filter(function predicate$$2($arg$$3) {\n    return addToSet(projection$$1($arg$$3), hashSet);\n  }, array$$16);\n}\nexport function distinct(array$$18, eq$$2) {\n  return distinctBy(function (x$$2) {\n    return x$$2;\n  }, array$$18, eq$$2);\n}\nexport function where(predicate$$3, array$$19) {\n  return array$$19.filter(predicate$$3);\n}\nexport function contains(value$$3, array$$21, eq$$3) {\n  const loop = function loop(i$$13) {\n    loop: while (true) {\n      if (i$$13 >= array$$21.length) {\n        return false;\n      } else if (eq$$3.Equals(value$$3, array$$21[i$$13])) {\n        return true;\n      } else {\n        const $i$$13$$51 = i$$13;\n        i$$13 = $i$$13$$51 + 1;\n        continue loop;\n      }\n\n      break;\n    }\n  };\n\n  return loop(0);\n}\nexport function except(itemsToExclude, array$$22, eq$$4) {\n  if (array$$22.length === 0) {\n    return array$$22;\n  } else {\n    const cached = createMutable$$1(itemsToExclude, comparerFromEqualityComparer(eq$$4));\n    return array$$22.filter(function predicate$$5(arg00$$1) {\n      return addToSet(arg00$$1, cached);\n    });\n  }\n}\nexport function groupBy(projection$$2, array$$25, cons$$11, eq$$5) {\n  const dict$$1 = createMutable([], comparerFromEqualityComparer(eq$$5));\n  const keys = [];\n\n  for (let idx$$3 = 0; idx$$3 <= array$$25.length - 1; idx$$3++) {\n    const v = array$$25[idx$$3];\n    const key$$1 = projection$$2(v);\n    const matchValue$$4 = tryGetValue(dict$$1, key$$1, null);\n\n    if (matchValue$$4[0]) {\n      dict$$1.set(key$$1, new List(v, matchValue$$4[1]));\n    } else {\n      addToDict(dict$$1, key$$1, new List(v, new List()));\n      keys.push(key$$1);\n    }\n  }\n\n  const result$$5 = new Array(count$$26(keys));\n  iterateIndexed$$1(function action(i$$14, key$$2) {\n    result$$5[i$$14] = [key$$2, cons$$11.from(getItemFromDict(dict$$1, key$$2)).reverse()];\n  }, keys);\n  return result$$5;\n}\nexport function empty(cons$$12) {\n  return new cons$$12(0);\n}\nexport function singleton(value$$4, cons$$14) {\n  const ar = new cons$$14(1);\n  ar[0] = value$$4;\n  return ar;\n}\nexport function initialize(count$$8, initializer, cons$$15) {\n  if (count$$8 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$6 = new cons$$15(count$$8);\n\n  for (let i$$15 = 0; i$$15 <= count$$8 - 1; i$$15++) {\n    result$$6[i$$15] = initializer(i$$15);\n  }\n\n  return result$$6;\n}\nexport function pairwise(array$$28) {\n  if (array$$28.length < 2) {\n    return [];\n  } else {\n    const count$$9 = array$$28.length - 1 | 0;\n    const result$$7 = new Array(count$$9);\n\n    for (let i$$16 = 0; i$$16 <= count$$9 - 1; i$$16++) {\n      result$$7[i$$16] = [array$$28[i$$16], array$$28[i$$16 + 1]];\n    }\n\n    return result$$7;\n  }\n}\nexport function replicate(count$$10, initial, cons$$16) {\n  if (count$$10 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  const result$$8 = new cons$$16(count$$10);\n\n  for (let i$$17 = 0; i$$17 <= result$$8.length - 1; i$$17++) {\n    result$$8[i$$17] = initial;\n  }\n\n  return result$$8;\n}\nexport function copy(array$$29, cons$$17) {\n  return array$$29.slice();\n}\nexport function reverse(array$$31, cons$$18) {\n  return array$$31.slice().reverse();\n}\nexport function scan(folder, state$$2, array$$35, cons$$19) {\n  const res$$3 = new cons$$19(array$$35.length + 1);\n  res$$3[0] = state$$2;\n\n  for (let i$$18 = 0; i$$18 <= array$$35.length - 1; i$$18++) {\n    res$$3[i$$18 + 1] = folder(res$$3[i$$18], array$$35[i$$18]);\n  }\n\n  return res$$3;\n}\nexport function scanBack(folder$$1, array$$36, state$$3, cons$$20) {\n  const res$$4 = new cons$$20(array$$36.length + 1);\n  res$$4[array$$36.length] = state$$3;\n\n  for (let i$$19 = array$$36.length - 1; i$$19 >= 0; i$$19--) {\n    res$$4[i$$19] = folder$$1(array$$36[i$$19], res$$4[i$$19 + 1]);\n  }\n\n  return res$$4;\n}\nexport function skip(count$$11, array$$37, cons$$21) {\n  if (count$$11 > array$$37.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$11 === array$$37.length) {\n    return new cons$$21(0);\n  } else {\n    const count$$12 = (count$$11 < 0 ? 0 : count$$11) | 0;\n    return array$$37.slice(count$$12);\n  }\n}\nexport function skipWhile(predicate$$7, array$$39, cons$$23) {\n  let count$$14 = 0;\n\n  while (count$$14 < array$$39.length ? predicate$$7(array$$39[count$$14]) : false) {\n    count$$14 = count$$14 + 1;\n  }\n\n  if (count$$14 === array$$39.length) {\n    return new cons$$23(0);\n  } else {\n    return array$$39.slice(count$$14);\n  }\n}\nexport function take(count$$16, array$$41, cons$$25) {\n  if (count$$16 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: count\");\n  }\n\n  if (count$$16 > array$$41.length) {\n    throw new Error(\"count is greater than array length\\\\nParameter name: count\");\n  }\n\n  if (count$$16 === 0) {\n    return new cons$$25(0);\n  } else {\n    return array$$41.slice(0, 0 + count$$16);\n  }\n}\nexport function takeWhile(predicate$$8, array$$43, cons$$27) {\n  let count$$18 = 0;\n\n  while (count$$18 < array$$43.length ? predicate$$8(array$$43[count$$18]) : false) {\n    count$$18 = count$$18 + 1;\n  }\n\n  if (count$$18 === 0) {\n    return new cons$$27(0);\n  } else {\n    return array$$43.slice(0, 0 + count$$18);\n  }\n}\nexport function addRangeInPlace(range, array$$45) {\n  const iter = range[Symbol.iterator]();\n  let cur = iter.next();\n\n  while (!cur.done) {\n    array$$45.push(cur.value);\n    cur = iter.next();\n  }\n}\nexport function removeInPlace(item$$2, array$$47) {\n  const i$$20 = array$$47.indexOf(item$$2);\n\n  if (i$$20 > -1) {\n    array$$47.splice(i$$20, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function removeAllInPlace(predicate$$9, array$$50) {\n  const countRemoveAll = function countRemoveAll(count$$20) {\n    const i$$21 = array$$50.findIndex(predicate$$9);\n\n    if (i$$21 > -1) {\n      array$$50.splice(i$$21, 1);\n      return countRemoveAll(count$$20) + 1 | 0;\n    } else {\n      return count$$20 | 0;\n    }\n  };\n\n  return countRemoveAll(0) | 0;\n}\nexport function copyTo(source$$4, sourceIndex, target$$4, targetIndex$$1, count$$21) {\n  const diff = targetIndex$$1 - sourceIndex | 0;\n\n  for (let i$$22 = sourceIndex; i$$22 <= sourceIndex + count$$21 - 1; i$$22++) {\n    target$$4[i$$22 + diff] = source$$4[i$$22];\n  }\n}\nexport function partition(f$$6, source$$5, cons$$29) {\n  const len$$9 = source$$5.length | 0;\n  const res1 = new cons$$29(len$$9);\n  const res2 = new cons$$29(len$$9);\n  let iTrue = 0;\n  let iFalse = 0;\n\n  for (let i$$23 = 0; i$$23 <= len$$9 - 1; i$$23++) {\n    if (f$$6(source$$5[i$$23])) {\n      res1[iTrue] = source$$5[i$$23];\n      iTrue = iTrue + 1;\n    } else {\n      res2[iFalse] = source$$5[i$$23];\n      iFalse = iFalse + 1;\n    }\n  }\n\n  return [truncate(iTrue, res1), truncate(iFalse, res2)];\n}\nexport function find(predicate$$11, array$$55) {\n  const matchValue$$5 = array$$55.find(predicate$$11);\n\n  if (matchValue$$5 == null) {\n    return indexNotFound();\n  } else {\n    const res$$5 = value$$10(matchValue$$5);\n    return res$$5;\n  }\n}\nexport function tryFind(predicate$$13, array$$57) {\n  return array$$57.find(predicate$$13);\n}\nexport function findIndex(predicate$$15, array$$59) {\n  var index;\n  const matchValue$$6 = array$$59.findIndex(predicate$$15);\n\n  if (index = matchValue$$6 | 0, index > -1) {\n    const index$$1 = matchValue$$6 | 0;\n    return index$$1 | 0;\n  } else {\n    return indexNotFound() | 0;\n  }\n}\nexport function tryFindIndex(predicate$$17, array$$61) {\n  var index$$2;\n  const matchValue$$7 = array$$61.findIndex(predicate$$17);\n\n  if (index$$2 = matchValue$$7 | 0, index$$2 > -1) {\n    const index$$3 = matchValue$$7 | 0;\n    return index$$3;\n  } else {\n    return null;\n  }\n}\nexport function pick(chooser, array$$63) {\n  const loop$$1 = function loop$$1(i$$24) {\n    loop$$1: while (true) {\n      if (i$$24 >= array$$63.length) {\n        return indexNotFound();\n      } else {\n        const matchValue$$8 = chooser(array$$63[i$$24]);\n\n        if (matchValue$$8 != null) {\n          const res$$6 = value$$10(matchValue$$8);\n          return res$$6;\n        } else {\n          const $i$$24$$88 = i$$24;\n          i$$24 = $i$$24$$88 + 1;\n          continue loop$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(0);\n}\nexport function tryPick(chooser$$1, array$$64) {\n  const loop$$2 = function loop$$2(i$$25) {\n    loop$$2: while (true) {\n      if (i$$25 >= array$$64.length) {\n        return null;\n      } else {\n        const matchValue$$9 = chooser$$1(array$$64[i$$25]);\n\n        if (matchValue$$9 == null) {\n          const $i$$25$$91 = i$$25;\n          i$$25 = $i$$25$$91 + 1;\n          continue loop$$2;\n        } else {\n          const res$$7 = matchValue$$9;\n          return res$$7;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return loop$$2(0);\n}\nexport function findBack(predicate$$19, array$$65) {\n  const loop$$3 = function loop$$3(i$$26) {\n    loop$$3: while (true) {\n      if (i$$26 < 0) {\n        return indexNotFound();\n      } else if (predicate$$19(array$$65[i$$26])) {\n        return array$$65[i$$26];\n      } else {\n        const $i$$26$$94 = i$$26;\n        i$$26 = $i$$26$$94 - 1;\n        continue loop$$3;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$3(array$$65.length - 1);\n}\nexport function tryFindBack(predicate$$20, array$$66) {\n  const loop$$4 = function loop$$4(i$$27) {\n    loop$$4: while (true) {\n      if (i$$27 < 0) {\n        return null;\n      } else if (predicate$$20(array$$66[i$$27])) {\n        return some(array$$66[i$$27]);\n      } else {\n        const $i$$27$$97 = i$$27;\n        i$$27 = $i$$27$$97 - 1;\n        continue loop$$4;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$4(array$$66.length - 1);\n}\nexport function findLastIndex(predicate$$21, array$$67) {\n  const loop$$5 = function loop$$5(i$$28) {\n    loop$$5: while (true) {\n      if (i$$28 < 0) {\n        return -1 | 0;\n      } else if (predicate$$21(array$$67[i$$28])) {\n        return i$$28 | 0;\n      } else {\n        const $i$$28$$100 = i$$28;\n        i$$28 = $i$$28$$100 - 1;\n        continue loop$$5;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$5(array$$67.length - 1) | 0;\n}\nexport function findIndexBack(predicate$$22, array$$68) {\n  const loop$$6 = function loop$$6(i$$29) {\n    loop$$6: while (true) {\n      if (i$$29 < 0) {\n        return indexNotFound() | 0;\n      } else if (predicate$$22(array$$68[i$$29])) {\n        return i$$29 | 0;\n      } else {\n        const $i$$29$$103 = i$$29;\n        i$$29 = $i$$29$$103 - 1;\n        continue loop$$6;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$6(array$$68.length - 1) | 0;\n}\nexport function tryFindIndexBack(predicate$$23, array$$69) {\n  const loop$$7 = function loop$$7(i$$30) {\n    loop$$7: while (true) {\n      if (i$$30 < 0) {\n        return null;\n      } else if (predicate$$23(array$$69[i$$30])) {\n        return i$$30;\n      } else {\n        const $i$$30$$106 = i$$30;\n        i$$30 = $i$$30$$106 - 1;\n        continue loop$$7;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$7(array$$69.length - 1);\n}\nexport function choose(chooser$$2, array$$70, cons$$30) {\n  const f$$7 = function f$$7(x$$3) {\n    return chooser$$2(x$$3) != null;\n  };\n\n  const g = function g(x$$4) {\n    return value$$10(chooser$$2(x$$4));\n  };\n\n  const arr$$6 = array$$70.filter(f$$7);\n  return map(g, arr$$6, cons$$30);\n}\nexport function foldIndexed(folder$$2, state$$4, array$$72) {\n  return array$$72.reduce(function folder$$3(acc$$2, x$$5, i$$31) {\n    return folder$$2(i$$31, acc$$2, x$$5);\n  }, state$$4);\n}\nexport function fold(folder$$4, state$$6, array$$74) {\n  return array$$74.reduce(folder$$4, state$$6);\n}\nexport function iterate(action$$1, array$$76) {\n  for (let i$$32 = 0; i$$32 <= array$$76.length - 1; i$$32++) {\n    action$$1(array$$76[i$$32]);\n  }\n}\nexport function iterateIndexed(action$$2, array$$77) {\n  for (let i$$33 = 0; i$$33 <= array$$77.length - 1; i$$33++) {\n    action$$2(i$$33, array$$77[i$$33]);\n  }\n}\nexport function iterate2(action$$3, array1$$2, array2$$2) {\n  if (array1$$2.length !== array2$$2.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$34 = 0; i$$34 <= array1$$2.length - 1; i$$34++) {\n    action$$3(array1$$2[i$$34], array2$$2[i$$34]);\n  }\n}\nexport function iterateIndexed2(action$$4, array1$$3, array2$$3) {\n  if (array1$$3.length !== array2$$3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  for (let i$$35 = 0; i$$35 <= array1$$3.length - 1; i$$35++) {\n    action$$4(i$$35, array1$$3[i$$35], array2$$3[i$$35]);\n  }\n}\nexport function isEmpty(array$$78) {\n  return array$$78.length === 0;\n}\nexport function forAll(predicate$$25, array$$79) {\n  return array$$79.every(predicate$$25);\n}\nexport function permute(f$$8, array$$81) {\n  const size = array$$81.length | 0;\n  const res$$8 = new array$$81.constructor(array$$81.length);\n  const checkFlags = new Array(size);\n  iterateIndexed(function (i$$36, x$$7) {\n    const j$$1 = f$$8(i$$36) | 0;\n\n    if (j$$1 < 0 ? true : j$$1 >= size) {\n      throw new Error(\"Not a valid permutation\");\n    }\n\n    res$$8[j$$1] = x$$7;\n    checkFlags[j$$1] = 1;\n  }, array$$81);\n  const isValid = forAll(function (y) {\n    return 1 === y;\n  }, checkFlags);\n\n  if (!isValid) {\n    throw new Error(\"Not a valid permutation\");\n  }\n\n  return res$$8;\n}\nexport function setSlice(target$$5, lower, upper, source$$6) {\n  const lower$$1 = defaultArg(lower, 0) | 0;\n  const upper$$1 = defaultArg(upper, 0) | 0;\n  const length = (upper$$1 > 0 ? upper$$1 : target$$5.length - 1) - lower$$1 | 0;\n\n  if (ArrayBuffer.isView(target$$5) ? source$$6.length <= length : false) {\n    return target$$5.set(source$$6, lower$$1);\n  } else {\n    for (let i$$37 = 0; i$$37 <= length; i$$37++) {\n      target$$5[i$$37 + lower$$1] = source$$6[i$$37];\n    }\n  }\n}\nexport function sortInPlaceBy(projection$$3, xs, comparer) {\n  xs.sort(function (x$$9, y$$1) {\n    return comparer.Compare(projection$$3(x$$9), projection$$3(y$$1));\n  });\n}\nexport function sortInPlace(xs$$1, comparer$$1) {\n  xs$$1.sort(function (x$$10, y$$2) {\n    return comparer$$1.Compare(x$$10, y$$2);\n  });\n}\n\nfunction copyArray(array$$82) {\n  const result$$9 = new array$$82.constructor(array$$82.length);\n\n  for (let i$$38 = 0; i$$38 <= array$$82.length - 1; i$$38++) {\n    result$$9[i$$38] = array$$82[i$$38];\n  }\n\n  return result$$9;\n}\n\nexport function sort(xs$$2, comparer$$2) {\n  const xs$$3 = copyArray(xs$$2);\n  xs$$3.sort(function comparer$$3(x$$11, y$$3) {\n    return comparer$$2.Compare(x$$11, y$$3);\n  });\n  return xs$$3;\n}\nexport function sortBy(projection$$4, xs$$4, comparer$$4) {\n  const xs$$5 = copyArray(xs$$4);\n  xs$$5.sort(function comparer$$5(x$$12, y$$4) {\n    return comparer$$4.Compare(projection$$4(x$$12), projection$$4(y$$4));\n  });\n  return xs$$5;\n}\nexport function sortDescending(xs$$6, comparer$$6) {\n  const xs$$7 = copyArray(xs$$6);\n  xs$$7.sort(function comparer$$7(x$$13, y$$5) {\n    return comparer$$6.Compare(x$$13, y$$5) * -1;\n  });\n  return xs$$7;\n}\nexport function sortByDescending(projection$$5, xs$$8, comparer$$8) {\n  const xs$$9 = copyArray(xs$$8);\n  xs$$9.sort(function comparer$$9(x$$14, y$$6) {\n    return comparer$$8.Compare(projection$$5(x$$14), projection$$5(y$$6)) * -1;\n  });\n  return xs$$9;\n}\nexport function sortWith(comparer$$10, xs$$10) {\n  const xs$$11 = copyArray(xs$$10);\n  xs$$11.sort(comparer$$10);\n  return xs$$11;\n}\nexport function unfold(generator, state$$8) {\n  const res$$9 = [];\n\n  const loop$$8 = function loop$$8(state$$9) {\n    loop$$8: while (true) {\n      const matchValue$$10 = generator(state$$9);\n\n      if (matchValue$$10 != null) {\n        const x$$15 = matchValue$$10[0];\n        const s$0027$$2 = matchValue$$10[1];\n        res$$9.push(x$$15);\n        state$$9 = s$0027$$2;\n        continue loop$$8;\n      }\n\n      break;\n    }\n  };\n\n  loop$$8(state$$8);\n  return res$$9;\n}\nexport function unzip(array$$84) {\n  const len$$11 = array$$84.length | 0;\n  const res1$$1 = new Array(len$$11);\n  const res2$$1 = new Array(len$$11);\n  iterateIndexed(function (i$$39, tupledArg) {\n    res1$$1[i$$39] = tupledArg[0];\n    res2$$1[i$$39] = tupledArg[1];\n  }, array$$84);\n  return [res1$$1, res2$$1];\n}\nexport function unzip3(array$$85) {\n  const len$$14 = array$$85.length | 0;\n  const res1$$2 = new Array(len$$14);\n  const res2$$2 = new Array(len$$14);\n  const res3 = new Array(len$$14);\n  iterateIndexed(function (i$$40, tupledArg$$1) {\n    res1$$2[i$$40] = tupledArg$$1[0];\n    res2$$2[i$$40] = tupledArg$$1[1];\n    res3[i$$40] = tupledArg$$1[2];\n  }, array$$85);\n  return [res1$$2, res2$$2, res3];\n}\nexport function zip(array1$$4, array2$$4) {\n  if (array1$$4.length !== array2$$4.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$10 = new Array(array1$$4.length);\n\n  for (let i$$41 = 0; i$$41 <= array1$$4.length - 1; i$$41++) {\n    result$$10[i$$41] = [array1$$4[i$$41], array2$$4[i$$41]];\n  }\n\n  return result$$10;\n}\nexport function zip3(array1$$5, array2$$5, array3) {\n  if (array1$$5.length !== array2$$5.length ? true : array2$$5.length !== array3.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const result$$11 = new Array(array1$$5.length);\n\n  for (let i$$42 = 0; i$$42 <= array1$$5.length - 1; i$$42++) {\n    result$$11[i$$42] = [array1$$5[i$$42], array2$$5[i$$42], array3[i$$42]];\n  }\n\n  return result$$11;\n}\nexport function chunkBySize(chunkSize, array$$86) {\n  if (chunkSize < 1) {\n    throw new Error(\"The input must be positive.\\\\nParameter name: size\");\n  }\n\n  if (array$$86.length === 0) {\n    return [[]];\n  } else {\n    const result$$12 = [];\n\n    for (let x$$16 = 0; x$$16 <= ~~Math.ceil(array$$86.length / chunkSize) - 1; x$$16++) {\n      const start$$8 = x$$16 * chunkSize | 0;\n      const slice = array$$86.slice(start$$8, start$$8 + chunkSize);\n      result$$12.push(slice);\n    }\n\n    return result$$12;\n  }\n}\nexport function splitAt(index$$4, array$$89) {\n  if (index$$4 < 0) {\n    throw new Error(\"The input must be non-negative\\\\nParameter name: index\");\n  }\n\n  if (index$$4 > array$$89.length) {\n    throw new Error(\"The input sequence has an insufficient number of elements.\\\\nParameter name: index\");\n  }\n\n  return [array$$89.slice(0, 0 + index$$4), array$$89.slice(index$$4)];\n}\nexport function compareWith(comparer$$12, array1$$6, array2$$6) {\n  if (array1$$6 == null) {\n    if (array2$$6 == null) {\n      return 0;\n    } else {\n      return -1 | 0;\n    }\n  } else if (array2$$6 == null) {\n    return 1;\n  } else {\n    let i$$43 = 0;\n    let result$$13 = 0;\n    const length1 = array1$$6.length | 0;\n    const length2 = array2$$6.length | 0;\n\n    if (length1 > length2) {\n      return 1;\n    } else if (length1 < length2) {\n      return -1 | 0;\n    } else {\n      while (i$$43 < length1 ? result$$13 === 0 : false) {\n        result$$13 = comparer$$12(array1$$6[i$$43], array2$$6[i$$43]);\n        i$$43 = i$$43 + 1;\n      }\n\n      return result$$13 | 0;\n    }\n  }\n}\nexport function equalsWith(comparer$$13, array1$$7, array2$$7) {\n  return compareWith(compare, array1$$7, array2$$7) === 0;\n}\nexport function exactlyOne(array$$92) {\n  if (array$$92.length === 1) {\n    return array$$92[0];\n  } else if (array$$92.length === 0) {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: array\");\n  } else {\n    throw new Error(\"Input array too long\\\\nParameter name: array\");\n  }\n}\nexport function head(array$$93) {\n  if (array$$93.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  } else {\n    return array$$93[0];\n  }\n}\nexport function tryHead(array$$94) {\n  if (array$$94.length === 0) {\n    return null;\n  } else {\n    return some(array$$94[0]);\n  }\n}\nexport function tail(array$$95) {\n  if (array$$95.length === 0) {\n    throw new Error(\"Not enough elements\\\\nParameter name: array\");\n  }\n\n  return array$$95.slice(1);\n}\nexport function item(index$$5, array$$97) {\n  return array$$97[index$$5];\n}\nexport function tryItem(index$$6, array$$98) {\n  if (index$$6 < 0 ? true : index$$6 >= array$$98.length) {\n    return null;\n  } else {\n    return some(array$$98[index$$6]);\n  }\n}\nexport function foldBackIndexed(folder$$6, array$$99, state$$10) {\n  return array$$99.reduceRight(function folder$$7(acc$$4, x$$17, i$$44) {\n    return folder$$6(i$$44, x$$17, acc$$4);\n  }, state$$10);\n}\nexport function foldBack(folder$$8, array$$101, state$$12) {\n  return array$$101.reduceRight(function folder$$9(acc$$5, x$$18) {\n    return folder$$8(x$$18, acc$$5);\n  }, state$$12);\n}\nexport function foldIndexed2(folder$$10, state$$14, array1$$8, array2$$8) {\n  let acc$$6 = state$$14;\n\n  if (array1$$8.length !== array2$$8.length) {\n    throw new Error(\"Arrays have different lengths\");\n  }\n\n  for (let i$$45 = 0; i$$45 <= array1$$8.length - 1; i$$45++) {\n    acc$$6 = folder$$10(i$$45, acc$$6, array1$$8[i$$45], array2$$8[i$$45]);\n  }\n\n  return acc$$6;\n}\nexport function fold2(folder$$11, state$$15, array1$$9, array2$$9) {\n  return foldIndexed2(function (_arg1, acc$$7, x$$19, y$$7) {\n    return folder$$11(acc$$7, x$$19, y$$7);\n  }, state$$15, array1$$9, array2$$9);\n}\nexport function foldBackIndexed2(folder$$12, array1$$10, array2$$10, state$$16) {\n  let acc$$8 = state$$16;\n\n  if (array1$$10.length !== array2$$10.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  const size$$1 = array1$$10.length | 0;\n\n  for (let i$$46 = 1; i$$46 <= size$$1; i$$46++) {\n    acc$$8 = folder$$12(i$$46 - 1, array1$$10[size$$1 - i$$46], array2$$10[size$$1 - i$$46], acc$$8);\n  }\n\n  return acc$$8;\n}\nexport function foldBack2(f$$9, array1$$11, array2$$11, state$$17) {\n  return foldBackIndexed2(function (_arg1$$1, x$$20, y$$8, acc$$9) {\n    return f$$9(x$$20, y$$8, acc$$9);\n  }, array1$$11, array2$$11, state$$17);\n}\nexport function reduce(reduction, array$$103) {\n  if (array$$103.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$103.reduce(reduction);\n}\nexport function reduceBack(reduction$$2, array$$105) {\n  if (array$$105.length === 0) {\n    throw new Error(\"The input array was empty\");\n  }\n\n  return array$$105.reduceRight(reduction$$2);\n}\nexport function forAll2(predicate$$27, array1$$12, array2$$12) {\n  return fold2(function (acc$$10, x$$21, y$$9) {\n    return acc$$10 ? predicate$$27(x$$21, y$$9) : false;\n  }, true, array1$$12, array2$$12);\n}\nexport function existsOffset($arg$$178, $arg$$179, $arg$$180) {\n  existsOffset: while (true) {\n    const predicate$$28 = $arg$$178,\n          array$$107 = $arg$$179,\n          index$$7 = $arg$$180;\n\n    if (index$$7 === array$$107.length) {\n      return false;\n    } else if (predicate$$28(array$$107[index$$7])) {\n      return true;\n    } else {\n      $arg$$178 = predicate$$28;\n      $arg$$179 = array$$107;\n      $arg$$180 = index$$7 + 1;\n      continue existsOffset;\n    }\n\n    break;\n  }\n}\nexport function exists(predicate$$29, array$$108) {\n  return existsOffset(predicate$$29, array$$108, 0);\n}\nexport function existsOffset2($arg$$183, $arg$$184, $arg$$185, $arg$$186) {\n  existsOffset2: while (true) {\n    const predicate$$30 = $arg$$183,\n          array1$$13 = $arg$$184,\n          array2$$13 = $arg$$185,\n          index$$8 = $arg$$186;\n\n    if (index$$8 === array1$$13.length) {\n      return false;\n    } else if (predicate$$30(array1$$13[index$$8], array2$$13[index$$8])) {\n      return true;\n    } else {\n      $arg$$183 = predicate$$30;\n      $arg$$184 = array1$$13;\n      $arg$$185 = array2$$13;\n      $arg$$186 = index$$8 + 1;\n      continue existsOffset2;\n    }\n\n    break;\n  }\n}\nexport function exists2(predicate$$31, array1$$14, array2$$14) {\n  if (array1$$14.length !== array2$$14.length) {\n    throw new Error(\"Arrays had different lengths\");\n  }\n\n  return existsOffset2(predicate$$31, array1$$14, array2$$14, 0);\n}\nexport function sum(array$$109, adder) {\n  let acc$$11 = adder.GetZero();\n\n  for (let i$$47 = 0; i$$47 <= array$$109.length - 1; i$$47++) {\n    acc$$11 = adder.Add(acc$$11, array$$109[i$$47]);\n  }\n\n  return acc$$11;\n}\nexport function sumBy(projection$$6, array$$110, adder$$1) {\n  let acc$$12 = adder$$1.GetZero();\n\n  for (let i$$48 = 0; i$$48 <= array$$110.length - 1; i$$48++) {\n    acc$$12 = adder$$1.Add(acc$$12, projection$$6(array$$110[i$$48]));\n  }\n\n  return acc$$12;\n}\nexport function maxBy(projection$$7, xs$$12, comparer$$14) {\n  return reduce(function (x$$22, y$$10) {\n    return comparer$$14.Compare(projection$$7(y$$10), projection$$7(x$$22)) > 0 ? y$$10 : x$$22;\n  }, xs$$12);\n}\nexport function max(xs$$13, comparer$$15) {\n  return reduce(function (x$$23, y$$11) {\n    return comparer$$15.Compare(y$$11, x$$23) > 0 ? y$$11 : x$$23;\n  }, xs$$13);\n}\nexport function minBy(projection$$8, xs$$14, comparer$$16) {\n  return reduce(function (x$$24, y$$12) {\n    return comparer$$16.Compare(projection$$8(y$$12), projection$$8(x$$24)) > 0 ? x$$24 : y$$12;\n  }, xs$$14);\n}\nexport function min(xs$$15, comparer$$17) {\n  return reduce(function (x$$25, y$$13) {\n    return comparer$$17.Compare(y$$13, x$$25) > 0 ? x$$25 : y$$13;\n  }, xs$$15);\n}\nexport function average(array$$111, averager) {\n  if (array$$111.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total = averager.GetZero();\n\n  for (let i$$49 = 0; i$$49 <= array$$111.length - 1; i$$49++) {\n    total = averager.Add(total, array$$111[i$$49]);\n  }\n\n  return averager.DivideByInt(total, array$$111.length);\n}\nexport function averageBy(projection$$9, array$$112, averager$$1) {\n  if (array$$112.length === 0) {\n    throw new Error(\"The input array was empty\\\\nParameter name: array\");\n  }\n\n  let total$$1 = averager$$1.GetZero();\n\n  for (let i$$50 = 0; i$$50 <= array$$112.length - 1; i$$50++) {\n    total$$1 = averager$$1.Add(total$$1, projection$$9(array$$112[i$$50]));\n  }\n\n  return averager$$1.DivideByInt(total$$1, array$$112.length);\n}\nexport function ofSeq(source$$8, cons$$31) {\n  return cons$$31.from(source$$8);\n}\nexport function ofList(source$$9, cons$$32) {\n  return cons$$32.from(source$$9);\n}\nexport function toList(source$$10) {\n  const len$$20 = source$$10.length | 0;\n  let target$$7 = new List();\n\n  for (let i$$51 = len$$20 - 1; i$$51 >= 0; i$$51--) {\n    target$$7 = new List(source$$10[i$$51], target$$7);\n  }\n\n  return target$$7;\n}\nexport function windowed(windowSize, source$$11) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  const res$$10 = new Array(max$$1(comparePrimitives, 0, source$$11.length - windowSize));\n\n  for (let i$$52 = windowSize; i$$52 <= source$$11.length; i$$52++) {\n    res$$10[i$$52 - windowSize] = source$$11.slice(i$$52 - windowSize, i$$52 - 1 + 1);\n  }\n\n  return res$$10;\n}","import { defaultArg, value as value$$1, some } from \"./Option.js\";\nimport { FSharpRef, List } from \"./Types.js\";\nimport { iterate as iterate$$1, collect as collect$$1, scanBack as scanBack$$1, scan as scan$$1, foldBack2 as foldBack2$$1, fold2 as fold2$$1, fold as fold$$1, map as map$$1 } from \"./Seq.js\";\nimport { getItemFromDict, addToDict, tryGetValue, addToSet, comparerFromEqualityComparer, count } from \"./Util.js\";\nimport { ofList } from \"./Array.js\";\nimport { permute as permute$$1, findIndexBack as findIndexBack$$1, tryFindIndexBack as tryFindIndexBack$$1 } from \"./Array\";\nimport { createMutable } from \"./Set.js\";\nimport { createMutable as createMutable$$1 } from \"./Map.js\";\nexport function head(_arg1) {\n  if (_arg1.tail != null) {\n    const x = _arg1.head;\n    return x;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function tryHead(_arg1$$1) {\n  if (_arg1$$1.tail != null) {\n    const x$$1 = _arg1$$1.head;\n    return some(x$$1);\n  } else {\n    return null;\n  }\n}\nexport function tail(_arg1$$2) {\n  if (_arg1$$2.tail != null) {\n    const xs = _arg1$$2.tail;\n    return xs;\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function last(_arg1$$3) {\n  last: while (true) {\n    if (_arg1$$3.tail != null) {\n      if (_arg1$$3.tail.tail == null) {\n        return _arg1$$3.head;\n      } else {\n        const $_arg1$$3$$2 = _arg1$$3;\n        _arg1$$3 = $_arg1$$3$$2.tail;\n        continue last;\n      }\n    } else {\n      throw new Error(\"List was empty\");\n    }\n\n    break;\n  }\n}\nexport function tryLast(_arg1$$4) {\n  tryLast: while (true) {\n    if (_arg1$$4.tail != null) {\n      if (_arg1$$4.tail.tail == null) {\n        return some(_arg1$$4.head);\n      } else {\n        const $_arg1$$4$$3 = _arg1$$4;\n        _arg1$$4 = $_arg1$$4$$3.tail;\n        continue tryLast;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function compareWith(comparer, xs$$3, ys) {\n  if (xs$$3 === ys) {\n    return 0;\n  } else {\n    const loop = function loop(xs$$4, ys$$1) {\n      loop: while (true) {\n        const matchValue = [xs$$4, ys$$1];\n\n        if (matchValue[0].tail != null) {\n          if (matchValue[1].tail != null) {\n            const matchValue$$1 = comparer(matchValue[0].head, matchValue[1].head) | 0;\n\n            if (matchValue$$1 === 0) {\n              xs$$4 = matchValue[0].tail;\n              ys$$1 = matchValue[1].tail;\n              continue loop;\n            } else {\n              const res = matchValue$$1 | 0;\n              return res | 0;\n            }\n          } else {\n            return 1;\n          }\n        } else if (matchValue[1].tail == null) {\n          return 0;\n        } else {\n          return -1 | 0;\n        }\n\n        break;\n      }\n    };\n\n    return loop(xs$$3, ys) | 0;\n  }\n}\nexport function foldIndexedAux($arg$$7, $arg$$8, $arg$$9, $arg$$10) {\n  foldIndexedAux: while (true) {\n    const f = $arg$$7,\n          i = $arg$$8,\n          acc = $arg$$9,\n          _arg1$$5 = $arg$$10;\n\n    if (_arg1$$5.tail != null) {\n      const xs$$6 = _arg1$$5.tail;\n      const x$$5 = _arg1$$5.head;\n      $arg$$7 = f;\n      $arg$$8 = i + 1;\n      $arg$$9 = f(i, acc, x$$5);\n      $arg$$10 = xs$$6;\n      continue foldIndexedAux;\n    } else {\n      return acc;\n    }\n\n    break;\n  }\n}\nexport function foldIndexed(f$$1, state, xs$$7) {\n  return foldIndexedAux(f$$1, 0, state, xs$$7);\n}\nexport function fold($arg$$14, $arg$$15, $arg$$16) {\n  fold: while (true) {\n    const f$$2 = $arg$$14,\n          state$$1 = $arg$$15,\n          xs$$8 = $arg$$16;\n\n    if (xs$$8.tail != null) {\n      const t = xs$$8.tail;\n      const h = xs$$8.head;\n      $arg$$14 = f$$2;\n      $arg$$15 = f$$2(state$$1, h);\n      $arg$$16 = t;\n      continue fold;\n    } else {\n      return state$$1;\n    }\n\n    break;\n  }\n}\nexport function reverse(xs$$9) {\n  return fold(function (acc$$1, x$$6) {\n    return new List(x$$6, acc$$1);\n  }, new List(), xs$$9);\n}\nexport function foldBack(f$$3, xs$$10, state$$2) {\n  return fold(function (acc$$2, x$$7) {\n    return f$$3(x$$7, acc$$2);\n  }, state$$2, reverse(xs$$10));\n}\nexport function toSeq(xs$$11) {\n  return map$$1(function (x$$8) {\n    return x$$8;\n  }, xs$$11);\n}\nexport function ofSeq(xs$$12) {\n  return reverse(fold$$1(function (acc$$3, x$$9) {\n    return new List(x$$9, acc$$3);\n  }, new List(), xs$$12));\n}\nexport function concat(lists) {\n  return reverse(fold$$1(function (state$$3, xs$$14) {\n    return fold(function f$$4(acc$$4, x$$10) {\n      return new List(x$$10, acc$$4);\n    }, state$$3, xs$$14);\n  }, new List(), lists));\n}\nexport function foldIndexed2Aux($arg$$20, $arg$$21, $arg$$22, $arg$$23, $arg$$24) {\n  foldIndexed2Aux: while (true) {\n    const f$$5 = $arg$$20,\n          i$$1 = $arg$$21,\n          acc$$5 = $arg$$22,\n          bs = $arg$$23,\n          cs = $arg$$24;\n    const matchValue$$2 = [bs, cs];\n    var $target$$25, x$$11, xs$$16, y$$1, ys$$3;\n\n    if (matchValue$$2[0].tail != null) {\n      if (matchValue$$2[1].tail != null) {\n        $target$$25 = 1;\n        x$$11 = matchValue$$2[0].head;\n        xs$$16 = matchValue$$2[0].tail;\n        y$$1 = matchValue$$2[1].head;\n        ys$$3 = matchValue$$2[1].tail;\n      } else {\n        $target$$25 = 2;\n      }\n    } else if (matchValue$$2[1].tail == null) {\n      $target$$25 = 0;\n    } else {\n      $target$$25 = 2;\n    }\n\n    switch ($target$$25) {\n      case 0:\n        {\n          return acc$$5;\n        }\n\n      case 1:\n        {\n          $arg$$20 = f$$5;\n          $arg$$21 = i$$1 + 1;\n          $arg$$22 = f$$5(i$$1, acc$$5, x$$11, y$$1);\n          $arg$$23 = xs$$16;\n          $arg$$24 = ys$$3;\n          continue foldIndexed2Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed2(f$$6, state$$4, xs$$17, ys$$4) {\n  return foldIndexed2Aux(f$$6, 0, state$$4, xs$$17, ys$$4);\n}\nexport function fold2(f$$7, state$$5, xs$$18, ys$$5) {\n  return fold2$$1(f$$7, state$$5, xs$$18, ys$$5);\n}\nexport function foldBack2(f$$8, xs$$19, ys$$6, state$$6) {\n  return foldBack2$$1(f$$8, xs$$19, ys$$6, state$$6);\n}\nexport function unfold(f$$9, state$$7) {\n  const unfoldInner = function unfoldInner(acc$$6, state$$8) {\n    unfoldInner: while (true) {\n      const matchValue$$3 = f$$9(state$$8);\n\n      if (matchValue$$3 != null) {\n        const x$$12 = matchValue$$3[0];\n        const state$$9 = matchValue$$3[1];\n        const $acc$$6$$40 = acc$$6;\n        acc$$6 = new List(x$$12, $acc$$6$$40);\n        state$$8 = state$$9;\n        continue unfoldInner;\n      } else {\n        return reverse(acc$$6);\n      }\n\n      break;\n    }\n  };\n\n  return unfoldInner(new List(), state$$7);\n}\nexport function foldIndexed3Aux($arg$$41, $arg$$42, $arg$$43, $arg$$44, $arg$$45, $arg$$46) {\n  foldIndexed3Aux: while (true) {\n    const f$$10 = $arg$$41,\n          i$$2 = $arg$$42,\n          acc$$7 = $arg$$43,\n          bs$$1 = $arg$$44,\n          cs$$1 = $arg$$45,\n          ds = $arg$$46;\n    const matchValue$$4 = [bs$$1, cs$$1, ds];\n    var $target$$47, x$$13, xs$$20, y$$2, ys$$7, z, zs;\n\n    if (matchValue$$4[0].tail != null) {\n      if (matchValue$$4[1].tail != null) {\n        if (matchValue$$4[2].tail != null) {\n          $target$$47 = 1;\n          x$$13 = matchValue$$4[0].head;\n          xs$$20 = matchValue$$4[0].tail;\n          y$$2 = matchValue$$4[1].head;\n          ys$$7 = matchValue$$4[1].tail;\n          z = matchValue$$4[2].head;\n          zs = matchValue$$4[2].tail;\n        } else {\n          $target$$47 = 2;\n        }\n      } else {\n        $target$$47 = 2;\n      }\n    } else if (matchValue$$4[1].tail == null) {\n      if (matchValue$$4[2].tail == null) {\n        $target$$47 = 0;\n      } else {\n        $target$$47 = 2;\n      }\n    } else {\n      $target$$47 = 2;\n    }\n\n    switch ($target$$47) {\n      case 0:\n        {\n          return acc$$7;\n        }\n\n      case 1:\n        {\n          $arg$$41 = f$$10;\n          $arg$$42 = i$$2 + 1;\n          $arg$$43 = f$$10(i$$2, acc$$7, x$$13, y$$2, z);\n          $arg$$44 = xs$$20;\n          $arg$$45 = ys$$7;\n          $arg$$46 = zs;\n          continue foldIndexed3Aux;\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function foldIndexed3(f$$11, seed, xs$$21, ys$$8, zs$$1) {\n  return foldIndexed3Aux(f$$11, 0, seed, xs$$21, ys$$8, zs$$1);\n}\nexport function fold3(f$$12, state$$10, xs$$22, ys$$9, zs$$2) {\n  return foldIndexed3(function (_arg1$$6, acc$$8, x$$14, y$$3, z$$1) {\n    return f$$12(acc$$8, x$$14, y$$3, z$$1);\n  }, state$$10, xs$$22, ys$$9, zs$$2);\n}\nexport function scan(f$$13, state$$11, xs$$23) {\n  return ofSeq(scan$$1(f$$13, state$$11, xs$$23));\n}\nexport function scanBack(f$$14, xs$$25, state$$12) {\n  return ofSeq(scanBack$$1(f$$14, xs$$25, state$$12));\n}\nexport function length(xs$$27) {\n  return fold(function (acc$$9, _arg1$$7) {\n    return acc$$9 + 1;\n  }, 0, xs$$27);\n}\nexport function append(xs$$28, ys$$10) {\n  return fold(function (acc$$10, x$$15) {\n    return new List(x$$15, acc$$10);\n  }, ys$$10, reverse(xs$$28));\n}\nexport function collect(f$$15, xs$$29) {\n  return ofSeq(collect$$1(f$$15, xs$$29));\n}\nexport function map(f$$16, xs$$31) {\n  return reverse(fold(function (acc$$11, x$$16) {\n    return new List(f$$16(x$$16), acc$$11);\n  }, new List(), xs$$31));\n}\nexport function mapIndexed(f$$17, xs$$33) {\n  return reverse(foldIndexed(function (i$$3, acc$$12, x$$17) {\n    return new List(f$$17(i$$3, x$$17), acc$$12);\n  }, new List(), xs$$33));\n}\nexport function indexed(xs$$35) {\n  return mapIndexed(function (i$$4, x$$18) {\n    return [i$$4, x$$18];\n  }, xs$$35);\n}\nexport function map2(f$$18, xs$$36, ys$$11) {\n  return reverse(fold2(function (acc$$13, x$$19, y$$4) {\n    return new List(f$$18(x$$19, y$$4), acc$$13);\n  }, new List(), xs$$36, ys$$11));\n}\nexport function mapIndexed2(f$$19, xs$$38, ys$$12) {\n  return reverse(foldIndexed2(function (i$$5, acc$$14, x$$20, y$$5) {\n    return new List(f$$19(i$$5, x$$20, y$$5), acc$$14);\n  }, new List(), xs$$38, ys$$12));\n}\nexport function map3(f$$20, xs$$40, ys$$13, zs$$3) {\n  return reverse(fold3(function (acc$$15, x$$21, y$$6, z$$2) {\n    return new List(f$$20(x$$21, y$$6, z$$2), acc$$15);\n  }, new List(), xs$$40, ys$$13, zs$$3));\n}\nexport function mapIndexed3(f$$21, xs$$42, ys$$14, zs$$4) {\n  return reverse(foldIndexed3(function (i$$6, acc$$16, x$$22, y$$7, z$$3) {\n    return new List(f$$21(i$$6, x$$22, y$$7, z$$3), acc$$16);\n  }, new List(), xs$$42, ys$$14, zs$$4));\n}\nexport function mapFold(f$$22, s, xs$$44) {\n  const foldFn = function foldFn(tupledArg, x$$23) {\n    const patternInput = f$$22(tupledArg[1], x$$23);\n    return [new List(patternInput[0], tupledArg[0]), patternInput[1]];\n  };\n\n  const patternInput$$1 = fold(foldFn, [new List(), s], xs$$44);\n  return [reverse(patternInput$$1[0]), patternInput$$1[1]];\n}\nexport function mapFoldBack(f$$23, xs$$45, s$$2) {\n  return mapFold(function (s$$3, v) {\n    return f$$23(v, s$$3);\n  }, s$$2, reverse(xs$$45));\n}\nexport function iterate(f$$24, xs$$46) {\n  fold(function (unitVar0, x$$24) {\n    f$$24(x$$24);\n  }, null, xs$$46);\n}\nexport function iterate2(f$$25, xs$$47, ys$$15) {\n  fold2(function (unitVar0$$1, x$$25, y$$8) {\n    f$$25(x$$25, y$$8);\n  }, null, xs$$47, ys$$15);\n}\nexport function iterateIndexed(f$$26, xs$$48) {\n  foldIndexed(function (i$$7, unitVar1, x$$26) {\n    f$$26(i$$7, x$$26);\n  }, null, xs$$48);\n}\nexport function iterateIndexed2(f$$27, xs$$49, ys$$16) {\n  foldIndexed2(function (i$$8, unitVar1$$1, x$$27, y$$9) {\n    f$$27(i$$8, x$$27, y$$9);\n  }, null, xs$$49, ys$$16);\n}\nexport function ofArray(xs$$50) {\n  let res$$1 = new List();\n\n  for (let i$$9 = count(xs$$50) - 1; i$$9 >= 0; i$$9--) {\n    res$$1 = new List(xs$$50[i$$9], res$$1);\n  }\n\n  return res$$1;\n}\nexport function empty() {\n  return new List();\n}\nexport function isEmpty(_arg1$$8) {\n  if (_arg1$$8.tail == null) {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function tryPickIndexedAux($arg$$100, $arg$$101, $arg$$102) {\n  tryPickIndexedAux: while (true) {\n    const f$$28 = $arg$$100,\n          i$$10 = $arg$$101,\n          _arg1$$9 = $arg$$102;\n\n    if (_arg1$$9.tail != null) {\n      const xs$$51 = _arg1$$9.tail;\n      const x$$28 = _arg1$$9.head;\n      const result = f$$28(i$$10, x$$28);\n\n      if (result == null) {\n        $arg$$100 = f$$28;\n        $arg$$101 = i$$10 + 1;\n        $arg$$102 = xs$$51;\n        continue tryPickIndexedAux;\n      } else {\n        return result;\n      }\n    } else {\n      return null;\n    }\n\n    break;\n  }\n}\nexport function tryPickIndexed(f$$29, xs$$52) {\n  return tryPickIndexedAux(f$$29, 0, xs$$52);\n}\nexport function tryPick(f$$30, xs$$53) {\n  return tryPickIndexed(function (_arg1$$10, x$$29) {\n    return f$$30(x$$29);\n  }, xs$$53);\n}\nexport function pick(f$$31, xs$$54) {\n  const matchValue$$5 = tryPick(f$$31, xs$$54);\n\n  if (matchValue$$5 != null) {\n    const x$$30 = value$$1(matchValue$$5);\n    return x$$30;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function tryFindIndexed(f$$32, xs$$55) {\n  return tryPickIndexed(function (i$$11, x$$31) {\n    return f$$32(i$$11, x$$31) ? some(x$$31) : null;\n  }, xs$$55);\n}\nexport function tryFind(f$$33, xs$$56) {\n  return tryPickIndexed(function (_arg1$$11, x$$32) {\n    return f$$33(x$$32) ? some(x$$32) : null;\n  }, xs$$56);\n}\nexport function findIndexed(f$$34, xs$$57) {\n  const matchValue$$6 = tryFindIndexed(f$$34, xs$$57);\n\n  if (matchValue$$6 != null) {\n    const x$$33 = value$$1(matchValue$$6);\n    return x$$33;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function find(f$$35, xs$$58) {\n  return findIndexed(function (_arg1$$12, x$$34) {\n    return f$$35(x$$34);\n  }, xs$$58);\n}\nexport function findBack(f$$36, xs$$59) {\n  return find(f$$36, reverse(xs$$59));\n}\nexport function tryFindBack(f$$37, xs$$62) {\n  return tryFind(f$$37, reverse(xs$$62));\n}\nexport function tryFindIndex(f$$38, xs$$65) {\n  return tryPickIndexed(function (i$$12, x$$35) {\n    return f$$38(x$$35) ? i$$12 : null;\n  }, xs$$65);\n}\nexport function tryFindIndexBack(f$$39, xs$$66) {\n  return tryFindIndexBack$$1(f$$39, ofList(xs$$66, Array));\n}\nexport function findIndex(f$$40, xs$$67) {\n  const matchValue$$7 = tryFindIndex(f$$40, xs$$67);\n\n  if (matchValue$$7 != null) {\n    const x$$36 = matchValue$$7 | 0;\n    return x$$36 | 0;\n  } else {\n    throw new Error(\"List did not contain any matching elements\");\n  }\n}\nexport function findIndexBack(f$$41, xs$$68) {\n  return findIndexBack$$1(f$$41, ofList(xs$$68, Array));\n}\nexport function item(n, xs$$69) {\n  return findIndexed(function (i$$13, _arg1$$13) {\n    return n === i$$13;\n  }, xs$$69);\n}\nexport function tryItem(n$$1, xs$$70) {\n  return tryFindIndexed(function (i$$14, _arg1$$14) {\n    return n$$1 === i$$14;\n  }, xs$$70);\n}\nexport function filter(f$$42, xs$$71) {\n  return reverse(fold(function (acc$$17, x$$37) {\n    return f$$42(x$$37) ? new List(x$$37, acc$$17) : acc$$17;\n  }, new List(), xs$$71));\n}\nexport function partition(f$$43, xs$$73) {\n  return fold(function (tupledArg$$1, x$$38) {\n    return f$$43(x$$38) ? [new List(x$$38, tupledArg$$1[0]), tupledArg$$1[1]] : [tupledArg$$1[0], new List(x$$38, tupledArg$$1[1])];\n  }, [new List(), new List()], reverse(xs$$73));\n}\nexport function choose(f$$44, xs$$74) {\n  return reverse(fold(function (acc$$18, x$$39) {\n    const matchValue$$8 = f$$44(x$$39);\n\n    if (matchValue$$8 == null) {\n      return acc$$18;\n    } else {\n      const y$$10 = value$$1(matchValue$$8);\n      return new List(y$$10, acc$$18);\n    }\n  }, new List(), xs$$74));\n}\nexport function contains(value, list, eq) {\n  const loop$$1 = function loop$$1(xs$$76) {\n    loop$$1: while (true) {\n      if (xs$$76.tail != null) {\n        const v$$1 = xs$$76.head;\n        const rest = xs$$76.tail;\n\n        if (eq.Equals(value, v$$1)) {\n          return true;\n        } else {\n          xs$$76 = rest;\n          continue loop$$1;\n        }\n      } else {\n        return false;\n      }\n\n      break;\n    }\n  };\n\n  return loop$$1(list);\n}\nexport function except(itemsToExclude, array$$2, eq$$1) {\n  if (isEmpty(array$$2)) {\n    return array$$2;\n  } else {\n    const cached = createMutable(itemsToExclude, comparerFromEqualityComparer(eq$$1));\n    return filter(function f$$45(arg00) {\n      return addToSet(arg00, cached);\n    }, array$$2);\n  }\n}\nexport function initialize(n$$2, f$$46) {\n  let xs$$78 = new List();\n\n  for (let i$$15 = 1; i$$15 <= n$$2; i$$15++) {\n    xs$$78 = new List(f$$46(n$$2 - i$$15), xs$$78);\n  }\n\n  return xs$$78;\n}\nexport function replicate(n$$3, x$$40) {\n  return initialize(n$$3, function (_arg1$$15) {\n    return x$$40;\n  });\n}\nexport function reduce(f$$47, _arg1$$16) {\n  if (_arg1$$16.tail != null) {\n    const t$$1 = _arg1$$16.tail;\n    const h$$1 = _arg1$$16.head;\n    return fold(f$$47, h$$1, t$$1);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function reduceBack(f$$48, _arg1$$17) {\n  if (_arg1$$17.tail != null) {\n    const t$$2 = _arg1$$17.tail;\n    const h$$2 = _arg1$$17.head;\n    return foldBack(f$$48, t$$2, h$$2);\n  } else {\n    throw new Error(\"List was empty\");\n  }\n}\nexport function forAll(f$$49, xs$$79) {\n  return fold(function (acc$$19, x$$41) {\n    return acc$$19 ? f$$49(x$$41) : false;\n  }, true, xs$$79);\n}\nexport function forAll2(f$$50, xs$$80, ys$$17) {\n  return fold2(function (acc$$20, x$$42, y$$11) {\n    return acc$$20 ? f$$50(x$$42, y$$11) : false;\n  }, true, xs$$80, ys$$17);\n}\nexport function exists($arg$$146, $arg$$147) {\n  exists: while (true) {\n    const f$$51 = $arg$$146,\n          _arg1$$18 = $arg$$147;\n\n    if (_arg1$$18.tail != null) {\n      const xs$$81 = _arg1$$18.tail;\n      const x$$43 = _arg1$$18.head;\n\n      if (f$$51(x$$43)) {\n        return true;\n      } else {\n        $arg$$146 = f$$51;\n        $arg$$147 = xs$$81;\n        continue exists;\n      }\n    } else {\n      return false;\n    }\n\n    break;\n  }\n}\nexport function exists2($arg$$148, $arg$$149, $arg$$150) {\n  exists2: while (true) {\n    const f$$52 = $arg$$148,\n          bs$$2 = $arg$$149,\n          cs$$2 = $arg$$150;\n    const matchValue$$9 = [bs$$2, cs$$2];\n    var $target$$151, x$$44, xs$$82, y$$12, ys$$18;\n\n    if (matchValue$$9[0].tail != null) {\n      if (matchValue$$9[1].tail != null) {\n        $target$$151 = 1;\n        x$$44 = matchValue$$9[0].head;\n        xs$$82 = matchValue$$9[0].tail;\n        y$$12 = matchValue$$9[1].head;\n        ys$$18 = matchValue$$9[1].tail;\n      } else {\n        $target$$151 = 2;\n      }\n    } else if (matchValue$$9[1].tail == null) {\n      $target$$151 = 0;\n    } else {\n      $target$$151 = 2;\n    }\n\n    switch ($target$$151) {\n      case 0:\n        {\n          return false;\n        }\n\n      case 1:\n        {\n          if (f$$52(x$$44, y$$12)) {\n            return true;\n          } else {\n            $arg$$148 = f$$52;\n            $arg$$149 = xs$$82;\n            $arg$$150 = ys$$18;\n            continue exists2;\n          }\n        }\n\n      case 2:\n        {\n          throw new Error(\"Lists had different lengths\");\n        }\n    }\n\n    break;\n  }\n}\nexport function unzip(xs$$83) {\n  return foldBack(function (tupledArg$$2, tupledArg$$3) {\n    return [new List(tupledArg$$2[0], tupledArg$$3[0]), new List(tupledArg$$2[1], tupledArg$$3[1])];\n  }, xs$$83, [new List(), new List()]);\n}\nexport function unzip3(xs$$84) {\n  return foldBack(function (tupledArg$$4, tupledArg$$5) {\n    return [new List(tupledArg$$4[0], tupledArg$$5[0]), new List(tupledArg$$4[1], tupledArg$$5[1]), new List(tupledArg$$4[2], tupledArg$$5[2])];\n  }, xs$$84, [new List(), new List(), new List()]);\n}\nexport function zip(xs$$85, ys$$19) {\n  return map2(function (x$$47, y$$15) {\n    return [x$$47, y$$15];\n  }, xs$$85, ys$$19);\n}\nexport function zip3(xs$$86, ys$$20, zs$$5) {\n  return map3(function (x$$48, y$$16, z$$5) {\n    return [x$$48, y$$16, z$$5];\n  }, xs$$86, ys$$20, zs$$5);\n}\nexport function sort(xs$$87, comparer$$1) {\n  var xs$$88;\n  return ofArray((xs$$88 = ofList(xs$$87, Array), (xs$$88.sort(function comparer$$2(x$$49, y$$17) {\n    return comparer$$1.Compare(x$$49, y$$17);\n  }), xs$$88)));\n}\nexport function sortBy(projection, xs$$90, comparer$$3) {\n  var xs$$91;\n  return ofArray((xs$$91 = ofList(xs$$90, Array), (xs$$91.sort(function comparer$$4(x$$50, y$$18) {\n    return comparer$$3.Compare(projection(x$$50), projection(y$$18));\n  }), xs$$91)));\n}\nexport function sortDescending(xs$$93, comparer$$5) {\n  var xs$$94;\n  return ofArray((xs$$94 = ofList(xs$$93, Array), (xs$$94.sort(function comparer$$6(x$$51, y$$19) {\n    return comparer$$5.Compare(x$$51, y$$19) * -1;\n  }), xs$$94)));\n}\nexport function sortByDescending(projection$$1, xs$$96, comparer$$7) {\n  var xs$$97;\n  return ofArray((xs$$97 = ofList(xs$$96, Array), (xs$$97.sort(function comparer$$8(x$$52, y$$20) {\n    return comparer$$7.Compare(projection$$1(x$$52), projection$$1(y$$20)) * -1;\n  }), xs$$97)));\n}\nexport function sortWith(comparer$$9, xs$$99) {\n  var xs$$100;\n  return ofArray((xs$$100 = ofList(xs$$99, Array), (xs$$100.sort(comparer$$9), xs$$100)));\n}\nexport function sum(xs$$102, adder) {\n  return fold(function (acc$$21, x$$53) {\n    return adder.Add(acc$$21, x$$53);\n  }, adder.GetZero(), xs$$102);\n}\nexport function sumBy(f$$53, xs$$103, adder$$1) {\n  return fold(function (acc$$22, x$$54) {\n    return adder$$1.Add(acc$$22, f$$53(x$$54));\n  }, adder$$1.GetZero(), xs$$103);\n}\nexport function maxBy(projection$$2, xs$$104, comparer$$11) {\n  return reduce(function (x$$55, y$$21) {\n    return comparer$$11.Compare(projection$$2(y$$21), projection$$2(x$$55)) > 0 ? y$$21 : x$$55;\n  }, xs$$104);\n}\nexport function max(li, comparer$$12) {\n  return reduce(function (x$$56, y$$22) {\n    return comparer$$12.Compare(y$$22, x$$56) > 0 ? y$$22 : x$$56;\n  }, li);\n}\nexport function minBy(projection$$3, xs$$105, comparer$$13) {\n  return reduce(function (x$$57, y$$23) {\n    return comparer$$13.Compare(projection$$3(y$$23), projection$$3(x$$57)) > 0 ? x$$57 : y$$23;\n  }, xs$$105);\n}\nexport function min(xs$$106, comparer$$14) {\n  return reduce(function (x$$58, y$$24) {\n    return comparer$$14.Compare(y$$24, x$$58) > 0 ? x$$58 : y$$24;\n  }, xs$$106);\n}\nexport function average(xs$$107, averager) {\n  const total = fold(function (acc$$23, x$$59) {\n    return averager.Add(acc$$23, x$$59);\n  }, averager.GetZero(), xs$$107);\n  return averager.DivideByInt(total, length(xs$$107));\n}\nexport function averageBy(f$$54, xs$$108, averager$$1) {\n  const total$$1 = fold(function (acc$$24, x$$60) {\n    return averager$$1.Add(acc$$24, f$$54(x$$60));\n  }, averager$$1.GetZero(), xs$$108);\n  return averager$$1.DivideByInt(total$$1, length(xs$$108));\n}\nexport function permute(f$$55, xs$$109) {\n  return ofArray(permute$$1(f$$55, ofList(xs$$109, Array)));\n}\nexport function skip(i$$16, xs$$111) {\n  const skipInner = function skipInner(i$$17, xs$$112) {\n    skipInner: while (true) {\n      const matchValue$$10 = [i$$17, xs$$112];\n\n      if (matchValue$$10[0] === 0) {\n        return xs$$112;\n      } else if (matchValue$$10[1].tail != null) {\n        const xs$$113 = matchValue$$10[1].tail;\n        const $i$$17$$174 = i$$17;\n        i$$17 = $i$$17$$174 - 1;\n        xs$$112 = xs$$113;\n        continue skipInner;\n      } else {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      }\n\n      break;\n    }\n  };\n\n  const matchValue$$11 = [i$$16, xs$$111];\n\n  if (matchValue$$11[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$175, i$$20, xs$$115;\n\n    if (matchValue$$11[0] === 0) {\n      $target$$175 = 0;\n    } else if (matchValue$$11[0] === 1) {\n      if (matchValue$$11[1].tail != null) {\n        $target$$175 = 1;\n      } else {\n        $target$$175 = 2;\n        i$$20 = matchValue$$11[0];\n        xs$$115 = matchValue$$11[1];\n      }\n    } else {\n      $target$$175 = 2;\n      i$$20 = matchValue$$11[0];\n      xs$$115 = matchValue$$11[1];\n    }\n\n    switch ($target$$175) {\n      case 0:\n        {\n          return xs$$111;\n        }\n\n      case 1:\n        {\n          const xs$$114 = matchValue$$11[1].tail;\n          return xs$$114;\n        }\n\n      case 2:\n        {\n          return skipInner(i$$20, xs$$115);\n        }\n    }\n  }\n}\nexport function skipWhile($arg$$176, $arg$$177) {\n  var t$$3, h$$3;\n\n  skipWhile: while (true) {\n    const predicate = $arg$$176,\n          xs$$116 = $arg$$177;\n    var $target$$178, h$$4, t$$4;\n\n    if (xs$$116.tail != null) {\n      if (t$$3 = xs$$116.tail, (h$$3 = xs$$116.head, predicate(h$$3))) {\n        $target$$178 = 0;\n        h$$4 = xs$$116.head;\n        t$$4 = xs$$116.tail;\n      } else {\n        $target$$178 = 1;\n      }\n    } else {\n      $target$$178 = 1;\n    }\n\n    switch ($target$$178) {\n      case 0:\n        {\n          $arg$$176 = predicate;\n          $arg$$177 = t$$4;\n          continue skipWhile;\n        }\n\n      case 1:\n        {\n          return xs$$116;\n        }\n    }\n\n    break;\n  }\n}\nexport function takeSplitAux(error, i$$21, acc$$25, xs$$117) {\n  takeSplitAux: while (true) {\n    const matchValue$$12 = [i$$21, xs$$117];\n\n    if (matchValue$$12[0] === 0) {\n      return [reverse(acc$$25), xs$$117];\n    } else if (matchValue$$12[1].tail != null) {\n      const xs$$118 = matchValue$$12[1].tail;\n      const x$$61 = matchValue$$12[1].head;\n      const $acc$$25$$181 = acc$$25;\n      const $error$$179 = error;\n      const $i$$21$$180 = i$$21;\n      error = $error$$179;\n      i$$21 = $i$$21$$180 - 1;\n      acc$$25 = new List(x$$61, $acc$$25$$181);\n      xs$$117 = xs$$118;\n      continue takeSplitAux;\n    } else {\n      if (error) {\n        throw new Error(\"The input sequence has an insufficient number of elements.\");\n      } else {\n        return [reverse(acc$$25), xs$$117];\n      }\n    }\n\n    break;\n  }\n}\nexport function take(i$$22, xs$$119) {\n  const matchValue$$13 = [i$$22, xs$$119];\n\n  if (matchValue$$13[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$182, i$$25, xs$$120;\n\n    if (matchValue$$13[0] === 0) {\n      $target$$182 = 0;\n    } else if (matchValue$$13[0] === 1) {\n      if (matchValue$$13[1].tail != null) {\n        $target$$182 = 1;\n      } else {\n        $target$$182 = 2;\n        i$$25 = matchValue$$13[0];\n        xs$$120 = matchValue$$13[1];\n      }\n    } else {\n      $target$$182 = 2;\n      i$$25 = matchValue$$13[0];\n      xs$$120 = matchValue$$13[1];\n    }\n\n    switch ($target$$182) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          const x$$62 = matchValue$$13[1].head;\n          return new List(x$$62, new List());\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$25, new List(), xs$$120)[0];\n        }\n    }\n  }\n}\nexport function takeWhile(predicate$$1, xs$$121) {\n  if (xs$$121.tail != null) {\n    if (xs$$121.tail.tail == null) {\n      if (predicate$$1(xs$$121.head)) {\n        return xs$$121;\n      } else {\n        return xs$$121.tail;\n      }\n    } else {\n      if (!predicate$$1(xs$$121.head)) {\n        return new List();\n      } else {\n        return new List(xs$$121.head, takeWhile(predicate$$1, xs$$121.tail));\n      }\n    }\n  } else {\n    return xs$$121;\n  }\n}\nexport function truncate(i$$26, xs$$123) {\n  const matchValue$$14 = [i$$26, xs$$123];\n\n  if (matchValue$$14[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$185, i$$29, xs$$124;\n\n    if (matchValue$$14[0] === 0) {\n      $target$$185 = 0;\n    } else if (matchValue$$14[0] === 1) {\n      if (matchValue$$14[1].tail != null) {\n        $target$$185 = 1;\n      } else {\n        $target$$185 = 2;\n        i$$29 = matchValue$$14[0];\n        xs$$124 = matchValue$$14[1];\n      }\n    } else {\n      $target$$185 = 2;\n      i$$29 = matchValue$$14[0];\n      xs$$124 = matchValue$$14[1];\n    }\n\n    switch ($target$$185) {\n      case 0:\n        {\n          return new List();\n        }\n\n      case 1:\n        {\n          const x$$65 = matchValue$$14[1].head;\n          return new List(x$$65, new List());\n        }\n\n      case 2:\n        {\n          return takeSplitAux(false, i$$29, new List(), xs$$124)[0];\n        }\n    }\n  }\n}\nexport function splitAt(i$$30, xs$$125) {\n  const matchValue$$15 = [i$$30, xs$$125];\n\n  if (matchValue$$15[0] < 0) {\n    throw new Error(\"The input must be non-negative.\");\n  } else {\n    var $target$$186, i$$33, xs$$127;\n\n    if (matchValue$$15[0] === 0) {\n      $target$$186 = 0;\n    } else if (matchValue$$15[0] === 1) {\n      if (matchValue$$15[1].tail != null) {\n        $target$$186 = 1;\n      } else {\n        $target$$186 = 2;\n        i$$33 = matchValue$$15[0];\n        xs$$127 = matchValue$$15[1];\n      }\n    } else {\n      $target$$186 = 2;\n      i$$33 = matchValue$$15[0];\n      xs$$127 = matchValue$$15[1];\n    }\n\n    switch ($target$$186) {\n      case 0:\n        {\n          return [new List(), xs$$125];\n        }\n\n      case 1:\n        {\n          const xs$$126 = matchValue$$15[1].tail;\n          const x$$66 = matchValue$$15[1].head;\n          return [new List(x$$66, new List()), xs$$126];\n        }\n\n      case 2:\n        {\n          return takeSplitAux(true, i$$33, new List(), xs$$127);\n        }\n    }\n  }\n}\nexport function slice(lower, upper, xs$$128) {\n  const lower$$1 = defaultArg(lower, -1) | 0;\n  const upper$$1 = defaultArg(upper, -1) | 0;\n  return reverse(foldIndexed(function f$$56(i$$34, acc$$26, x$$67) {\n    if ((lower$$1 === -1 ? true : lower$$1 <= i$$34) ? upper$$1 === -1 ? true : i$$34 <= upper$$1 : false) {\n      return new List(x$$67, acc$$26);\n    } else {\n      return acc$$26;\n    }\n  }, new List(), xs$$128));\n}\nexport function distinctBy(projection$$4, xs$$131, eq$$2) {\n  const hashSet = createMutable([], comparerFromEqualityComparer(eq$$2));\n  return filter(function f$$57($arg$$1) {\n    return addToSet(projection$$4($arg$$1), hashSet);\n  }, xs$$131);\n}\nexport function distinct(xs$$133, eq$$3) {\n  return distinctBy(function (x$$68) {\n    return x$$68;\n  }, xs$$133, eq$$3);\n}\nexport function exactlyOne(xs$$134) {\n  if (xs$$134.tail != null) {\n    if (xs$$134.tail.tail != null) {\n      throw new Error(\"Input list too long\\\\nParameter name: list\");\n    } else {\n      return xs$$134.head;\n    }\n  } else {\n    throw new Error(\"The input sequence was empty\\\\nParameter name: list\");\n  }\n}\nexport function groupBy(projection$$5, xs$$136, eq$$4) {\n  const dict = createMutable$$1([], comparerFromEqualityComparer(eq$$4));\n  const keys = [];\n  iterate$$1(function (v$$2) {\n    const key = projection$$5(v$$2);\n    const matchValue$$16 = tryGetValue(dict, key, null);\n\n    if (matchValue$$16[0]) {\n      dict.set(key, new List(v$$2, matchValue$$16[1]));\n    } else {\n      addToDict(dict, key, new List(v$$2, new List()));\n      keys.push(key);\n    }\n  }, xs$$136);\n  return ofSeq(map$$1(function mapping(key$$1) {\n    return [key$$1, reverse(getItemFromDict(dict, key$$1))];\n  }, keys));\n}\nexport function countBy(projection$$6, xs$$138, eq$$5) {\n  const dict$$1 = createMutable$$1([], comparerFromEqualityComparer(eq$$5));\n  iterate(function (v$$3) {\n    const key$$2 = projection$$6(v$$3);\n    const matchValue$$17 = tryGetValue(dict$$1, key$$2, null);\n\n    if (matchValue$$17[0]) {\n      matchValue$$17[1].contents = matchValue$$17[1].contents + 1;\n    } else {\n      dict$$1.set(key$$2, new FSharpRef(1));\n    }\n  }, xs$$138);\n  let result$$1 = new List();\n  iterate$$1(function (group) {\n    result$$1 = new List([group[0], group[1].contents], result$$1);\n  }, dict$$1);\n  return result$$1;\n}\nexport function where(predicate$$2, xs$$139) {\n  return filter(predicate$$2, xs$$139);\n}\nexport function pairwise(xs$$140) {\n  const inner = function inner(xs$$141, acc$$27, x1$$1) {\n    inner: while (true) {\n      if (xs$$141.tail != null) {\n        const xs$$142 = xs$$141.tail;\n        const x2$$1 = xs$$141.head;\n        acc$$27.push([x1$$1, x2$$1]);\n        const $acc$$27$$198 = acc$$27;\n        xs$$141 = xs$$142;\n        acc$$27 = $acc$$27$$198;\n        x1$$1 = x2$$1;\n        continue inner;\n      } else {\n        return ofArray(acc$$27);\n      }\n\n      break;\n    }\n  };\n\n  var $target$$199, x1$$2, x2$$2, xs$$143;\n\n  if (xs$$140.tail != null) {\n    if (xs$$140.tail.tail != null) {\n      $target$$199 = 1;\n      x1$$2 = xs$$140.head;\n      x2$$2 = xs$$140.tail.head;\n      xs$$143 = xs$$140.tail.tail;\n    } else {\n      $target$$199 = 0;\n    }\n  } else {\n    $target$$199 = 0;\n  }\n\n  switch ($target$$199) {\n    case 0:\n      {\n        return new List();\n      }\n\n    case 1:\n      {\n        const acc$$28 = [];\n        acc$$28.push([x1$$2, x2$$2]);\n        return inner(xs$$143, acc$$28, x2$$2);\n      }\n  }\n}\nexport function windowed(windowSize, source$$1) {\n  if (windowSize <= 0) {\n    throw new Error(\"windowSize must be positive\");\n  }\n\n  let res$$2 = new List();\n\n  for (let i$$35 = length(source$$1); i$$35 >= windowSize; i$$35--) {\n    res$$2 = new List(slice(i$$35 - windowSize, i$$35 - 1, source$$1), res$$2);\n  }\n\n  return res$$2;\n}","namespace Fulma\n\nopen Fable.React\nopen Fable.React.Props\n\nmodule Reflection =\n\n    open Microsoft.FSharp.Reflection\n    open System\n\n    #if FABLE_COMPILER\n    let inline getCaseName (case : 'T) =\n        Fable.Core.Reflection.getCaseName case\n    #else\n    let getCaseName (case : 'T) =\n        // Get UnionCaseInfo value from the F# reflection tools\n        let (caseInfo, _args) = FSharpValue.GetUnionFields(case, typeof<'T>)\n        // Pull all attributes\n        let attributes = caseInfo.GetCustomAttributes()\n\n        let haveError =\n            attributes\n            |> Seq.ofArray\n            // Filter for the FatalError values\n            |> Seq.filter (fun x -> x :? CompiledNameAttribute)\n            // Cast each value\n            |> Seq.map (fun x -> x :?> CompiledNameAttribute)\n            // Seq.take breaks if there aren't enough, so use Seq.truncate instead\n            |> Seq.truncate 1\n            |> List.ofSeq\n\n        if haveError.IsEmpty then String.Empty\n        else haveError.Head.CompiledName\n    #endif\n\n    #if FABLE_COMPILER\n    let inline getCaseTag (case : 'T) =\n        Fable.Core.Reflection.getCaseTag case\n    #else\n    let getCaseTag (case : 'T) =\n        let (caseInfo, _args) = FSharpValue.GetUnionFields(case, typeof<'T>)\n        caseInfo.Tag\n    #endif\n\n[<RequireQualifiedAccess>]\ntype Screen =\n    | All\n    | [<CompiledName(\"desktop\")>] Desktop\n    | [<CompiledName(\"tablet\")>] Tablet\n    | [<CompiledName(\"mobile\")>] Mobile\n    | [<CompiledName(\"widescreen\")>] WideScreen\n    | [<CompiledName(\"touch\")>] Touch\n    | [<CompiledName(\"fullhd\")>] FullHD\n\n    static member ToString (screen : Screen) =\n        match screen with\n        | All -> \"\"\n        | Desktop\n        | Tablet\n        | Mobile\n        | WideScreen\n        | Touch\n        | FullHD -> \"-\" + Reflection.getCaseName screen\n\n[<AutoOpen>]\nmodule Color =\n\n    type IColor =\n        | [<CompiledName(\"is-black\")>] IsBlack\n        | [<CompiledName(\"is-dark\")>] IsDark\n        | [<CompiledName(\"is-light\")>] IsLight\n        | [<CompiledName(\"is-white\")>] IsWhite\n        | [<CompiledName(\"is-primary\")>] IsPrimary\n        | [<CompiledName(\"is-info\")>] IsInfo\n        | [<CompiledName(\"is-success\")>] IsSuccess\n        | [<CompiledName(\"is-warning\")>] IsWarning\n        | [<CompiledName(\"is-danger\")>] IsDanger\n        | [<CompiledName(\"is-link\")>] IsLink\n        | [<CompiledName(\"is-black-bis\")>] IsBlackBis\n        | [<CompiledName(\"is-black-ter\")>] IsBlackTer\n        | [<CompiledName(\"is-grey-darker\")>] IsGreyDarker\n        | [<CompiledName(\"is-grey-dark\")>] IsGreyDark\n        | [<CompiledName(\"is-grey\")>] IsGrey\n        | [<CompiledName(\"is-grey-light\")>] IsGreyLight\n        | [<CompiledName(\"is-grey-lighter\")>] IsGreyLighter\n        | [<CompiledName(\"is-white-ter\")>] IsWhiteTer\n        | [<CompiledName(\"is-white-bis\")>] IsWhiteBis\n        /// Allow you to specify a custom color. The color will be prefixed by \"is-\"\n        | IsCustomColor of string\n        /// Allow you to specify a NoColor case.\n        | NoColor\n\n    let ofColor level =\n        match level with\n        | NoColor -> \"\"\n        | IsCustomColor color -> \"is-\" + color\n        | IsBlack\n        | IsDark\n        | IsLight\n        | IsWhite\n        | IsPrimary\n        | IsInfo\n        | IsSuccess\n        | IsWarning\n        | IsDanger\n        | IsLink\n        | IsBlackBis\n        | IsBlackTer\n        | IsGreyDarker\n        | IsGreyDark\n        | IsGrey\n        | IsGreyLight\n        | IsGreyLighter\n        | IsWhiteTer\n        | IsWhiteBis -> Reflection.getCaseName level\n\n[<AutoOpen>]\nmodule Size =\n\n    type ISize =\n        | [<CompiledName(\"is-small\")>] IsSmall\n        | [<CompiledName(\"is-medium\")>] IsMedium\n        | [<CompiledName(\"is-large\")>] IsLarge\n\n    let inline ofSize size =\n        Reflection.getCaseName size\n\n[<RequireQualifiedAccess>]\nmodule TextSize =\n    type Option =\n        | Is1\n        | Is2\n        | Is3\n        | Is4\n        | Is5\n        | Is6\n        | Is7\n\n        static member ToString (x: Option) =\n            Reflection.getCaseTag x + 1 |> string\n\n    let inline generic screen size =\n        \"is-size-\" + Option.ToString size + Screen.ToString screen\n\n    let inline only screen size =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-size-\" + Option.ToString size + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-size-xxx-only`.\" + string x)\n            \"\"\n\n[<RequireQualifiedAccess>]\nmodule TextAlignment =\n\n    type Option =\n        /// Add `has-text-centered`\n        | [<CompiledName(\"has-text-centered\")>] Centered\n        /// Add `has-text-justified`\n        | [<CompiledName(\"has-text-justified\")>] Justified\n        /// Add `has-text-left`\n        | [<CompiledName(\"has-text-left\")>] Left\n        /// Add `has-text-right`\n        | [<CompiledName(\"has-text-right\")>] Right\n\n        static member inline ToString opt =\n            Reflection.getCaseName opt\n\n    let inline generic screen alignment =\n        Option.ToString alignment + Screen.ToString screen\n\n    let inline only screen alignment =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            Option.ToString alignment + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-size-xxx-only`.\" + string x)\n            \"\"\n\n[<RequireQualifiedAccess>]\nmodule TextWeight =\n\n    type Option =\n        /// Add `has-text-weight-light`\n        | [<CompiledName(\"has-text-weight-light\")>] Light\n        /// Add `has-text-weight-normal`\n        | [<CompiledName(\"has-text-weight-normal\")>] Normal\n        /// Add `has-text-weight-semi-bold`\n        | [<CompiledName(\"has-text-weight-semi-bold\")>] SemiBold\n        /// Add `has-text-weight-bold`\n        | [<CompiledName(\"has-text-weight-bold\")>] Bold\n\n    let inline internal ofOption opt =\n        Reflection.getCaseName opt\n\n[<RequireQualifiedAccess>]\nmodule TextTransform =\n\n    type Option =\n        /// Add `is-capitalized`\n        | [<CompiledName(\"is-capitalized\")>] Capitalized\n        /// Add `is-lowercase`\n        | [<CompiledName(\"is-lowercase\")>] LowerCase\n        /// Add `is-uppercase`\n        | [<CompiledName(\"is-uppercase\")>] UpperCase\n        /// Add `is-italic`\n        | [<CompiledName(\"is-italic\")>] Italic\n\n        static member inline toClass opt =\n            Reflection.getCaseName opt\n\n[<RequireQualifiedAccess>]\nmodule Display =\n\n    type Option =\n        | [<CompiledName(\"block\")>] Block\n        | [<CompiledName(\"flex\")>] Flex\n        | [<CompiledName(\"inline\")>] Inline\n        | [<CompiledName(\"inline-block\")>] InlineBlock\n        | [<CompiledName(\"inline-flex\")>] InlineFlex\n\n        static member inline toClass opt =\n            Reflection.getCaseName opt\n\n    let internal toDisplayClass screen display =\n        let display = Option.toClass display\n        let screen = Screen.ToString screen\n\n        \"is-\" + display + screen\n\n    let internal toDisplayOnlyClass screen display =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            let display = Option.toClass display\n            let screen = Screen.ToString screen\n            \"is-\" + display + screen + \"-only\"\n\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support display only.\" + string x)\n            \"\"\n\n[<RequireQualifiedAccess>]\nmodule Modifier =\n    let internal ofBackground level =\n        match level with\n        | NoColor -> \"\"\n        | IsCustomColor color -> \"has-background-\" + color\n        | IsBlack\n        | IsDark\n        | IsLight\n        | IsWhite\n        | IsPrimary\n        | IsInfo\n        | IsSuccess\n        | IsWarning\n        | IsDanger\n        | IsLink\n        | IsBlackBis\n        | IsBlackTer\n        | IsGreyDarker\n        | IsGreyDark\n        | IsGrey\n        | IsGreyLight\n        | IsGreyLighter\n        | IsWhiteTer\n        | IsWhiteBis -> \"has-background-\" + (Reflection.getCaseName level).[3..]\n\n    let internal ofText level =\n        match level with\n        | NoColor -> \"\"\n        | IsCustomColor color -> \"has-text-\" + color\n        | IsBlack\n        | IsDark\n        | IsLight\n        | IsWhite\n        | IsPrimary\n        | IsInfo\n        | IsSuccess\n        | IsWarning\n        | IsDanger\n        | IsLink\n        | IsBlackBis\n        | IsBlackTer\n        | IsGreyDarker\n        | IsGreyDark\n        | IsGrey\n        | IsGreyLight\n        | IsGreyLighter\n        | IsWhiteTer\n        | IsWhiteBis -> \"has-text-\" + (Reflection.getCaseName level).[3..]\n\n    let internal ofInvisible screen =\n        \"is-invisible\" + Screen.ToString screen\n\n    let internal ofHidden screen =\n        \"is-hidden\" + Screen.ToString screen\n\n    let internal ofInvisibleOnly screen =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-invisible\" + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-invisible-xxx-only`.\" + string x)\n            \"\"\n\n    let internal ofHiddenOnly screen =\n        match screen with\n        | Screen.Tablet\n        | Screen.Desktop\n        | Screen.WideScreen ->\n            \"is-hidden\" + Screen.ToString screen + \"-only\"\n        | x ->\n            Fable.Core.JS.console.warn(\"Screen `%s` does not support `is-hidden-xxx-only`.\" + string x)\n            \"\"\n\n    type IModifier =\n        | BackgroundColor of IColor\n        | TextColor of IColor\n        | TextWeight of TextWeight.Option\n        | TextSize of Screen * TextSize.Option\n        | TextSizeOnly of Screen * TextSize.Option\n        | TextAlignment of Screen * TextAlignment.Option\n        | TextAlignmentOnly of Screen * TextAlignment.Option\n        | TextTransform of TextTransform.Option\n        | Display of Screen * Display.Option\n        | DisplayOnly of Screen * Display.Option\n        | [<CompiledName(\"is-clearfix\")>] IsClearfix\n        | [<CompiledName(\"is-pulled-left\")>] IsPulledLeft\n        | [<CompiledName(\"is-pulled-right\")>] IsPulledRight\n        | [<CompiledName(\"is-marginless\")>] IsMarginless\n        | [<CompiledName(\"is-paddingless\")>] IsPaddingless\n        | [<CompiledName(\"is-overlay\")>] IsOverlay\n        | [<CompiledName(\"is-clipped\")>] IsClipped\n        | [<CompiledName(\"is-radiusless\")>] IsRadiusless\n        | [<CompiledName(\"is-shadowless\")>] IsShadowless\n        | [<CompiledName(\"is-unselectable\")>] IsUnselectable\n        | IsInvisible of Screen * bool\n        | IsHidden of Screen * bool\n        | IsInvisibleOnly of Screen * bool\n        | IsHiddenOnly of Screen * bool\n        | IsSrOnly\n        | IsScreenReaderOnly\n\n    let parseModifiers options =\n        let parseOptions result option =\n            match option with\n            | BackgroundColor color             -> (ofBackground color)::result\n            | TextColor color                   -> (ofText color)::result\n            | TextWeight textWeight             -> (TextWeight.ofOption textWeight)::result\n            | TextSize (screen, size)           -> (TextSize.generic screen size)::result\n            | TextSizeOnly (screen, size)       -> (TextSize.only screen size)::result\n            | TextAlignment (screen, size)      -> (TextAlignment.generic screen size)::result\n            | TextAlignmentOnly (screen, size)  -> (TextAlignment.only screen size)::result\n            | TextTransform transform           -> (TextTransform.Option.toClass transform)::result\n            | Display (screen, display)         -> (Display.toDisplayClass screen display)::result\n            | DisplayOnly (screen, display)     -> (Display.toDisplayOnlyClass screen display)::result\n            | IsInvisible (screen, b)           -> if b then (ofInvisible screen)::result else result\n            | IsInvisibleOnly (screen, b)       -> if b then (ofInvisibleOnly screen)::result else result\n            | IsHidden (screen, b)              -> if b then (ofHidden screen)::result else result\n            | IsHiddenOnly (screen, b)          -> if b then (ofHiddenOnly screen)::result else result\n            | IsSrOnly\n            | IsScreenReaderOnly -> \"is-sr-only\"::result\n            | IsClearfix\n            | IsPulledLeft\n            | IsPulledRight\n            | IsMarginless\n            | IsPaddingless\n            | IsOverlay\n            | IsClipped\n            | IsRadiusless\n            | IsShadowless\n            | IsUnselectable -> (Reflection.getCaseName option)::result\n\n        options |> List.fold parseOptions []\n\n[<AutoOpen>]\nmodule Common =\n    type GenericOption =\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    type GenericOptions =\n        { Props : IHTMLProp list\n          Classes : string list }\n\n        static member Empty =\n            { Props = []; Classes = [] }\n\n        static member Parse(options, parser, ?baseClass, ?baseProps) =\n            let result = options |> List.fold parser GenericOptions.Empty\n\n            let result =\n                match baseClass with\n                | Some baseClass -> result.AddClass(baseClass)\n                | None -> result\n\n            match baseProps with\n            | Some baseProps -> result.AddProps(baseProps)\n            | None -> result\n\n        member this.AddProp(prop : IHTMLProp) =\n            { this with Props = prop::this.Props }\n\n        member this.AddProps(props : IHTMLProp list) =\n            { this with Props = props@this.Props }\n\n        member this.AddClass(cl: string) =\n            { this with Classes = cl::this.Classes }\n\n        member this.RemoveClass(cl: string) =\n            let classes =\n                this.Classes\n                |> List.filter (fun cls ->\n                    cls <> cl\n                )\n            { this with Classes = classes }\n\n        member this.AddCaseName(case: obj) =\n            Reflection.getCaseName case |> this.AddClass\n\n        member this.AddModifiers(modifiers) =\n            { this with Classes = (modifiers |> Modifier.parseModifiers) @ this.Classes }\n\n        /// Conver to standard element\n        member this.ToReactElement(el : IHTMLProp list -> ReactElement list -> ReactElement, ?children): ReactElement =\n            let children = defaultArg children []\n            // TODO: Remove empty classes?\n            let classes = String.concat \" \" this.Classes |> ClassName :> IHTMLProp\n            el (classes::this.Props) children\n\n        /// Convert to self closing element\n        member this.ToReactElement(el : IHTMLProp list -> ReactElement): ReactElement =\n            // TODO: Remove empty classes?\n            let classes = String.concat \" \" this.Classes |> ClassName :> IHTMLProp\n            el (classes::this.Props)\n\n    let parseOptions (result : GenericOptions) option =\n        match option with\n        | Props props -> result.AddProps props\n        | CustomClass customClass -> result.AddClass customClass\n        | Modifiers modifiers -> result.AddModifiers modifiers\n\n    module Helpers =\n\n        [<System.Obsolete(\"Use GenericOptions.Parse. This build an abstraction layer usable by all the components and helps reduce the bundle size\")>]\n        let classes std (options : string option list) (booleans: (string * bool) list) =\n            let std = (std, options) ||> List.fold (fun complete option ->\n                match option with\n                | Some name -> complete + \" \" + name\n                | None -> complete )\n            (std, booleans) ||> List.fold (fun complete (name, flag) ->\n                if flag then complete + \" \" + name else complete)\n            |> ClassName :> IHTMLProp\n\n[<RequireQualifiedAccess>]\nmodule Text =\n    open Fable.React\n\n    let p (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions).ToReactElement(p, children)\n\n    let div (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions).ToReactElement(div, children)\n\n    let span (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions).ToReactElement(span, children)\n","namespace Elmish.React\n\n[<AutoOpen>]\nmodule Helpers =\n    open Fable.React.Props\n    open Fable.Core.JsInterop\n\n    /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n    /// Can be used instead of `DefaultValue` and `Value` props to override input box value.\n    let inline valueOrDefault value =\n        Ref <| (fun e -> if e |> isNull |> not && !!e?value <> !!value then e?value <- !!value)\n\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n\n        open Fable.React\n        open Browser\n        open Elmish\n\n        let withReactBatchedUsing lazyView2With placeholderId (program:Program<_,_,_,_>) =\n            let mutable lastRequest = None\n            let setState model dispatch =\n                match lastRequest with\n                | Some r -> window.cancelAnimationFrame r\n                | _ -> ()\n\n                lastRequest <- Some (window.requestAnimationFrame (fun _ ->\n                    ReactDom.render(\n                        lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                        document.getElementById placeholderId\n                    )))\n\n            program\n            |> Program.withSetState setState\n\n        let withReactSynchronousUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.render(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n        let withReactHydrateUsing lazyView2With placeholderId (program:Elmish.Program<_,_,_,_>) =\n            let setState model dispatch =\n                ReactDom.hydrate(\n                    lazyView2With (fun x y -> obj.ReferenceEquals(x,y)) (Program.view program) model dispatch,\n                    document.getElementById placeholderId\n                )\n\n            program\n            |> Program.withSetState setState\n\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// Uses `requestAnimationFrame` to batch updates to prevent drops in frame rate.\n    /// NOTE: This may have unexpected effects in React controlled inputs, see https://github.com/elmish/react/issues/12\n    let withReactBatched placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId.\n    /// New renders are triggered immediately after an update.\n    let withReactSynchronous placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactBatched\")>]\n    let withReact placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactBatchedUsing lazyView2With placeholderId program\n\n    [<System.Obsolete(\"Use withReactSynchronous\")>]\n    let withReactUnoptimized placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactSynchronousUsing lazyView2With placeholderId program\n\n    /// Renders React root component inside html element identified by placeholderId using `React.hydrate`.\n    let withReactHydrate placeholderId (program:Elmish.Program<_,_,_,_>) =\n        Internal.withReactHydrateUsing lazyView2With placeholderId program\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Button =\n\n    type Option =\n        // Colors\n        | Color of IColor\n        | Size of ISize\n        /// Add `is-fullwidth` class\n        | [<CompiledName(\"is-fullwidth\")>] IsFullWidth\n        /// Add `is-link` class\n        | [<CompiledName(\"is-link\")>] IsLink\n        /// Add `is-outlined` class\n        | [<CompiledName(\"is-outlined\")>] IsOutlined\n        /// Add `is-inverted` class\n        | [<CompiledName(\"is-inverted\")>] IsInverted\n        /// Add `is-text` class\n        | [<CompiledName(\"is-text\")>] IsText\n        /// Add `is-rounded` class\n        | [<CompiledName(\"is-rounded\")>] IsRounded\n        /// Add `is-expanded` class\n        | [<CompiledName(\"is-expanded\")>] IsExpanded\n        /// Add `is-hovered` class if true\n        | [<CompiledName(\"is-hovered\")>] IsHovered of bool\n        /// Add `is-focused` class if true\n        | [<CompiledName(\"is-focused\")>] IsFocused of bool\n        /// Add `is-active` class if true\n        | [<CompiledName(\"is-active\")>] IsActive of bool\n        /// Add `is-loading` class if true\n        | [<CompiledName(\"is-loading\")>] IsLoading of bool\n        /// Add `is-static` class if true\n        | [<CompiledName(\"is-static\")>] IsStatic of bool\n        /// Set `disabled` HTMLAttr\n        | Disabled of bool\n        | Props of IHTMLProp list\n        | OnClick of (MouseEvent -> unit)\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    let internal btnView element (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Color color -> ofColor color |> result.AddClass\n            | Size size -> ofSize size |> result.AddClass\n            // Styles\n            | IsLink\n            | IsFullWidth\n            | IsOutlined\n            | IsInverted\n            | IsText\n            | IsRounded\n            | IsExpanded -> result.AddCaseName option\n            // States\n            | IsHovered state\n            | IsFocused state\n            | IsActive state\n            | IsLoading state\n            | IsStatic state -> if state then result.AddCaseName option else result\n            | Disabled isDisabled -> Fable.React.Props.Disabled isDisabled |> result.AddProp\n            | OnClick cb -> DOMAttr.OnClick cb |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"button\").ToReactElement(element, children)\n\n    /// Generate <button class=\"button\"></button>\n    let button options children = btnView button options children\n    /// Generate <span class=\"button\"></span>\n    let span options children = btnView span options children\n    /// Generate <a class=\"button\"></a>\n    let a options children = btnView a options children\n\n    module Input =\n        let internal btnInput typ options =\n            let hasProps =\n                options\n                |> List.exists (fun opts ->\n                    match opts with\n                    | Props _ -> true\n                    | _ -> false\n                )\n\n            if hasProps then\n                let newOptions =\n                    options\n                    |> List.map (fun opts ->\n                        match opts with\n                        | Props props -> Props ((Type typ :> IHTMLProp) ::props)\n                        | forward -> forward\n                    )\n                btnView (fun options _ -> input options) newOptions [ ]\n\n            else\n                btnView (fun options _ -> input options) ((Props [ Type typ ])::options) [ ]\n\n        /// Generate <input type=\"reset\" class=\"button\" />\n        let reset options = btnInput \"reset\" options\n        /// Generate <input type=\"submit\" class=\"button\" />\n        let submit options = btnInput \"submit\" options\n\n    module List =\n\n        type Option =\n            | [<CompiledName(\"has-addons\")>] HasAddons\n            | [<CompiledName(\"is-centered\")>] IsCentered\n            | [<CompiledName(\"is-right\")>] IsRight\n            // | Size of ISize\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"buttons\"></div>\n    let list (options : List.Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | List.HasAddons\n            | List.IsCentered\n            | List.IsRight -> result.AddCaseName option\n            | List.Props props -> result.AddProps props\n            | List.CustomClass customClass -> result.AddClass customClass\n            | List.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"buttons\").ToReactElement(div, children)\n","module Question.Dispatcher.View\n\nopen Types\n\nlet root user model dispatch =\n    match model with\n    | { CurrentPage = Router.QuestionPage.Index\n        IndexModel = Some extractedModel } -> Question.Index.View.root extractedModel (IndexMsg >> dispatch)\n\n    | { CurrentPage = Router.QuestionPage.Show _\n        ShowModel = Some extractedModel } -> Question.Show.View.root user extractedModel (ShowMsg >> dispatch)\n\n    | { CurrentPage = Router.QuestionPage.Create\n        CreateModel = Some extractedModel } -> Question.Create.View.root user extractedModel (CreateMsg >> dispatch)\n\n    | _ ->\n        Render.pageNotFound\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Image =\n\n    type Option =\n        // Size\n\n        /// Add `is-16x16` class\n        | [<CompiledName(\"is-16x16\")>] Is16x16\n        /// Add `is-24x24` class\n        | [<CompiledName(\"is-24x24\")>] Is24x24\n        /// Add `is-32x32` class\n        | [<CompiledName(\"is-32x32\")>] Is32x32\n        /// Add `is-48x48` class\n        | [<CompiledName(\"is-48x48\")>] Is48x48\n        /// Add `is-64x64` class\n        | [<CompiledName(\"is-64x64\")>] Is64x64\n        /// Add `is-96x96` class\n        | [<CompiledName(\"is-96x96\")>] Is96x96\n        /// Add `is-128x128` class\n        | [<CompiledName(\"is-128x128\")>] Is128x128\n        /// Add `is-square` class\n        | [<CompiledName(\"is-square\")>] IsSquare\n        /// Add `is-1by1` class\n        | [<CompiledName(\"is-1by1\")>] Is1by1\n        /// Add `is-5by4` class\n        | [<CompiledName(\"is-5by4\")>] Is5by4\n        /// Add `is-4by3` class\n        | [<CompiledName(\"is-4by3\")>] Is4by3\n        /// Add `is-3by2` class\n        | [<CompiledName(\"is-3by2\")>] Is3by2\n        /// Add `is-5by3` class\n        | [<CompiledName(\"is-5by3\")>] Is5by3\n        /// Add `is-16by9` class\n        | [<CompiledName(\"is-16by9\")>] Is16by9\n        /// Add `is-2by1` class\n        | [<CompiledName(\"is-2by1\")>] Is2by1\n        /// Add `is-3by1` class\n        | [<CompiledName(\"is-3by1\")>] Is3by1\n        /// Add `is-4by5` class\n        | [<CompiledName(\"is-4by5\")>] Is4by5\n        /// Add `is-3by4` class\n        | [<CompiledName(\"is-3by4\")>] Is3by4\n        /// Add `is-2by3` class\n        | [<CompiledName(\"is-2by3\")>] Is2by3\n        /// Add `is-3by5` class\n        | [<CompiledName(\"is-3by5\")>] Is3by5\n        /// Add `is-9by16` class\n        | [<CompiledName(\"is-9by16\")>] Is9by16\n        /// Add `is-1by2` class\n        | [<CompiledName(\"is-1by2\")>] Is1by2\n        /// Add `is-1by3` class\n        | [<CompiledName(\"is-1by3\")>] Is1by3\n        // Extra\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <figure class=\"image\"></figure>\n    let image options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            // Size\n            | Is16x16\n            | Is24x24\n            | Is32x32\n            | Is48x48\n            | Is64x64\n            | Is96x96\n            | Is128x128\n            // Ratio\n            | IsSquare\n            | Is1by1\n            | Is5by4\n            | Is4by3\n            | Is3by2\n            | Is5by3\n            | Is16by9\n            | Is2by1\n            | Is3by1\n            | Is4by5\n            | Is3by4\n            | Is2by3\n            | Is3by5\n            | Is9by16\n            | Is1by2\n            | Is1by3 -> result.AddCaseName option\n            // Extra\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"image\").ToReactElement(figure, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Container =\n\n    type Option =\n        /// Add `is-fluid` class\n        | [<CompiledName(\"is-fluid\")>] IsFluid\n        /// Add `is-widescreen` class\n        | [<CompiledName(\"is-widescreen\")>] IsWideScreen\n        /// Add `is-fullhd` class\n        | [<CompiledName(\"is-fullhd\")>] IsFullHD\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <div class=\"container\"></div>\n    let container (options: Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsFluid\n            | IsWideScreen\n            | IsFullHD -> result.AddCaseName option\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"container\").ToReactElement(div, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Navbar =\n\n    type Option =\n        | Color of IColor\n        /// Add `has-shadow` class\n        | [<CompiledName(\"has-shadow\")>] HasShadow\n        /// Add `is-transparent` class\n        | [<CompiledName(\"is-transparent\")>] IsTransparent\n        /// Add `is-fixed-top` class\n        /// You also need to add `has-navbar-fixed-top` to your html tag\n        | [<CompiledName(\"is-fixed-top\")>] IsFixedTop\n        /// Add `is-fixed-bottom` class\n        /// You also need to add `has-navbar-fixed-bottom` to your html tag\n        | [<CompiledName(\"is-fixed-bottom\")>] IsFixedBottom\n        /// Add `is-spaced` class\n        /// Increases horizontal and vertical padding of the navbar\n        | [<CompiledName(\"is-spaced\")>] IsSpaced\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    module Menu =\n\n        type Option =\n            /// Add `is-active` class if true\n            | [<CompiledName(\"is-active\")>] IsActive of bool\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    module Item =\n\n        type Option =\n            /// Add `is-tab` class\n            | [<CompiledName(\"is-tab\")>] IsTab\n            /// Add `is-active` class if true\n            | [<CompiledName(\"is-active\")>] IsActive of bool\n            /// Add `is-hoverable` class\n            | [<CompiledName(\"is-hoverable\")>] IsHoverable\n            /// Add `has-dropdown` class\n            | [<CompiledName(\"has-dropdown\")>] HasDropdown\n            /// Add `is-expanded` class\n            | [<CompiledName(\"is-expanded\")>] IsExpanded\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n        let internal item element options children =\n            let parseOptions (result : GenericOptions) option =\n                match option with\n                | IsActive state -> if state then result.AddCaseName option else result\n                | IsExpanded\n                | IsTab\n                | IsHoverable\n                | HasDropdown -> result.AddCaseName option\n                | Props props -> result.AddProps props\n                | CustomClass customClass -> result.AddClass customClass\n                | Modifiers modifiers -> result.AddModifiers modifiers\n\n            GenericOptions.Parse(options, parseOptions, \"navbar-item\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-item\"></div>\n        let div x y = item div x y\n        /// Generate <a class=\"navbar-item\"></a>\n        let a x y = item a x y\n\n    module Link =\n\n        type Option =\n            /// Add `is-active` class if true\n            | [<CompiledName(\"is-active\")>] IsActive of bool\n            /// Add `is-arrowless`\n            | [<CompiledName(\"is-arrowless\")>] IsArrowless\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n        let internal link element (options : Option list) children =\n            let parseOptions (result : GenericOptions) option =\n                match option with\n                | IsActive state -> if state then result.AddCaseName option else result\n                | IsArrowless -> result.AddCaseName option\n                | Props props -> result.AddProps props\n                | CustomClass customClass -> result.AddClass customClass\n                | Modifiers modifiers -> result.AddModifiers modifiers\n\n            GenericOptions.Parse(options, parseOptions, \"navbar-link\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-link\"></div>\n        let div x y = link div x y\n        /// Generate <a class=\"navbar-link\"></a>\n        let a x y = link a x y\n\n    module Dropdown =\n\n        type Option =\n            /// Add `is-active` class if true\n            | [<CompiledName(\"is-active\")>] IsActive of bool\n            /// Add `is-boxed` class\n            | [<CompiledName(\"is-boxed\")>] IsBoxed\n            /// Add `is-right` class\n            | [<CompiledName(\"is-right\")>] IsRight\n            | Props of IHTMLProp list\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n        let internal dropdown element (options : Option list) children =\n            let parseOptions (result : GenericOptions) option =\n                match option with\n                | IsActive state -> if state then result.AddCaseName option else result\n                | IsBoxed\n                | IsRight -> result.AddCaseName option\n                | Props props -> result.AddProps props\n                | CustomClass customClass -> result.AddClass customClass\n                | Modifiers modifiers -> result.AddModifiers modifiers\n\n            GenericOptions.Parse(options, parseOptions, \"navbar-dropdown\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-dropdown\"></div>\n        let div x y = dropdown div x y\n        /// Generate <a class=\"navbar-dropdown\"></a>\n        let a x y = dropdown a x y\n\n    module Brand =\n        let internal brand element (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"navbar-brand\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-brand\"></div>\n        let div x y = brand div x y\n        /// Generate <a class=\"navbar-brand\"></a>\n        let a x y = brand a x y\n\n    module Start =\n        let internal start element (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"navbar-start\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-start\"></div>\n        let div x y = start div x y\n        /// Generate <a class=\"navbar-start\"></a>\n        let a x y = start a x y\n\n    module End =\n        let internal ``end`` element (options: GenericOption list) children =\n            GenericOptions.Parse(options, parseOptions, \"navbar-end\").ToReactElement(element, children)\n\n        /// Generate <div class=\"navbar-end\"></div>\n        let div x y = ``end`` div x y\n        /// Generate <a class=\"navbar-end\"></a>\n        let a x y = ``end`` a x y\n\n    /// Generate <nav class=\"navbar\"></nav>\n    let navbar (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | HasShadow\n            | IsFixedTop\n            | IsFixedBottom\n            | IsTransparent\n            | IsSpaced -> result.AddCaseName option\n            | Color color -> ofColor color |> result.AddClass\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"navbar\").ToReactElement(nav, children)\n\n    /// Generate <div class=\"navbar-menu\"></div>\n    let menu options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Menu.IsActive state -> if state then result.AddCaseName option else result\n            | Menu.Props props -> result.AddProps props\n            | Menu.CustomClass customClass -> result.AddClass customClass\n            | Menu.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"navbar-menu\").ToReactElement(div, children)\n\n    /// Generate <div class=\"navbar-burger\"></div>\n    let burger (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"navbar-burger\").ToReactElement(div, children)\n\n    /// Generate <div class=\"navbar-content\"></div>\n    let content (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"navbar-content\").ToReactElement(div, children)\n\n    /// Generate <div class=\"navbar-divider\"></div>\n    let divider (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"navbar-divider\").ToReactElement(div, children)\n","namespace Elmish\nopen System\n\n[<Struct>]\ntype internal RingState<'item> =\n    | Writable of wx:'item array * ix:int\n    | ReadWritable of rw:'item array * wix:int * rix:int\n\ntype internal RingBuffer<'item>(size) =\n    let doubleSize ix (items: 'item array) =\n        seq { yield! items |> Seq.skip ix\n              yield! items |> Seq.take ix\n              for _ in 0..items.Length do\n                yield Unchecked.defaultof<'item> }\n        |> Array.ofSeq\n\n    let mutable state : 'item RingState =\n        Writable (Array.zeroCreate (max size 10),0)\n\n    member __.Pop() =\n        match state with\n        | ReadWritable (items,wix,rix) ->\n            let rix' = (rix + 1) % items.Length\n            match rix' = wix with\n            | true -> \n                state <- Writable(items,wix)\n            | _ ->\n                state <- ReadWritable(items,wix,rix')\n            Some items.[rix]\n        | _ ->\n            None\n\n    member __.Push (item:'item) =\n        match state with\n        | Writable (items,ix) ->\n            items.[ix] <- item\n            let wix = (ix + 1) % items.Length\n            state <- ReadWritable(items,wix,ix)\n        | ReadWritable (items,wix,rix) ->\n            items.[wix] <- item\n            let wix' = (wix + 1) % items.Length\n            match wix' = rix with\n            | true -> \n                let items = items |> doubleSize rix                                \n                state <- ReadWritable(items,wix',0)\n            | _ -> \n                state <- ReadWritable(items,wix',rix)","(** UrlParser\n------\nThis port of the Elm library helps you turn URLs into nicely structured data.\nIt is designed to be used with `Navigation` module to help folks create\nsingle-page applications (SPAs) where you manage browser navigation yourself.\n*)\n\nmodule Elmish.UrlParser\n\n\n(**\n#### Types\n*)\n\ntype State<'v> =\n  { visited : string list\n    unvisited : string list\n    args : Map<string,string>\n    value : 'v }\n\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule internal State =\n  let mkState visited unvisited args value =\n        { visited = visited\n          unvisited = unvisited\n          args = args\n          value = value }\n\n  let map f { visited = visited; unvisited = unvisited; args = args; value = value } =\n        { visited = visited\n          unvisited = unvisited\n          args = args\n          value = f value }\n\n\n/// Turn URLs like `/blog/42/cat-herding-techniques` into nice data.\ntype Parser<'a,'b> = State<'a> -> State<'b> list\n\n\n(**\n#### Parse segments\nCreate a custom path segment parser. You can use it to define something like “only CSS files” like this:\n```\n    let css =\n      custom \"CSS_FILE\" <| fun segment ->\n        if String.EndsWith \".css\" then\n          Ok segment\n        else\n          Error \"Does not end with .css\"\n```\n*)\nlet custom tipe stringToSomething : Parser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        match unvisited with\n        | [] -> []\n        | next :: rest ->\n            match stringToSomething next with\n            | Ok nextValue ->\n                [ State.mkState (next :: visited) rest args (value nextValue) ]\n\n            | Error msg ->\n                []\n    inner\n\n\n(** Parse a segment of the path as a `string`.\n```\n    parse str location\n```\n<pre>\n    /alice/  ==>  Some \"alice\"\n    /bob     ==>  Some \"bob\"\n    /42/     ==>  Some \"42\"\n</pre>\n*)\nlet str state =\n    custom \"string\" Ok state\n\n\n(** Parse a segment of the path as an `int`.\n```\n    parse i32 location\n```\n<pre>\n    /alice/  ==>  None\n    /bob     ==>  None\n    /42/     ==>  Some 42\n</pre>\n*)\nlet i32 state =\n    custom \"i32\" (System.Int32.TryParse >> function true, value -> Ok value | _ -> Error \"Can't parse int\" ) state\n\n\n(** Parse a segment of the path if it matches a given string.\n```\n    s \"blog\"  // can parse /blog/\n              // but not /glob/ or /42/ or anything else\n```\n*)\nlet s str : Parser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        match unvisited with\n        | [] -> []\n        | next :: rest ->\n            if next = str then\n                [ State.mkState (next :: visited) rest args value ]\n            else\n                []\n    inner\n\n\n\n(**\n#### Combining parsers\nParse a path with multiple segments.\n\n```\n    parse (s \"blog\" </> i32) location\n```\n<pre>\n    /blog/35/  ==>  Some 35\n    /blog/42   ==>  Some 42\n    /blog/     ==>  None\n    /42/       ==>  None\n</pre>\n```\n    parse (s \"search\" </> str) location\n```\n<pre>\n    /search/cats/  ==>  Some \"cats\"\n    /search/frog   ==>  Some \"frog\"\n    /search/       ==>  None\n    /cats/         ==>  None\n</pre>\n*)\nlet inline (</>) (parseBefore:Parser<_,_>) (parseAfter:Parser<_,_>) =\n  fun state ->\n    List.collect parseAfter (parseBefore state)\n\n\n(** Transform a path parser.\n```\n    type Comment = { author : string; id : int }\n    rawComment =\n      s \"user\" </> str </> s \"comments\" </> i32\n    comment =\n      map (fun a id -> { author = a; id = id }) rawComment\n    parse comment location\n```\n<pre>\n    /user/bob/comments/42  ==>  Some { author = \"bob\"; id = 42 }\n    /user/tom/comments/35  ==>  Some { author = \"tom\"; id = 35 }\n    /user/sam/             ==>  None\n</pre>\n*)\nlet map (subValue:'a) (parse:Parser<'a,'b>) : Parser<'b->'c,'c> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        List.map (State.map value)\n        <| parse { visited = visited\n                   unvisited = unvisited\n                   args = args\n                   value = subValue }\n    inner\n\n\n\n(** Try a bunch of different path parsers.\n```\n    type Route\n      = Search of string\n      | Blog of int\n      | User of string\n      | Comment of string*int\n    route =\n      oneOf\n        [ map Search  (s \"search\" </> str)\n          map Blog    (s \"blog\" </> i32)\n          map User    (s \"user\" </> str)\n          map Comment (s \"user\" </> str </> \"comments\" </> i32) ]\n    parse route location\n```\n<pre>\n    /search/cats           ==>  Some (Search \"cats\")\n    /search/               ==>  None\n    /blog/42               ==>  Some (Blog 42)\n    /blog/cats             ==>  None\n    /user/sam/             ==>  Some (User \"sam\")\n    /user/bob/comments/42  ==>  Some (Comment \"bob\" 42)\n    /user/tom/comments/35  ==>  Some (Comment \"tom\" 35)\n    /user/                 ==>  None\n</pre>\n*)\nlet oneOf parsers state =\n    List.collect (fun parser -> parser state) parsers\n\n\n(** A parser that does not consume any path segments.\n```\n    type BlogRoute = Overview | Post of int\n    blogRoute =\n      oneOf\n        [ map Overview top\n          map Post  (s \"post\" </> i32) ]\n    parse (s \"blog\" </> blogRoute) location\n```\n<pre>\n    /blog/         ==>  Some Overview\n    /blog/post/42  ==>  Some (Post 42)\n</pre>\n*)\nlet top state=\n    [state]\n\n\n\n(**\n#### Query parameters\nTurn query parameters like `?name=tom&age=42` into nice data.\n\n*)\n\ntype QueryParser<'a,'b> = State<'a> -> State<'b> list\n\n\n(** Parse some query parameters.\n```\n    type Route = BlogList (Option string) | BlogPost Int\n    route =\n      oneOf\n        [ map BlogList (s \"blog\" <?> stringParam \"search\")\n          map BlogPost (s \"blog\" </> i32) ]\n    parse route location\n```\n<pre>\n    /blog/              ==>  Some (BlogList None)\n    /blog/?search=cats  ==>  Some (BlogList (Some \"cats\"))\n    /blog/42            ==>  Some (BlogPost 42)\n</pre>\n*)\nlet inline (<?>) (parser:Parser<_,_>) (queryParser:QueryParser<_,_>) : Parser<_,_> =\n    fun state ->\n        List.collect queryParser (parser state)\n\n(** Create a custom query parser. You could create parsers like these:\n```\n    val jsonParam : string -> Decoder a -> QueryParser (Option a -> b) b\n    val enumParam : string -> Map<string,a> -> QueryParser (Option a -> b) b\n```\n*)\nlet customParam (key: string) (func:string option -> _) : QueryParser<_,_> =\n    let inner { visited = visited; unvisited = unvisited; args = args; value = value } =\n        [ State.mkState visited unvisited args (value (func (Map.tryFind key args))) ]\n    inner\n\n\n(** Parse a query parameter as a `string`.\n```\n    parse (s \"blog\" <?> stringParam \"search\") location\n```\n<pre>\n    /blog/              ==>  Some (Overview None)\n    /blog/?search=cats  ==>  Some (Overview (Some \"cats\"))\n</pre>\n*)\nlet stringParam name =\n    customParam name id\n\nlet internal intParamHelp =\n    Option.bind\n        (fun value ->\n            match System.Int32.TryParse value with\n            | (true,x) -> Some x\n            | _ -> None)\n\n(** Parse a query parameter as an `int`. Option you want to show paginated\nsearch results. You could have a `start` query parameter to say which result\nshould appear first.\n```\n    parse (s \"results\" <?> intParam \"start\") location\n```\n<pre>\n    /results           ==>  Some None\n    /results?start=10  ==>  Some (Some 10)\n</pre>\n*)\nlet intParam name =\n    customParam name intParamHelp\n\n\n// PARSER HELPERS\n\nlet rec internal parseHelp states =\n    match states with\n    | [] ->\n        None\n    | state :: rest ->\n        match state.unvisited with\n        | [] ->\n            Some state.value\n        | [\"\"] ->\n            Some state.value\n        | _ ->\n            parseHelp rest\n\nlet internal splitUrl (url:string) =\n    match List.ofArray <| url.Split([|'/'|]) with\n    | \"\" :: segments ->\n        segments\n    | segments ->\n        segments\n\n/// parse a given part of the location\nlet parse (parser:Parser<'a->'a,'a>) url args =\n    { visited = []\n      unvisited = splitUrl url\n      args = args\n      value = id }\n    |> parser\n    |> parseHelp\n\nopen Fable.Core\n\nlet internal toKeyValuePair (segment:string) =\n    match segment.Split('=') with\n    | [| key; value |] ->\n        Option.tuple (Option.ofFunc JS.decodeURI key) (Option.ofFunc JS.decodeURI value)\n    | _ -> None\n\n\nlet internal parseParams (querystring:string) =\n    querystring.Substring(1).Split('&')\n    |> Seq.map toKeyValuePair\n    |> Seq.choose id\n    |> Map.ofSeq\n\nopen Browser.Types\n\n(**\n#### Parsers\nParse based on `location.pathname` and `location.search`. This parser\nignores the hash entirely.\n*)\nlet parsePath (parser:Parser<_,_>) (location:Location) =\n    parse parser location.pathname (parseParams location.search)\n\n(** Parse based on `location.hash`. This parser ignores the normal\npath entirely.\n*)\nlet parseHash (parser:Parser<_,_>) (location:Location) =\n    let hash, search =\n        let hash = location.hash.Substring 1\n        if hash.Contains(\"?\") then\n            let h = hash.Substring(0, hash.IndexOf(\"?\"))\n            h, hash.Substring(h.Length)\n        else\n            hash, \"?\"\n\n    parse parser (hash) (parseParams search)\n","export class CancellationToken {\n    constructor(cancelled = false) {\n        this._id = 0;\n        this._cancelled = cancelled;\n        this._listeners = new Map();\n    }\n    get isCancelled() {\n        return this._cancelled;\n    }\n    cancel() {\n        if (!this._cancelled) {\n            this._cancelled = true;\n            for (const [, listener] of this._listeners) {\n                listener();\n            }\n        }\n    }\n    addListener(f) {\n        const id = this._id;\n        this._listeners.set(this._id++, f);\n        return id;\n    }\n    removeListener(id) {\n        return this._listeners.delete(id);\n    }\n    register(f, state) {\n        const $ = this;\n        const id = this.addListener(state == null ? f : () => f(state));\n        return { Dispose() { $.removeListener(id); } };\n    }\n}\nexport class OperationCanceledError extends Error {\n    constructor() {\n        super(\"The operation was canceled\");\n        Object.setPrototypeOf(this, OperationCanceledError.prototype);\n    }\n}\nexport class Trampoline {\n    static get maxTrampolineCallCount() {\n        return 2000;\n    }\n    constructor() {\n        this.callCount = 0;\n    }\n    incrementAndCheck() {\n        return this.callCount++ > Trampoline.maxTrampolineCallCount;\n    }\n    hijack(f) {\n        this.callCount = 0;\n        setTimeout(f, 0);\n    }\n}\nexport function protectedCont(f) {\n    return (ctx) => {\n        if (ctx.cancelToken.isCancelled) {\n            ctx.onCancel(new OperationCanceledError());\n        }\n        else if (ctx.trampoline.incrementAndCheck()) {\n            ctx.trampoline.hijack(() => {\n                try {\n                    f(ctx);\n                }\n                catch (err) {\n                    ctx.onError(err);\n                }\n            });\n        }\n        else {\n            try {\n                f(ctx);\n            }\n            catch (err) {\n                ctx.onError(err);\n            }\n        }\n    };\n}\nexport function protectedBind(computation, binder) {\n    return protectedCont((ctx) => {\n        computation({\n            onSuccess: (x) => {\n                try {\n                    binder(x)(ctx);\n                }\n                catch (ex) {\n                    ctx.onError(ex);\n                }\n            },\n            onError: ctx.onError,\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function protectedReturn(value) {\n    return protectedCont((ctx) => ctx.onSuccess(value));\n}\nexport class AsyncBuilder {\n    Bind(computation, binder) {\n        return protectedBind(computation, binder);\n    }\n    Combine(computation1, computation2) {\n        return this.Bind(computation1, () => computation2);\n    }\n    Delay(generator) {\n        return protectedCont((ctx) => generator()(ctx));\n    }\n    For(sequence, body) {\n        const iter = sequence[Symbol.iterator]();\n        let cur = iter.next();\n        return this.While(() => !cur.done, this.Delay(() => {\n            const res = body(cur.value);\n            cur = iter.next();\n            return res;\n        }));\n    }\n    Return(value) {\n        return protectedReturn(value);\n    }\n    ReturnFrom(computation) {\n        return computation;\n    }\n    TryFinally(computation, compensation) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: (x) => {\n                    compensation();\n                    ctx.onSuccess(x);\n                },\n                onError: (x) => {\n                    compensation();\n                    ctx.onError(x);\n                },\n                onCancel: (x) => {\n                    compensation();\n                    ctx.onCancel(x);\n                },\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n            });\n        });\n    }\n    TryWith(computation, catchHandler) {\n        return protectedCont((ctx) => {\n            computation({\n                onSuccess: ctx.onSuccess,\n                onCancel: ctx.onCancel,\n                cancelToken: ctx.cancelToken,\n                trampoline: ctx.trampoline,\n                onError: (ex) => {\n                    try {\n                        catchHandler(ex)(ctx);\n                    }\n                    catch (ex2) {\n                        ctx.onError(ex2);\n                    }\n                },\n            });\n        });\n    }\n    Using(resource, binder) {\n        return this.TryFinally(binder(resource), () => resource.Dispose());\n    }\n    While(guard, computation) {\n        if (guard()) {\n            return this.Bind(computation, () => this.While(guard, computation));\n        }\n        else {\n            return this.Return(void 0);\n        }\n    }\n    Zero() {\n        return protectedCont((ctx) => ctx.onSuccess(void 0));\n    }\n}\nexport const singleton = new AsyncBuilder();\n","import { OperationCanceledError, Trampoline } from \"./AsyncBuilder\";\nimport { CancellationToken } from \"./AsyncBuilder\";\nimport { protectedCont } from \"./AsyncBuilder\";\nimport { protectedBind } from \"./AsyncBuilder\";\nimport { protectedReturn } from \"./AsyncBuilder\";\nimport { choice1, choice2 } from \"./Option\";\nimport { map } from \"./Seq\";\n// Implemented just for type references\nexport default class Async {\n}\nfunction emptyContinuation(x) {\n    // NOP\n}\n// MakeAsync: body:(AsyncActivation<'T> -> AsyncReturn) -> Async<'T>\nexport function makeAsync(body) {\n    return body;\n}\n// Invoke: computation: Async<'T> -> ctxt:AsyncActivation<'T> -> AsyncReturn\nexport function invoke(computation, ctx) {\n    return computation(ctx);\n}\n// CallThenInvoke: ctxt:AsyncActivation<'T> -> result1:'U -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function callThenInvoke(ctx, result1, part2) {\n    return part2(result1)(ctx);\n}\n// Bind: ctxt:AsyncActivation<'T> -> part1:Async<'U> -> part2:('U -> Async<'T>) -> AsyncReturn\nexport function bind(ctx, part1, part2) {\n    return protectedBind(part1, part2)(ctx);\n}\nexport function createCancellationToken(arg) {\n    const token = new CancellationToken(typeof arg === \"boolean\" ? arg : false);\n    if (typeof arg === \"number\") {\n        setTimeout(() => { token.cancel(); }, arg);\n    }\n    return token;\n}\nexport function cancel(token) {\n    token.cancel();\n}\nexport function cancelAfter(token, ms) {\n    setTimeout(() => { token.cancel(); }, ms);\n}\nexport function isCancellationRequested(token) {\n    return token != null && token.isCancelled;\n}\nexport function startChild(computation) {\n    const promise = startAsPromise(computation);\n    // JS Promises are hot, computation has already started\n    // but we delay returning the result\n    return protectedCont((ctx) => protectedReturn(awaitPromise(promise))(ctx));\n}\nexport function awaitPromise(p) {\n    return fromContinuations((conts) => p.then(conts[0]).catch((err) => (err instanceof OperationCanceledError\n        ? conts[2] : conts[1])(err)));\n}\nexport function cancellationToken() {\n    return protectedCont((ctx) => ctx.onSuccess(ctx.cancelToken));\n}\nexport const defaultCancellationToken = new CancellationToken();\nexport function catchAsync(work) {\n    return protectedCont((ctx) => {\n        work({\n            onSuccess: (x) => ctx.onSuccess(choice1(x)),\n            onError: (ex) => ctx.onSuccess(choice2(ex)),\n            onCancel: ctx.onCancel,\n            cancelToken: ctx.cancelToken,\n            trampoline: ctx.trampoline,\n        });\n    });\n}\nexport function fromContinuations(f) {\n    return protectedCont((ctx) => f([ctx.onSuccess, ctx.onError, ctx.onCancel]));\n}\nexport function ignore(computation) {\n    return protectedBind(computation, (x) => protectedReturn(void 0));\n}\nexport function parallel(computations) {\n    return awaitPromise(Promise.all(map((w) => startAsPromise(w), computations)));\n}\nexport function sleep(millisecondsDueTime) {\n    return protectedCont((ctx) => {\n        let tokenId;\n        const timeoutId = setTimeout(() => {\n            ctx.cancelToken.removeListener(tokenId);\n            ctx.onSuccess(void 0);\n        }, millisecondsDueTime);\n        tokenId = ctx.cancelToken.addListener(() => {\n            clearTimeout(timeoutId);\n            ctx.onCancel(new OperationCanceledError());\n        });\n    });\n}\nexport function start(computation, cancellationToken) {\n    return startWithContinuations(computation, cancellationToken);\n}\nexport function startImmediate(computation, cancellationToken) {\n    return start(computation, cancellationToken);\n}\nexport function startWithContinuations(computation, continuation, exceptionContinuation, cancellationContinuation, cancelToken) {\n    if (typeof continuation !== \"function\") {\n        cancelToken = continuation;\n        continuation = null;\n    }\n    const trampoline = new Trampoline();\n    computation({\n        onSuccess: continuation ? continuation : emptyContinuation,\n        onError: exceptionContinuation ? exceptionContinuation : emptyContinuation,\n        onCancel: cancellationContinuation ? cancellationContinuation : emptyContinuation,\n        cancelToken: cancelToken ? cancelToken : defaultCancellationToken,\n        trampoline,\n    });\n}\nexport function startAsPromise(computation, cancellationToken) {\n    return new Promise((resolve, reject) => startWithContinuations(computation, resolve, reject, reject, cancellationToken ? cancellationToken : defaultCancellationToken));\n}\n","module Question.Index.View\n\nopen Types\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fulma.Extensions.Wikiki\n\nlet private loaderView isLoading =\n    PageLoader.pageLoader [ PageLoader.IsActive isLoading ]\n        [ ]\n\nlet private questionsView (question : QuestionInfo) =\n    let url =\n        Router.QuestionPage.Show\n        >> Router.Question\n\n    Media.media [ ]\n        [ Media.left [ ]\n            [ Image.image [ Image.Is64x64 ]\n                [ img [ Src (\"avatars/\" + question.Author.Avatar)  ] ] ]\n          Media.content [ ]\n            [ Heading.p [ Heading.IsSubtitle\n                          Heading.Is5 ]\n                [ a [ Router.href (url question.Id) ]\n                    [ str question.Title ] ]\n              Level.level [ ]\n                [ Level.left [ ] [ ] // Needed to force the level right aligment\n                  Level.right [ ]\n                    [ Level.item [ ]\n                        [ Help.help [ ]\n                            [ str (sprintf \"Asked by %s %s, %s\"\n                                                question.Author.Firstname\n                                                question.Author.Surname\n                                                (question.CreatedAt.ToString(\"yyyy-MM-dd HH:mm:ss\"))) ] ] ] ] ] ]\n\nlet private questionsList questions =\n    Columns.columns [ Columns.IsCentered ]\n        [ Column.column [ Column.Width(Screen.All, Column.IsTwoThirds) ]\n            (questions |> List.map questionsView) ]\n\nlet root model _ =\n    match model.Questions with\n    | Some questions ->\n        Container.container [ ]\n            [ loaderView false\n              Section.section [ ]\n                [ Columns.columns [ ]\n                    [ Column.column [ Column.Width(Screen.All, Column.IsNarrow) ]\n                        [ Heading.h3 [ ]\n                            [ str \"Latest questions\" ] ]\n                      Column.column [ ] [ ]\n                      Column.column [ Column.Width (Screen.All, Column.IsNarrow) ]\n                        [ Button.a [ Button.Color IsPrimary\n                                     Button.Props [ Router.href (Router.Question Router.Create) ] ]\n                            [ str \"Ask a new question\" ] ] ] ]\n              questionsList questions ]\n    | None ->\n        Container.container [ ]\n            [ loaderView true ]\n","(**\nProgram\n---------\nCore abstractions for creating and running the dispatch loop.\n\n*)\n\nnamespace Elmish\n\n\n/// Program type captures various aspects of program behavior\ntype Program<'arg, 'model, 'msg, 'view> = private {\n    init : 'arg -> 'model * Cmd<'msg>\n    update : 'msg -> 'model -> 'model * Cmd<'msg>\n    subscribe : 'model -> Cmd<'msg>\n    view : 'model -> Dispatch<'msg> -> 'view\n    setState : 'model -> Dispatch<'msg> -> unit\n    onError : (string*exn) -> unit\n    syncDispatch: Dispatch<'msg> -> Dispatch<'msg>\n}\n\n/// Program module - functions to manipulate program instances\n[<RequireQualifiedAccess>]\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\nmodule Program =\n    /// Typical program, new commands are produced by `init` and `update` along with the new state.\n    let mkProgram \n        (init : 'arg -> 'model * Cmd<'msg>) \n        (update : 'msg -> 'model -> 'model * Cmd<'msg>)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init\n          update = update\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Simple program that produces only new state with `init` and `update`.\n    let mkSimple \n        (init : 'arg -> 'model) \n        (update : 'msg -> 'model -> 'model)\n        (view : 'model -> Dispatch<'msg> -> 'view) =\n        { init = init >> fun state -> state,Cmd.none\n          update = fun msg -> update msg >> fun state -> state,Cmd.none\n          view = view\n          setState = fun model -> view model >> ignore\n          subscribe = fun _ -> Cmd.none\n          onError = Log.onError\n          syncDispatch = id }\n\n    /// Subscribe to external source of events.\n    /// The subscription is called once - with the initial model, but can dispatch new messages at any time.\n    let withSubscription (subscribe : 'model -> Cmd<'msg>) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let sub model =\n            Cmd.batch [ program.subscribe model\n                        subscribe model ]\n        { program with subscribe = sub }\n\n    /// Trace all the updates to the console\n    let withConsoleTrace (program: Program<'arg, 'model, 'msg, 'view>) =\n        let traceInit (arg:'arg) =\n            let initModel,cmd = program.init arg\n            Log.toConsole (\"Initial state:\", initModel)\n            initModel,cmd\n\n        let traceUpdate msg model =\n            Log.toConsole (\"New message:\", msg)\n            let newModel,cmd = program.update msg model\n            Log.toConsole (\"Updated state:\", newModel)\n            newModel,cmd\n\n        { program with\n            init = traceInit \n            update = traceUpdate }\n\n    /// Trace all the messages as they update the model\n    let withTrace trace (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with update = fun msg model -> trace msg model; program.update msg model}\n\n    /// Handle dispatch loop exceptions\n    let withErrorHandler onError (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = onError }\n\n    /// For library authors only: map existing error handler and return new `Program` \n    let mapErrorHandler map (program: Program<'arg, 'model, 'msg, 'view>) =\n        { program\n            with onError = map program.onError }\n\n    /// For library authors only: function to render the view with the latest state \n    let withSetState (setState:'model -> Dispatch<'msg> -> unit)\n                     (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with setState = setState }\n\n    /// For library authors only: return the function to render the state \n    let setState (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.setState\n\n    /// For library authors only: return the view function \n    let view (program: Program<'arg, 'model, 'msg, 'view>) =        \n        program.view\n\n    /// For library authors only: function to synchronize the dispatch function\n    let withSyncDispatch (syncDispatch:Dispatch<'msg> -> Dispatch<'msg>)\n                         (program: Program<'arg, 'model, 'msg, 'view>) =        \n        { program\n            with syncDispatch = syncDispatch }\n\n    /// For library authors only: map the program type\n    let map mapInit mapUpdate mapView mapSetState mapSubscribe\n            (program: Program<'arg, 'model, 'msg, 'view>) =\n        { init = mapInit program.init\n          update = mapUpdate program.update\n          view = mapView program.view\n          setState = mapSetState program.setState\n          subscribe = mapSubscribe program.subscribe\n          onError = program.onError\n          syncDispatch = id }\n\n    /// Start the program loop.\n    /// arg: argument to pass to the init() function.\n    /// program: program created with 'mkSimple' or 'mkProgram'.\n    let runWith (arg: 'arg) (program: Program<'arg, 'model, 'msg, 'view>) =\n        let (model,cmd) = program.init arg\n        let rb = RingBuffer 10\n        let mutable reentered = false\n        let mutable state = model        \n        let rec dispatch msg = \n            if reentered then\n                rb.Push msg\n            else\n                reentered <- true\n                let mutable nextMsg = Some msg\n                while Option.isSome nextMsg do\n                    let msg = nextMsg.Value\n                    try\n                        let (model',cmd') = program.update msg state\n                        program.setState model' syncDispatch\n                        cmd' |> Cmd.exec syncDispatch\n                        state <- model'\n                    with ex ->\n                        program.onError (sprintf \"Unable to process the message: %A\" msg, ex)\n                    nextMsg <- rb.Pop()\n                reentered <- false\n        and syncDispatch = program.syncDispatch dispatch            \n\n        program.setState model syncDispatch\n        let sub = \n            try \n                program.subscribe model \n            with ex ->\n                program.onError (\"Unable to subscribe:\", ex)\n                Cmd.none\n        sub @ cmd |> Cmd.exec syncDispatch\n\n    /// Start the dispatch loop with `unit` for the init() function.\n    let run (program: Program<unit, 'model, 'msg, 'view>) = runWith () program\n","(** Custom navigation\n------\nThis port of the Elm library is about treating the address bar as an input to your program.\nIt converts changes in the address bar into messages and provides functions for manipulation of the browser history.\n*)\nnamespace Elmish.Navigation\n\nopen Browser\nopen Browser.Types\nopen Elmish\n\n(**\n#### Parser\nA function to turn the string in the address bar into data that is easier for your app to handle.\n*)\ntype Parser<'a> = Location -> 'a\n\ntype Navigable<'msg> =\n    | Change of Location\n    | UserMsg of 'msg\n\n(**\n#### Direct history manipulation\n*)\n[<RequireQualifiedAccess>]\nmodule Navigation =\n    let [<Literal>] internal NavigatedEvent = \"NavigatedEvent\"\n\n    /// Modify current location\n    let modifyUrl (newUrl:string):Cmd<_> =\n        [fun _ -> history.replaceState((), \"\", newUrl)]\n\n    /// Push new location into history and navigate there\n    let newUrl (newUrl:string):Cmd<_> =\n        [fun _ -> history.pushState((), \"\", newUrl)\n                  let ev = CustomEvent.Create(NavigatedEvent)\n                  window.dispatchEvent ev\n                  |> ignore ]\n\n    /// Jump to some point in history (positve=forward, nagative=backward)\n    let jump (n:int):Cmd<_> =\n        [fun _ -> history.go n]\n\n\n(**\n#### Program extensions\nTreat user's program as a child component, by wrapping it and handling navigation events.\n*)\n[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]\n[<RequireQualifiedAccess>]\nmodule Program =\n\n    module Internal =\n        let mutable private onChangeRef : obj -> obj =\n            fun _ ->\n                failwith \"`onChangeRef` has not been itialized.\\nPlease make sure you used Elmish.Browser.Navigation.Program.Internal.subscribe\"\n\n        let subscribe (dispatch:Dispatch<_ Navigable>) =\n            let mutable lastLocation = None\n            let onChange _ =\n                match lastLocation with\n                | Some href when href = window.location.href -> ()\n                | _ ->\n                    lastLocation <- Some window.location.href\n                    Change window.location |> dispatch\n                |> box\n\n            onChangeRef <- onChange\n\n            window.addEventListener(\"popstate\", unbox onChangeRef)\n            window.addEventListener(\"hashchange\", unbox onChangeRef)\n            window.addEventListener(Navigation.NavigatedEvent, unbox onChangeRef)\n\n        let unsubscribe () =\n            window.removeEventListener(\"popstate\", unbox onChangeRef)\n            window.removeEventListener(\"hashchange\", unbox onChangeRef)\n            window.removeEventListener(Navigation.NavigatedEvent, unbox onChangeRef)\n\n        let toNavigableWith (parser : Parser<'a>)\n                            (urlUpdate : 'a->'model->('model * Cmd<'msg>))\n                            (program : Program<'a,'model,'msg,'view>)\n                            (onLocationChange : Dispatch<Navigable<'msg>> -> unit) =\n\n            let map (model, cmd) =\n                model, cmd |> Cmd.map UserMsg\n\n            let update userUpdate msg model =\n                match msg with\n                | Change location ->\n                    urlUpdate (parser location) model\n                | UserMsg userMsg ->\n                    userUpdate userMsg model\n                |> map\n\n            let subs userSubscribe model =\n                Cmd.batch\n                  [ [ onLocationChange ]\n                    userSubscribe model |> Cmd.map UserMsg ]\n\n            let init userInit () =\n                userInit (parser window.location) |> map\n\n            let setState userSetState model dispatch =\n                userSetState model (UserMsg >> dispatch)\n\n            let view userView model dispatch =\n                userView model (UserMsg >> dispatch)\n            \n            program\n            |> Program.map init update view setState subs\n\n    /// Add the navigation to a program made with `mkProgram` or `mkSimple`.\n    /// urlUpdate: similar to `update` function, but receives parsed url instead of message as an input.\n    let toNavigable (parser : Parser<'a>)\n                    (urlUpdate : 'a->'model->('model * Cmd<'msg>))\n                    (program : Program<'a,'model,'msg,'view>) =\n\n        Internal.toNavigableWith parser urlUpdate program Internal.subscribe\n","module BeerScore.View\r\n\r\nopen Fulma\r\nopen Fable.React.Helpers\r\nopen Fable.React\r\n\r\nlet root user model dispatch =\r\n    Container.container []\r\n        [ Heading.h3 [] [str \"Hello\"]\r\n          Field.div []\r\n            [ Label.label [ ]\r\n                [ str \"Name\" ]\r\n              Control.div [ ]\r\n                [ Input.text [ Input.Placeholder \"Ex: Maxime\" ] ] ]\r\n          Field.div []\r\n            [ Control.p [] [\r\n                Input.tel [ ]\r\n            ] ] ]","module Question.Index.Rest\n\nopen Types\nopen Database\n\nlet getQuestions _ =\n    promise {\n\n        let result =\n            Database.Questions\n                .sortBy(\"Id\")\n                .value()\n            |> unbox<Database.Question []>\n            |> Array.map(fun question ->\n                match Database.GetUserById question.AuthorId with\n                | None -> failwithf \"Unkown author of id#%i for the question#%i\" question.AuthorId question.Id\n                | Some user ->\n                    { Id = question.Id\n                      Author = user\n                      Title = question.Title\n                      Description = question.Description\n                      CreatedAt = question.CreatedAt }\n            )\n            |> Array.toList\n\n        do! Promise.sleep 500\n\n        return GetQuestionsRes.Success result\n    }\n","import { List, declare, Record } from \"../Types.js\";\nimport { record, array, int32 } from \"../Reflection.js\";\nimport { op_LeftShift, op_BitwiseAnd, op_Addition, compare, op_Subtraction, op_Division, equals, toInt, op_Modulus, op_Multiply, fromInteger, fromBits } from \"../Long.js\";\nimport { ofList, copy, initialize, map, fill } from \"../Array.js\";\nimport { int32ToString } from \"../Util.js\";\nimport { isNullOrEmpty, join } from \"../String.js\";\nexport const BigNat = declare(function BigInt_BigNat(arg1, arg2) {\n  this.bound = arg1 | 0;\n  this.digits = arg2;\n}, Record);\nexport function BigNat$reflection() {\n  return record(\"BigInt.BigNat\", [], BigNat, () => [[\"bound\", int32], [\"digits\", array(int32)]]);\n}\nexport function BigNatModule$002EFFT$$$pow32(x, n) {\n  BigNatModule$002EFFT$$$pow32: while (true) {\n    if (n === 0) {\n      return 1;\n    } else if (n % 2 === 0) {\n      const $n$$2 = n;\n      const $x$$1 = x;\n      x = $x$$1 * $x$$1;\n      n = ~~($n$$2 / 2);\n      continue BigNatModule$002EFFT$$$pow32;\n    } else {\n      return x * BigNatModule$002EFFT$$$pow32(x * x, ~~(n / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$$$leastBounding2Power(b) {\n  const findBounding2Power = function findBounding2Power(b$$1, tp, i) {\n    findBounding2Power: while (true) {\n      if (b$$1 <= tp) {\n        return [tp, i];\n      } else {\n        const $b$$1$$3 = b$$1;\n        const $i$$5 = i;\n        const $tp$$4 = tp;\n        b$$1 = $b$$1$$3;\n        tp = $tp$$4 * 2;\n        i = $i$$5 + 1;\n        continue findBounding2Power;\n      }\n\n      break;\n    }\n  };\n\n  return findBounding2Power(b, 1, 0);\n}\nconst BigNatModule$002EFFT$$$patternInput$004074 = [fromBits(2013265921, 0, false), 27, 15, 31, 440564289];\nexport const BigNatModule$002EFFT$$$w = BigNatModule$002EFFT$$$patternInput$004074[4];\nexport const BigNatModule$002EFFT$$$p = BigNatModule$002EFFT$$$patternInput$004074[0];\nexport const BigNatModule$002EFFT$$$m = BigNatModule$002EFFT$$$patternInput$004074[2];\nexport const BigNatModule$002EFFT$$$k = BigNatModule$002EFFT$$$patternInput$004074[1];\nexport const BigNatModule$002EFFT$$$g = BigNatModule$002EFFT$$$patternInput$004074[3];\nexport const BigNatModule$002EFFT$$$primeP = BigNatModule$002EFFT$$$p;\nexport const BigNatModule$002EFFT$$$maxBitsInsideFp = 30;\nexport const BigNatModule$002EFFT$002EFp$$$p = 2013265921;\nexport const BigNatModule$002EFFT$002EFp$$$p64 = fromBits(2013265921, 0, true);\nexport function BigNatModule$002EFFT$002EFp$$$toInt(x$$1) {\n  return ~~x$$1;\n}\nexport function BigNatModule$002EFFT$002EFp$$$ofInt32(x$$2) {\n  return x$$2 >>> 0;\n}\nexport const BigNatModule$002EFFT$002EFp$$$mzero = 0;\nexport const BigNatModule$002EFFT$002EFp$$$mone = 1;\nexport const BigNatModule$002EFFT$002EFp$$$mtwo = 2;\nexport function BigNatModule$002EFFT$002EFp$$$mpow(x$$3, n$$1) {\n  BigNatModule$002EFFT$002EFp$$$mpow: while (true) {\n    if (n$$1 === 0) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (n$$1 % 2 === 0) {\n      const $n$$1$$7 = n$$1;\n      const $x$$3$$6 = x$$3;\n      x$$3 = toInt(op_Modulus(op_Multiply(fromInteger($x$$3$$6, true, 6), fromInteger($x$$3$$6, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      n$$1 = ~~($n$$1$$7 / 2);\n      continue BigNatModule$002EFFT$002EFp$$$mpow;\n    } else {\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(BigNatModule$002EFFT$002EFp$$$mpow(toInt(op_Modulus(op_Multiply(fromInteger(x$$3, true, 6), fromInteger(x$$3, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, ~~(n$$1 / 2)), true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$mpowL(x$$7, n$$2) {\n  BigNatModule$002EFFT$002EFp$$$mpowL: while (true) {\n    if (equals(n$$2, fromBits(0, 0, false))) {\n      return BigNatModule$002EFFT$002EFp$$$mone;\n    } else if (equals(op_Modulus(n$$2, fromBits(2, 0, false)), fromBits(0, 0, false))) {\n      const $n$$2$$9 = n$$2;\n      const $x$$7$$8 = x$$7;\n      x$$7 = toInt(op_Modulus(op_Multiply(fromInteger($x$$7$$8, true, 6), fromInteger($x$$7$$8, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n      n$$2 = op_Division($n$$2$$9, fromBits(2, 0, false));\n      continue BigNatModule$002EFFT$002EFp$$$mpowL;\n    } else {\n      return toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(BigNatModule$002EFFT$002EFp$$$mpowL(toInt(op_Modulus(op_Multiply(fromInteger(x$$7, true, 6), fromInteger(x$$7, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0, op_Division(n$$2, fromBits(2, 0, false))), true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(n$$3) {\n  return BigNatModule$002EFFT$002EFp$$$mpow(BigNatModule$002EFFT$$$w >>> 0, BigNatModule$002EFFT$$$pow32(2, BigNatModule$002EFFT$$$k - n$$3));\n}\nexport function BigNatModule$002EFFT$002EFp$$$minv(x$$11) {\n  return BigNatModule$002EFFT$002EFp$$$mpowL(x$$11, op_Subtraction(BigNatModule$002EFFT$$$primeP, fromBits(2, 0, false)));\n}\nexport function BigNatModule$002EFFT$$$computeFFT(lambda, mu, n$$4, w, u, res, offset) {\n  if (n$$4 === 1) {\n    res[offset] = u[mu];\n  } else {\n    const halfN = ~~(n$$4 / 2) | 0;\n    const ww = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(w, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    const offsetHalfN = offset + halfN | 0;\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, mu, halfN, ww, u, res, offset);\n    BigNatModule$002EFFT$$$computeFFT(lambda * 2, lambda + mu, halfN, ww, u, res, offsetHalfN);\n    let wj = BigNatModule$002EFFT$002EFp$$$mone;\n\n    for (let j = 0; j <= halfN - 1; j++) {\n      const even = res[offset + j];\n      const odd = res[offsetHalfN + j];\n      res[offset + j] = (even + (toInt(op_Modulus(op_Multiply(fromInteger(wj, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0)) % BigNatModule$002EFFT$002EFp$$$p;\n      res[offsetHalfN + j] = (even + BigNatModule$002EFFT$002EFp$$$p - (toInt(op_Modulus(op_Multiply(fromInteger(wj, true, 6), fromInteger(odd, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0)) % BigNatModule$002EFFT$002EFp$$$p;\n      wj = toInt(op_Modulus(op_Multiply(fromInteger(w, true, 6), fromInteger(wj, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n    }\n  }\n}\nexport function BigNatModule$002EFFT$$$computFftInPlace(n$$5, w$$1, u$$1) {\n  const lambda$$1 = 1;\n  const mu$$1 = 0;\n  const res$$1 = fill(new Uint32Array(n$$5), 0, n$$5, BigNatModule$002EFFT$002EFp$$$mzero);\n  const offset$$1 = 0;\n  BigNatModule$002EFFT$$$computeFFT(lambda$$1, mu$$1, n$$5, w$$1, u$$1, res$$1, offset$$1);\n  return res$$1;\n}\nexport function BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$6, w$$2, uT) {\n  const bigKInv = BigNatModule$002EFFT$002EFp$$$minv(n$$6 >>> 0);\n  return map(function (y$$12) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(bigKInv, true, 6), fromInteger(y$$12, true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, BigNatModule$002EFFT$$$computFftInPlace(n$$6, BigNatModule$002EFFT$002EFp$$$minv(w$$2), uT), Uint32Array);\n}\nexport const BigNatModule$002EFFT$$$maxTwoPower = 29;\nexport const BigNatModule$002EFFT$$$twoPowerTable = initialize(BigNatModule$002EFFT$$$maxTwoPower - 1, function (i$$1) {\n  return BigNatModule$002EFFT$$$pow32(2, i$$1);\n}, Int32Array);\nexport function BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(bigK, k, u$$2, v) {\n  const w$$3 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(k);\n  const n$$7 = bigK | 0;\n  const uT$$1 = BigNatModule$002EFFT$$$computFftInPlace(n$$7, w$$3, u$$2);\n  const vT = BigNatModule$002EFFT$$$computFftInPlace(n$$7, w$$3, v);\n  const rT = initialize(n$$7, function (i$$2) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(uT$$1[i$$2], true, 6), fromInteger(vT[i$$2], true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r = BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$7, w$$3, rT);\n  return r;\n}\nexport function BigNatModule$002EFFT$$$padTo(n$$8, u$$3) {\n  const uBound = u$$3.length | 0;\n  return initialize(n$$8, function (i$$3) {\n    return i$$3 < uBound ? BigNatModule$002EFFT$002EFp$$$ofInt32(u$$3[i$$3]) : BigNatModule$002EFFT$002EFp$$$mzero;\n  }, Uint32Array);\n}\nexport function BigNatModule$002EFFT$$$computeFftPolynomialProduct(degu, u$$4, degv, v$$1) {\n  const deguv = degu + degv | 0;\n  const bound = deguv + 1 | 0;\n  const patternInput = BigNatModule$002EFFT$$$leastBounding2Power(bound);\n  const w$$4 = BigNatModule$002EFFT$002EFp$$$m2PowNthRoot(patternInput[1]);\n  const u$$5 = BigNatModule$002EFFT$$$padTo(patternInput[0], u$$4);\n  const v$$2 = BigNatModule$002EFFT$$$padTo(patternInput[0], v$$1);\n  const n$$9 = patternInput[0] | 0;\n  const uT$$2 = BigNatModule$002EFFT$$$computFftInPlace(n$$9, w$$4, u$$5);\n  const vT$$1 = BigNatModule$002EFFT$$$computFftInPlace(n$$9, w$$4, v$$2);\n  const rT$$1 = initialize(n$$9, function (i$$4) {\n    return toInt(op_Modulus(op_Multiply(fromInteger(uT$$2[i$$4], true, 6), fromInteger(vT$$1[i$$4], true, 6)), BigNatModule$002EFFT$002EFp$$$p64)) >>> 0;\n  }, Uint32Array);\n  const r$$1 = BigNatModule$002EFFT$$$computeInverseFftInPlace(n$$9, w$$4, rT$$1);\n  return map(BigNatModule$002EFFT$002EFp$$$toInt, r$$1, Int32Array);\n}\nexport const BigNatModule$002EFFT$$$mzero = BigNatModule$002EFFT$002EFp$$$mzero;\nexport const BigNatModule$002EFFT$$$mone = BigNatModule$002EFFT$002EFp$$$mone;\nexport const BigNatModule$002EFFT$$$maxFp = (BigNatModule$002EFFT$002EFp$$$p + BigNatModule$002EFFT$002EFp$$$p - BigNatModule$002EFFT$$$mone) % BigNatModule$002EFFT$002EFp$$$p;\nexport function BigNatModule$$$bound(n$$10) {\n  return n$$10.bound;\n}\nexport function BigNatModule$$$setBound(n$$11, v$$3) {\n  n$$11.bound = v$$3;\n}\nexport function BigNatModule$$$coeff(n$$12, i$$5) {\n  return n$$12.digits[i$$5];\n}\nexport function BigNatModule$$$coeff64(n$$13, i$$6) {\n  return fromInteger(BigNatModule$$$coeff(n$$13, i$$6), false, 2);\n}\nexport function BigNatModule$$$setCoeff(n$$14, i$$7, v$$4) {\n  n$$14.digits[i$$7] = v$$4;\n}\nexport function BigNatModule$$$pow64(x$$23, n$$15) {\n  BigNatModule$$$pow64: while (true) {\n    if (n$$15 === 0) {\n      return fromBits(1, 0, false);\n    } else if (n$$15 % 2 === 0) {\n      const $n$$15$$11 = n$$15;\n      const $x$$23$$10 = x$$23;\n      x$$23 = op_Multiply($x$$23$$10, $x$$23$$10);\n      n$$15 = ~~($n$$15$$11 / 2);\n      continue BigNatModule$$$pow64;\n    } else {\n      return op_Multiply(x$$23, BigNatModule$$$pow64(op_Multiply(x$$23, x$$23), ~~(n$$15 / 2)));\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$pow32(x$$24, n$$16) {\n  BigNatModule$$$pow32: while (true) {\n    if (n$$16 === 0) {\n      return 1;\n    } else if (n$$16 % 2 === 0) {\n      const $n$$16$$13 = n$$16;\n      const $x$$24$$12 = x$$24;\n      x$$24 = $x$$24$$12 * $x$$24$$12;\n      n$$16 = ~~($n$$16$$13 / 2);\n      continue BigNatModule$$$pow32;\n    } else {\n      return x$$24 * BigNatModule$$$pow32(x$$24 * x$$24, ~~(n$$16 / 2)) | 0;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$hash(n$$17) {\n  let res$$2 = 0;\n\n  for (let i$$8 = 0; i$$8 <= n$$17.bound - 1; i$$8++) {\n    res$$2 = n$$17.digits[i$$8] + (res$$2 << 3);\n  }\n\n  return res$$2 | 0;\n}\nexport function BigNatModule$$$maxInt(a, b$$2) {\n  if (a < b$$2) {\n    return b$$2 | 0;\n  } else {\n    return a | 0;\n  }\n}\nexport function BigNatModule$$$minInt(a$$1, b$$3) {\n  if (a$$1 < b$$3) {\n    return a$$1 | 0;\n  } else {\n    return b$$3 | 0;\n  }\n}\nexport const BigNatModule$$$baseBits = 24;\nexport const BigNatModule$$$baseN = 16777216;\nexport const BigNatModule$$$baseMask = 16777215;\nexport const BigNatModule$$$baseNi64 = fromBits(16777216, 0, false);\nexport const BigNatModule$$$baseMaski64 = fromBits(16777215, 0, false);\nexport const BigNatModule$$$baseMaskU = fromBits(16777215, 0, true);\nexport const BigNatModule$$$baseMask32A = 16777215;\nexport const BigNatModule$$$baseMask32B = 255;\nexport const BigNatModule$$$baseShift32B = 24;\nexport const BigNatModule$$$baseMask64A = 16777215;\nexport const BigNatModule$$$baseMask64B = 16777215;\nexport const BigNatModule$$$baseMask64C = 65535;\nexport const BigNatModule$$$baseShift64B = 24;\nexport const BigNatModule$$$baseShift64C = 48;\nexport function BigNatModule$$$divbase(x$$25) {\n  return ~~(x$$25 >>> 0 >>> BigNatModule$$$baseBits);\n}\nexport function BigNatModule$$$modbase(x$$26) {\n  return x$$26 & BigNatModule$$$baseMask;\n}\nexport function BigNatModule$$$createN(b$$4) {\n  return new BigNat(b$$4, new Int32Array(b$$4));\n}\nexport function BigNatModule$$$copyN(x$$27) {\n  return new BigNat(x$$27.bound, copy(x$$27.digits, Int32Array));\n}\nexport function BigNatModule$$$normN(n$$18) {\n  const findLeastBound = function findLeastBound(na, i$$9) {\n    findLeastBound: while (true) {\n      if (i$$9 === -1 ? true : na[i$$9] !== 0) {\n        return i$$9 + 1 | 0;\n      } else {\n        const $i$$9$$15 = i$$9;\n        const $na$$14 = na;\n        na = $na$$14;\n        i$$9 = $i$$9$$15 - 1;\n        continue findLeastBound;\n      }\n\n      break;\n    }\n  };\n\n  const bound$$1 = findLeastBound(n$$18.digits, n$$18.bound - 1) | 0;\n  n$$18.bound = bound$$1;\n  return n$$18;\n}\nexport const BigNatModule$$$boundInt = 2;\nexport const BigNatModule$$$boundInt64 = 3;\nexport const BigNatModule$$$boundBase = 1;\nexport function BigNatModule$$$embed(x$$28) {\n  const x$$29 = (x$$28 < 0 ? 0 : x$$28) | 0;\n\n  if (x$$29 < BigNatModule$$$baseN) {\n    const r$$2 = BigNatModule$$$createN(1);\n    r$$2.digits[0] = x$$29;\n    return BigNatModule$$$normN(r$$2);\n  } else {\n    const r$$3 = BigNatModule$$$createN(BigNatModule$$$boundInt);\n\n    for (let i$$10 = 0; i$$10 <= BigNatModule$$$boundInt - 1; i$$10++) {\n      r$$3.digits[i$$10] = ~~(x$$29 / BigNatModule$$$pow32(BigNatModule$$$baseN, i$$10)) % BigNatModule$$$baseN;\n    }\n\n    return BigNatModule$$$normN(r$$3);\n  }\n}\nexport function BigNatModule$$$embed64(x$$30) {\n  const x$$31 = compare(x$$30, fromBits(0, 0, false)) < 0 ? fromBits(0, 0, false) : x$$30;\n  const r$$4 = BigNatModule$$$createN(BigNatModule$$$boundInt64);\n\n  for (let i$$11 = 0; i$$11 <= BigNatModule$$$boundInt64 - 1; i$$11++) {\n    r$$4.digits[i$$11] = ~~toInt(op_Modulus(op_Division(x$$31, BigNatModule$$$pow64(BigNatModule$$$baseNi64, i$$11)), BigNatModule$$$baseNi64));\n  }\n\n  return BigNatModule$$$normN(r$$4);\n}\nexport function BigNatModule$$$eval32(n$$19) {\n  if (n$$19.bound === 1) {\n    return n$$19.digits[0] | 0;\n  } else {\n    let acc = 0;\n\n    for (let i$$12 = n$$19.bound - 1; i$$12 >= 0; i$$12--) {\n      acc = n$$19.digits[i$$12] + BigNatModule$$$baseN * acc;\n    }\n\n    return acc | 0;\n  }\n}\nexport function BigNatModule$$$eval64(n$$20) {\n  if (n$$20.bound === 1) {\n    return fromInteger(n$$20.digits[0], false, 2);\n  } else {\n    let acc$$1 = fromBits(0, 0, false);\n\n    for (let i$$13 = n$$20.bound - 1; i$$13 >= 0; i$$13--) {\n      acc$$1 = op_Addition(fromInteger(n$$20.digits[i$$13], false, 2), op_Multiply(BigNatModule$$$baseNi64, acc$$1));\n    }\n\n    return acc$$1;\n  }\n}\nexport const BigNatModule$$$one = BigNatModule$$$embed(1);\nexport const BigNatModule$$$zero = BigNatModule$$$embed(0);\nexport function BigNatModule$$$restrictTo(d, n$$21) {\n  return new BigNat(BigNatModule$$$minInt(d, n$$21.bound), n$$21.digits);\n}\nexport function BigNatModule$$$shiftUp(d$$1, n$$22) {\n  const m = BigNatModule$$$createN(n$$22.bound + d$$1);\n\n  for (let i$$14 = 0; i$$14 <= n$$22.bound - 1; i$$14++) {\n    m.digits[i$$14 + d$$1] = n$$22.digits[i$$14];\n  }\n\n  return m;\n}\nexport function BigNatModule$$$shiftDown(d$$2, n$$23) {\n  if (n$$23.bound - d$$2 <= 0) {\n    return BigNatModule$$$zero;\n  } else {\n    const m$$1 = BigNatModule$$$createN(n$$23.bound - d$$2);\n\n    for (let i$$15 = 0; i$$15 <= m$$1.bound - 1; i$$15++) {\n      m$$1.digits[i$$15] = n$$23.digits[i$$15 + d$$2];\n    }\n\n    return m$$1;\n  }\n}\nexport function BigNatModule$$$degree(n$$24) {\n  return n$$24.bound - 1;\n}\nexport function BigNatModule$$$addP(i$$16, n$$25, c, p, q, r$$5) {\n  BigNatModule$$$addP: while (true) {\n    if (i$$16 < n$$25) {\n      const x$$32 = (i$$16 < p.bound ? p.digits[i$$16] : 0) + (i$$16 < q.bound ? q.digits[i$$16] : 0) + c | 0;\n      r$$5.digits[i$$16] = BigNatModule$$$modbase(x$$32);\n      const c$$1 = BigNatModule$$$divbase(x$$32) | 0;\n      const $i$$16$$16 = i$$16;\n      const $n$$25$$17 = n$$25;\n      const $p$$18 = p;\n      const $q$$19 = q;\n      const $r$$5$$20 = r$$5;\n      i$$16 = $i$$16$$16 + 1;\n      n$$25 = $n$$25$$17;\n      c = c$$1;\n      p = $p$$18;\n      q = $q$$19;\n      r$$5 = $r$$5$$20;\n      continue BigNatModule$$$addP;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$add(p$$1, q$$1) {\n  const rbound = 1 + BigNatModule$$$maxInt(p$$1.bound, q$$1.bound) | 0;\n  const r$$6 = BigNatModule$$$createN(rbound);\n  const carry = 0;\n  BigNatModule$$$addP(0, rbound, carry, p$$1, q$$1, r$$6);\n  return BigNatModule$$$normN(r$$6);\n}\nexport function BigNatModule$$$subP(i$$19, n$$26, c$$2, p$$2, q$$2, r$$7) {\n  BigNatModule$$$subP: while (true) {\n    if (i$$19 < n$$26) {\n      const x$$33 = (i$$19 < p$$2.bound ? p$$2.digits[i$$19] : 0) - (i$$19 < q$$2.bound ? q$$2.digits[i$$19] : 0) + c$$2 | 0;\n\n      if (x$$33 > 0) {\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$33);\n        const c$$3 = BigNatModule$$$divbase(x$$33) | 0;\n        const $i$$19$$21 = i$$19;\n        const $n$$26$$22 = n$$26;\n        const $p$$2$$23 = p$$2;\n        const $q$$2$$24 = q$$2;\n        const $r$$7$$25 = r$$7;\n        i$$19 = $i$$19$$21 + 1;\n        n$$26 = $n$$26$$22;\n        c$$2 = c$$3;\n        p$$2 = $p$$2$$23;\n        q$$2 = $q$$2$$24;\n        r$$7 = $r$$7$$25;\n        continue BigNatModule$$$subP;\n      } else {\n        const x$$34 = x$$33 + BigNatModule$$$baseN | 0;\n        r$$7.digits[i$$19] = BigNatModule$$$modbase(x$$34);\n        const c$$4 = BigNatModule$$$divbase(x$$34) - 1 | 0;\n        const $i$$19$$26 = i$$19;\n        const $n$$26$$27 = n$$26;\n        const $p$$2$$28 = p$$2;\n        const $q$$2$$29 = q$$2;\n        const $r$$7$$30 = r$$7;\n        i$$19 = $i$$19$$26 + 1;\n        n$$26 = $n$$26$$27;\n        c$$2 = c$$4;\n        p$$2 = $p$$2$$28;\n        q$$2 = $q$$2$$29;\n        r$$7 = $r$$7$$30;\n        continue BigNatModule$$$subP;\n      }\n    } else {\n      const underflow = c$$2 !== 0;\n      return underflow;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$sub(p$$3, q$$3) {\n  const rbound$$1 = BigNatModule$$$maxInt(p$$3.bound, q$$3.bound) | 0;\n  const r$$8 = BigNatModule$$$createN(rbound$$1);\n  const carry$$1 = 0;\n  const underflow$$1 = BigNatModule$$$subP(0, rbound$$1, carry$$1, p$$3, q$$3, r$$8);\n\n  if (underflow$$1) {\n    return BigNatModule$$$embed(0);\n  } else {\n    return BigNatModule$$$normN(r$$8);\n  }\n}\nexport function BigNatModule$$$isZero(p$$4) {\n  return p$$4.bound === 0;\n}\nexport function BigNatModule$$$IsZero(p$$5) {\n  return BigNatModule$$$isZero(p$$5);\n}\nexport function BigNatModule$$$isOne(p$$6) {\n  if (p$$6.bound === 1) {\n    return p$$6.digits[0] === 1;\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$equal(p$$7, q$$4) {\n  if (p$$7.bound === q$$4.bound) {\n    const check = function check(pa, qa, i$$22) {\n      check: while (true) {\n        if (i$$22 === -1) {\n          return true;\n        } else if (pa[i$$22] === qa[i$$22]) {\n          const $i$$22$$33 = i$$22;\n          const $pa$$31 = pa;\n          const $qa$$32 = qa;\n          pa = $pa$$31;\n          qa = $qa$$32;\n          i$$22 = $i$$22$$33 - 1;\n          continue check;\n        } else {\n          return false;\n        }\n\n        break;\n      }\n    };\n\n    return check(p$$7.digits, q$$4.digits, p$$7.bound - 1);\n  } else {\n    return false;\n  }\n}\nexport function BigNatModule$$$shiftCompare(p$$8, pn, q$$5, qn) {\n  if (p$$8.bound + pn < q$$5.bound + qn) {\n    return -1 | 0;\n  } else if (p$$8.bound + pn > q$$5.bound + pn) {\n    return 1;\n  } else {\n    const check$$1 = function check$$1(pa$$1, qa$$1, i$$23) {\n      check$$1: while (true) {\n        if (i$$23 === -1) {\n          return 0;\n        } else {\n          const pai = (i$$23 < pn ? 0 : pa$$1[i$$23 - pn]) | 0;\n          const qai = (i$$23 < qn ? 0 : qa$$1[i$$23 - qn]) | 0;\n\n          if (pai === qai) {\n            const $i$$23$$36 = i$$23;\n            const $pa$$1$$34 = pa$$1;\n            const $qa$$1$$35 = qa$$1;\n            pa$$1 = $pa$$1$$34;\n            qa$$1 = $qa$$1$$35;\n            i$$23 = $i$$23$$36 - 1;\n            continue check$$1;\n          } else if (pai < qai) {\n            return -1 | 0;\n          } else {\n            return 1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return check$$1(p$$8.digits, q$$5.digits, p$$8.bound + pn - 1) | 0;\n  }\n}\nexport function BigNatModule$$$compare(p$$9, q$$6) {\n  if (p$$9.bound < q$$6.bound) {\n    return -1 | 0;\n  } else if (p$$9.bound > q$$6.bound) {\n    return 1;\n  } else {\n    const check$$2 = function check$$2(pa$$2, qa$$2, i$$24) {\n      check$$2: while (true) {\n        if (i$$24 === -1) {\n          return 0;\n        } else if (pa$$2[i$$24] === qa$$2[i$$24]) {\n          const $i$$24$$39 = i$$24;\n          const $pa$$2$$37 = pa$$2;\n          const $qa$$2$$38 = qa$$2;\n          pa$$2 = $pa$$2$$37;\n          qa$$2 = $qa$$2$$38;\n          i$$24 = $i$$24$$39 - 1;\n          continue check$$2;\n        } else if (pa$$2[i$$24] < qa$$2[i$$24]) {\n          return -1 | 0;\n        } else {\n          return 1;\n        }\n\n        break;\n      }\n    };\n\n    return check$$2(p$$9.digits, q$$6.digits, p$$9.bound - 1) | 0;\n  }\n}\nexport function BigNatModule$$$lt(p$$10, q$$7) {\n  return BigNatModule$$$compare(p$$10, q$$7) === -1;\n}\nexport function BigNatModule$$$gt(p$$11, q$$8) {\n  return BigNatModule$$$compare(p$$11, q$$8) === 1;\n}\nexport function BigNatModule$$$lte(p$$12, q$$9) {\n  return BigNatModule$$$compare(p$$12, q$$9) !== 1;\n}\nexport function BigNatModule$$$gte(p$$13, q$$10) {\n  return BigNatModule$$$compare(p$$13, q$$10) !== -1;\n}\nexport function BigNatModule$$$min(a$$2, b$$5) {\n  if (BigNatModule$$$lt(a$$2, b$$5)) {\n    return a$$2;\n  } else {\n    return b$$5;\n  }\n}\nexport function BigNatModule$$$max(a$$3, b$$6) {\n  if (BigNatModule$$$lt(a$$3, b$$6)) {\n    return b$$6;\n  } else {\n    return a$$3;\n  }\n}\nexport function BigNatModule$$$contributeArr(a$$4, i$$25, c$$5) {\n  BigNatModule$$$contributeArr: while (true) {\n    const x$$35 = op_Addition(fromInteger(a$$4[i$$25], false, 2), c$$5);\n    const c$$6 = op_Division(x$$35, BigNatModule$$$baseNi64);\n    const x$$38 = ~~toInt(op_BitwiseAnd(x$$35, BigNatModule$$$baseMaski64)) | 0;\n    a$$4[i$$25] = x$$38;\n\n    if (compare(c$$6, fromBits(0, 0, false)) > 0) {\n      const $a$$4$$40 = a$$4;\n      const $i$$25$$41 = i$$25;\n      a$$4 = $a$$4$$40;\n      i$$25 = $i$$25$$41 + 1;\n      c$$5 = c$$6;\n      continue BigNatModule$$$contributeArr;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$scale(k$$2, p$$14) {\n  const rbound$$2 = p$$14.bound + BigNatModule$$$boundInt | 0;\n  const r$$9 = BigNatModule$$$createN(rbound$$2);\n  const k$$3 = fromInteger(k$$2, false, 2);\n\n  for (let i$$26 = 0; i$$26 <= p$$14.bound - 1; i$$26++) {\n    const kpi = op_Multiply(k$$3, fromInteger(p$$14.digits[i$$26], false, 2));\n    BigNatModule$$$contributeArr(r$$9.digits, i$$26, kpi);\n  }\n\n  return BigNatModule$$$normN(r$$9);\n}\nexport function BigNatModule$$$mulSchoolBookBothSmall(p$$15, q$$11) {\n  const r$$11 = BigNatModule$$$createN(2);\n  const rak = op_Multiply(fromInteger(p$$15, false, 2), fromInteger(q$$11, false, 2));\n  BigNatModule$$$setCoeff(r$$11, 0, ~~toInt(op_BitwiseAnd(rak, BigNatModule$$$baseMaski64)));\n  BigNatModule$$$setCoeff(r$$11, 1, ~~toInt(op_Division(rak, BigNatModule$$$baseNi64)));\n  return BigNatModule$$$normN(r$$11);\n}\nexport function BigNatModule$$$mulSchoolBookCarry(r$$12, c$$8, k$$4) {\n  BigNatModule$$$mulSchoolBookCarry: while (true) {\n    if (compare(c$$8, fromBits(0, 0, false)) > 0) {\n      const rak$$1 = op_Addition(BigNatModule$$$coeff64(r$$12, k$$4), c$$8);\n      BigNatModule$$$setCoeff(r$$12, k$$4, ~~toInt(op_BitwiseAnd(rak$$1, BigNatModule$$$baseMaski64)));\n      const $k$$4$$43 = k$$4;\n      const $r$$12$$42 = r$$12;\n      r$$12 = $r$$12$$42;\n      c$$8 = op_Division(rak$$1, BigNatModule$$$baseNi64);\n      k$$4 = $k$$4$$43 + 1;\n      continue BigNatModule$$$mulSchoolBookCarry;\n    }\n\n    break;\n  }\n}\nexport function BigNatModule$$$mulSchoolBookOneSmall(p$$16, q$$12) {\n  const bp = BigNatModule$$$bound(p$$16) | 0;\n  const rbound$$3 = bp + 1 | 0;\n  const r$$13 = BigNatModule$$$createN(rbound$$3);\n  const q$$13 = fromInteger(q$$12, false, 2);\n  let c$$9 = fromBits(0, 0, false);\n\n  for (let i$$28 = 0; i$$28 <= bp - 1; i$$28++) {\n    const rak$$2 = op_Addition(op_Addition(c$$9, BigNatModule$$$coeff64(r$$13, i$$28)), op_Multiply(BigNatModule$$$coeff64(p$$16, i$$28), q$$13));\n    BigNatModule$$$setCoeff(r$$13, i$$28, ~~toInt(op_BitwiseAnd(rak$$2, BigNatModule$$$baseMaski64)));\n    c$$9 = op_Division(rak$$2, BigNatModule$$$baseNi64);\n  }\n\n  BigNatModule$$$mulSchoolBookCarry(r$$13, c$$9, bp);\n  return BigNatModule$$$normN(r$$13);\n}\nexport function BigNatModule$$$mulSchoolBookNeitherSmall(p$$17, q$$14) {\n  const rbound$$4 = p$$17.bound + q$$14.bound | 0;\n  const r$$14 = BigNatModule$$$createN(rbound$$4);\n  const ra = r$$14.digits;\n  const pa$$3 = p$$17.digits;\n  const qa$$3 = q$$14.digits;\n\n  for (let i$$29 = 0; i$$29 <= p$$17.bound - 1; i$$29++) {\n    const pai$$1 = fromInteger(pa$$3[i$$29], false, 2);\n    let c$$10 = fromBits(0, 0, false);\n    let k$$5 = i$$29 | 0;\n\n    for (let j$$1 = 0; j$$1 <= q$$14.bound - 1; j$$1++) {\n      const qaj = fromInteger(qa$$3[j$$1], false, 2);\n      const rak$$3 = op_Addition(op_Addition(fromInteger(ra[k$$5], false, 2), c$$10), op_Multiply(pai$$1, qaj));\n      ra[k$$5] = ~~toInt(op_BitwiseAnd(rak$$3, BigNatModule$$$baseMaski64));\n      c$$10 = op_Division(rak$$3, BigNatModule$$$baseNi64);\n      k$$5 = k$$5 + 1;\n    }\n\n    BigNatModule$$$mulSchoolBookCarry(r$$14, c$$10, k$$5);\n  }\n\n  return BigNatModule$$$normN(r$$14);\n}\nexport function BigNatModule$$$mulSchoolBook(p$$18, q$$15) {\n  const pSmall = BigNatModule$$$bound(p$$18) === 1;\n  const qSmall = BigNatModule$$$bound(q$$15) === 1;\n\n  if (pSmall ? qSmall : false) {\n    return BigNatModule$$$mulSchoolBookBothSmall(BigNatModule$$$coeff(p$$18, 0), BigNatModule$$$coeff(q$$15, 0));\n  } else if (pSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(q$$15, BigNatModule$$$coeff(p$$18, 0));\n  } else if (qSmall) {\n    return BigNatModule$$$mulSchoolBookOneSmall(p$$18, BigNatModule$$$coeff(q$$15, 0));\n  } else {\n    return BigNatModule$$$mulSchoolBookNeitherSmall(p$$18, q$$15);\n  }\n}\nexport const BigNatModule$002Eencoding = declare(function BigInt_BigNatModule_encoding(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n  this.bigL = arg1 | 0;\n  this.twoToBigL = arg2 | 0;\n  this.k = arg3 | 0;\n  this.bigK = arg4 | 0;\n  this.bigN = arg5 | 0;\n  this.split = arg6 | 0;\n  this.splits = arg7;\n}, Record);\nexport function BigNatModule$002Eencoding$reflection() {\n  return record(\"BigInt.BigNatModule.encoding\", [], BigNatModule$002Eencoding, () => [[\"bigL\", int32], [\"twoToBigL\", int32], [\"k\", int32], [\"bigK\", int32], [\"bigN\", int32], [\"split\", int32], [\"splits\", array(int32)]]);\n}\nexport function BigNatModule$$$mkEncoding(bigL, k$$6, bigK$$2, bigN) {\n  return new BigNatModule$002Eencoding(bigL, BigNatModule$$$pow32(2, bigL), k$$6, bigK$$2, bigN, ~~(BigNatModule$$$baseBits / bigL), initialize(~~(BigNatModule$$$baseBits / bigL), function (i$$30) {\n    return BigNatModule$$$pow32(2, bigL * i$$30);\n  }, Int32Array));\n}\nexport const BigNatModule$$$table = [BigNatModule$$$mkEncoding(1, 28, 268435456, 268435456), BigNatModule$$$mkEncoding(2, 26, 67108864, 134217728), BigNatModule$$$mkEncoding(3, 24, 16777216, 50331648), BigNatModule$$$mkEncoding(4, 22, 4194304, 16777216), BigNatModule$$$mkEncoding(5, 20, 1048576, 5242880), BigNatModule$$$mkEncoding(6, 18, 262144, 1572864), BigNatModule$$$mkEncoding(7, 16, 65536, 458752), BigNatModule$$$mkEncoding(8, 14, 16384, 131072), BigNatModule$$$mkEncoding(9, 12, 4096, 36864), BigNatModule$$$mkEncoding(10, 10, 1024, 10240), BigNatModule$$$mkEncoding(11, 8, 256, 2816), BigNatModule$$$mkEncoding(12, 6, 64, 768), BigNatModule$$$mkEncoding(13, 4, 16, 208)];\nexport function BigNatModule$$$calculateTableTow(bigL$$1) {\n  const k$$7 = BigNatModule$002EFFT$$$maxBitsInsideFp - 2 * bigL$$1 | 0;\n  const bigK$$3 = BigNatModule$$$pow64(fromBits(2, 0, false), k$$7);\n  const N = op_Multiply(bigK$$3, fromInteger(bigL$$1, false, 2));\n  return [bigL$$1, k$$7, bigK$$3, N];\n}\nexport function BigNatModule$$$encodingGivenResultBits(bitsRes) {\n  const selectFrom = function selectFrom(i$$31) {\n    selectFrom: while (true) {\n      if (i$$31 + 1 < BigNatModule$$$table.length ? bitsRes < BigNatModule$$$table[i$$31 + 1].bigN : false) {\n        const $i$$31$$44 = i$$31;\n        i$$31 = $i$$31$$44 + 1;\n        continue selectFrom;\n      } else {\n        return BigNatModule$$$table[i$$31];\n      }\n\n      break;\n    }\n  };\n\n  if (bitsRes >= BigNatModule$$$table[0].bigN) {\n    throw new Error(\"Product is huge, around 268435456 bits, beyond quickmul\");\n  } else {\n    return selectFrom(0);\n  }\n}\nexport const BigNatModule$$$bitmask = initialize(BigNatModule$$$baseBits, function (i$$32) {\n  return BigNatModule$$$pow32(2, i$$32) - 1;\n}, Int32Array);\nexport const BigNatModule$$$twopowers = initialize(BigNatModule$$$baseBits, function (i$$33) {\n  return BigNatModule$$$pow32(2, i$$33);\n}, Int32Array);\nexport const BigNatModule$$$twopowersI64 = initialize(BigNatModule$$$baseBits, function (i$$34) {\n  return BigNatModule$$$pow64(fromBits(2, 0, false), i$$34);\n}, Array);\nexport function BigNatModule$$$wordBits(word) {\n  const hi = function hi(k$$8) {\n    hi: while (true) {\n      if (k$$8 === 0) {\n        return 0;\n      } else if ((word & BigNatModule$$$twopowers[k$$8 - 1]) !== 0) {\n        return k$$8 | 0;\n      } else {\n        const $k$$8$$45 = k$$8;\n        k$$8 = $k$$8$$45 - 1;\n        continue hi;\n      }\n\n      break;\n    }\n  };\n\n  return hi(BigNatModule$$$baseBits) | 0;\n}\nexport function BigNatModule$$$bits(u$$6) {\n  if (u$$6.bound === 0) {\n    return 0;\n  } else {\n    return BigNatModule$$$degree(u$$6) * BigNatModule$$$baseBits + BigNatModule$$$wordBits(u$$6.digits[BigNatModule$$$degree(u$$6)]) | 0;\n  }\n}\nexport function BigNatModule$$$extractBits(n$$27, enc, bi) {\n  const bj = bi + enc.bigL - 1 | 0;\n  const biw = ~~(bi / BigNatModule$$$baseBits) | 0;\n  const bjw = ~~(bj / BigNatModule$$$baseBits) | 0;\n\n  if (biw !== bjw) {\n    const x$$47 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const y$$17 = (bjw < n$$27.bound ? n$$27.digits[bjw] : 0) | 0;\n    const xbit = bi % BigNatModule$$$baseBits | 0;\n    const nxbits = BigNatModule$$$baseBits - xbit | 0;\n    const x$$48 = x$$47 >> xbit | 0;\n    const y$$18 = y$$17 << nxbits | 0;\n    const x$$49 = x$$48 | y$$18 | 0;\n    const x$$50 = x$$49 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$50 | 0;\n  } else {\n    const x$$51 = (biw < n$$27.bound ? n$$27.digits[biw] : 0) | 0;\n    const xbit$$1 = bi % BigNatModule$$$baseBits | 0;\n    const x$$52 = x$$51 >> xbit$$1 | 0;\n    const x$$53 = x$$52 & BigNatModule$$$bitmask[enc.bigL] | 0;\n    return x$$53 | 0;\n  }\n}\nexport function BigNatModule$$$encodePoly(enc$$1, n$$28) {\n  const poly = fill(new Uint32Array(enc$$1.bigK), 0, enc$$1.bigK, BigNatModule$002EFFT$002EFp$$$ofInt32(0));\n  const biMax = n$$28.bound * BigNatModule$$$baseBits | 0;\n\n  const encoder = function encoder(i$$38, bi$$1) {\n    encoder: while (true) {\n      if (i$$38 === enc$$1.bigK ? true : bi$$1 > biMax) {} else {\n        const pi = BigNatModule$$$extractBits(n$$28, enc$$1, bi$$1) | 0;\n        poly[i$$38] = BigNatModule$002EFFT$002EFp$$$ofInt32(pi);\n        const i$$39 = i$$38 + 1 | 0;\n        const bi$$2 = bi$$1 + enc$$1.bigL | 0;\n        i$$38 = i$$39;\n        bi$$1 = bi$$2;\n        continue encoder;\n      }\n\n      break;\n    }\n  };\n\n  encoder(0, 0);\n  return poly;\n}\nexport function BigNatModule$$$decodeResultBits(enc$$2, poly$$1) {\n  let n$$29 = 0;\n\n  for (let i$$40 = 0; i$$40 <= poly$$1.length - 1; i$$40++) {\n    if (poly$$1[i$$40] !== BigNatModule$002EFFT$$$mzero) {\n      n$$29 = i$$40;\n    }\n  }\n\n  const rbits = BigNatModule$002EFFT$$$maxBitsInsideFp + enc$$2.bigL * n$$29 + 1 | 0;\n  return rbits + 1 | 0;\n}\nexport function BigNatModule$$$decodePoly(enc$$3, poly$$2) {\n  const rbound$$5 = ~~(BigNatModule$$$decodeResultBits(enc$$3, poly$$2) / BigNatModule$$$baseBits) + 1 | 0;\n  const r$$15 = BigNatModule$$$createN(rbound$$5);\n\n  const evaluate = function evaluate(i$$41, j$$2, d$$3) {\n    evaluate: while (true) {\n      if (i$$41 === enc$$3.bigK) {} else {\n        if (j$$2 >= rbound$$5) {} else {\n          const x$$54 = op_Multiply(fromInteger(BigNatModule$002EFFT$002EFp$$$toInt(poly$$2[i$$41]), false, 2), BigNatModule$$$twopowersI64[d$$3]);\n          BigNatModule$$$contributeArr(r$$15.digits, j$$2, x$$54);\n        }\n\n        const i$$43 = i$$41 + 1 | 0;\n        const d$$4 = d$$3 + enc$$3.bigL | 0;\n        const patternInput$$1 = d$$4 >= BigNatModule$$$baseBits ? [j$$2 + 1, d$$4 - BigNatModule$$$baseBits] : [j$$2, d$$4];\n        i$$41 = i$$43;\n        j$$2 = patternInput$$1[0];\n        d$$3 = patternInput$$1[1];\n        continue evaluate;\n      }\n\n      break;\n    }\n  };\n\n  evaluate(0, 0, 0);\n  return BigNatModule$$$normN(r$$15);\n}\nexport function BigNatModule$$$quickMulUsingFft(u$$7, v$$5) {\n  const bitsRes$$1 = BigNatModule$$$bits(u$$7) + BigNatModule$$$bits(v$$5) | 0;\n  const enc$$4 = BigNatModule$$$encodingGivenResultBits(bitsRes$$1);\n  const upoly = BigNatModule$$$encodePoly(enc$$4, u$$7);\n  const vpoly = BigNatModule$$$encodePoly(enc$$4, v$$5);\n  const rpoly = BigNatModule$002EFFT$$$computeFftPaddedPolynomialProduct(enc$$4.bigK, enc$$4.k, upoly, vpoly);\n  const r$$17 = BigNatModule$$$decodePoly(enc$$4, rpoly);\n  return BigNatModule$$$normN(r$$17);\n}\nexport const BigNatModule$$$minDigitsKaratsuba = 16;\nexport function BigNatModule$$$recMulKaratsuba(mul, p$$19, q$$16) {\n  const bp$$1 = p$$19.bound | 0;\n  const bq = q$$16.bound | 0;\n  const bmax = BigNatModule$$$maxInt(bp$$1, bq) | 0;\n\n  if (bmax > BigNatModule$$$minDigitsKaratsuba) {\n    const k$$9 = ~~(bmax / 2) | 0;\n    const a0 = BigNatModule$$$restrictTo(k$$9, p$$19);\n    const a1 = BigNatModule$$$shiftDown(k$$9, p$$19);\n    const b0 = BigNatModule$$$restrictTo(k$$9, q$$16);\n    const b1 = BigNatModule$$$shiftDown(k$$9, q$$16);\n    const q0 = mul(a0, b0);\n    const q1 = mul(BigNatModule$$$add(a0, a1), BigNatModule$$$add(b0, b1));\n    const q2 = mul(a1, b1);\n    const p0 = q0;\n    const p1 = BigNatModule$$$sub(q1, BigNatModule$$$add(q0, q2));\n    const p2 = q2;\n    const r$$18 = BigNatModule$$$add(p0, BigNatModule$$$shiftUp(k$$9, BigNatModule$$$add(p1, BigNatModule$$$shiftUp(k$$9, p2))));\n    return r$$18;\n  } else {\n    return BigNatModule$$$mulSchoolBook(p$$19, q$$16);\n  }\n}\nexport function BigNatModule$$$mulKaratsuba(x$$55, y$$19) {\n  return BigNatModule$$$recMulKaratsuba(BigNatModule$$$mulKaratsuba, x$$55, y$$19);\n}\nexport const BigNatModule$$$productDigitsUpperSchoolBook = ~~(64000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$singleDigitForceSchoolBook = ~~(32000 / BigNatModule$$$baseBits);\nexport const BigNatModule$$$productDigitsUpperFft = ~~(BigNatModule$$$table[0].bigN / BigNatModule$$$baseBits);\nexport function BigNatModule$$$mul(p$$20, q$$17) {\n  return BigNatModule$$$mulSchoolBook(p$$20, q$$17);\n}\nexport function BigNatModule$$$scaleSubInPlace(x$$57, f, a$$5, n$$30) {\n  const invariant = function invariant(tupledArg) {};\n\n  const xres = x$$57;\n  const patternInput$$2 = [x$$57.digits, BigNatModule$$$degree(x$$57)];\n  const patternInput$$3 = [a$$5.digits, BigNatModule$$$degree(a$$5)];\n  const f$$1 = fromInteger(f, false, 2);\n  let j$$4 = 0;\n  let z$$7 = op_Multiply(f$$1, fromInteger(patternInput$$3[0][0], false, 2));\n\n  while (compare(z$$7, fromBits(0, 0, false)) > 0 ? true : j$$4 < patternInput$$3[1]) {\n    if (j$$4 > patternInput$$2[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n\n    invariant([z$$7, j$$4, n$$30]);\n    let zLo = ~~toInt(op_BitwiseAnd(z$$7, BigNatModule$$$baseMaski64)) | 0;\n    let zHi = op_Division(z$$7, BigNatModule$$$baseNi64);\n\n    if (zLo <= patternInput$$2[0][j$$4 + n$$30]) {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] - zLo;\n    } else {\n      patternInput$$2[0][j$$4 + n$$30] = patternInput$$2[0][j$$4 + n$$30] + (BigNatModule$$$baseN - zLo);\n      zHi = op_Addition(zHi, fromBits(1, 0, false));\n    }\n\n    if (j$$4 < patternInput$$3[1]) {\n      z$$7 = op_Addition(zHi, op_Multiply(f$$1, fromInteger(patternInput$$3[0][j$$4 + 1], false, 2)));\n    } else {\n      z$$7 = zHi;\n    }\n\n    j$$4 = j$$4 + 1;\n  }\n\n  BigNatModule$$$normN(xres);\n}\nexport function BigNatModule$$$scaleSub(x$$61, f$$2, a$$7, n$$31) {\n  const freshx = BigNatModule$$$add(x$$61, BigNatModule$$$zero);\n  BigNatModule$$$scaleSubInPlace(freshx, f$$2, a$$7, n$$31);\n  return BigNatModule$$$normN(freshx);\n}\nexport function BigNatModule$$$scaleAddInPlace(x$$62, f$$3, a$$8, n$$32) {\n  const invariant$$1 = function invariant$$1(tupledArg$$1) {};\n\n  const xres$$1 = x$$62;\n  const patternInput$$4 = [x$$62.digits, BigNatModule$$$degree(x$$62)];\n  const patternInput$$5 = [a$$8.digits, BigNatModule$$$degree(a$$8)];\n  const f$$4 = fromInteger(f$$3, false, 2);\n  let j$$5 = 0;\n  let z$$8 = op_Multiply(f$$4, fromInteger(patternInput$$5[0][0], false, 2));\n\n  while (compare(z$$8, fromBits(0, 0, false)) > 0 ? true : j$$5 < patternInput$$5[1]) {\n    if (j$$5 > patternInput$$4[1]) {\n      throw new Error(\"scaleSubInPlace: pre-condition did not apply, result would be -ve\");\n    }\n\n    invariant$$1([z$$8, j$$5, n$$32]);\n    let zLo$$1 = ~~toInt(op_BitwiseAnd(z$$8, BigNatModule$$$baseMaski64)) | 0;\n    let zHi$$1 = op_Division(z$$8, BigNatModule$$$baseNi64);\n\n    if (zLo$$1 < BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]) {\n      patternInput$$4[0][j$$5 + n$$32] = patternInput$$4[0][j$$5 + n$$32] + zLo$$1;\n    } else {\n      patternInput$$4[0][j$$5 + n$$32] = zLo$$1 - (BigNatModule$$$baseN - patternInput$$4[0][j$$5 + n$$32]);\n      zHi$$1 = op_Addition(zHi$$1, fromBits(1, 0, false));\n    }\n\n    if (j$$5 < patternInput$$5[1]) {\n      z$$8 = op_Addition(zHi$$1, op_Multiply(f$$4, fromInteger(patternInput$$5[0][j$$5 + 1], false, 2)));\n    } else {\n      z$$8 = zHi$$1;\n    }\n\n    j$$5 = j$$5 + 1;\n  }\n\n  BigNatModule$$$normN(xres$$1);\n}\nexport function BigNatModule$$$scaleAdd(x$$66, f$$5, a$$10, n$$33) {\n  const freshx$$1 = BigNatModule$$$add(x$$66, BigNatModule$$$zero);\n  BigNatModule$$$scaleAddInPlace(freshx$$1, f$$5, a$$10, n$$33);\n  return BigNatModule$$$normN(freshx$$1);\n}\nexport function BigNatModule$$$removeFactor(x$$67, a$$11, n$$34) {\n  const patternInput$$6 = [BigNatModule$$$degree(a$$11), BigNatModule$$$degree(x$$67)];\n\n  if (patternInput$$6[1] < patternInput$$6[0] + n$$34) {\n    return 0;\n  } else {\n    const patternInput$$7 = [a$$11.digits, x$$67.digits];\n    let f$$6;\n\n    if (patternInput$$6[0] === 0) {\n      if (patternInput$$6[1] === n$$34) {\n        f$$6 = ~~(patternInput$$7[1][n$$34] / patternInput$$7[0][0]);\n      } else {\n        const f64 = op_Division(op_Addition(op_Multiply(fromInteger(patternInput$$7[1][patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(patternInput$$7[1][patternInput$$6[1] - 1], false, 2)), fromInteger(patternInput$$7[0][0], false, 2));\n        f$$6 = ~~toInt(f64);\n      }\n    } else if (patternInput$$6[1] === patternInput$$6[0] + n$$34) {\n      f$$6 = ~~(patternInput$$7[1][patternInput$$6[1]] / (patternInput$$7[0][patternInput$$6[0]] + 1));\n    } else {\n      const f64$$1 = op_Division(op_Addition(op_Multiply(fromInteger(patternInput$$7[1][patternInput$$6[1]], false, 2), BigNatModule$$$baseNi64), fromInteger(patternInput$$7[1][patternInput$$6[1] - 1], false, 2)), op_Addition(fromInteger(patternInput$$7[0][patternInput$$6[0]], false, 2), fromBits(1, 0, false)));\n      f$$6 = ~~toInt(f64$$1);\n    }\n\n    if (f$$6 === 0) {\n      const lte = BigNatModule$$$shiftCompare(a$$11, n$$34, x$$67, 0) !== 1;\n\n      if (lte) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else {\n      return f$$6 | 0;\n    }\n  }\n}\nexport function BigNatModule$$$divmod(b$$7, a$$12) {\n  if (BigNatModule$$$isZero(a$$12)) {\n    throw new Error();\n  } else if (BigNatModule$$$degree(b$$7) < BigNatModule$$$degree(a$$12)) {\n    return [BigNatModule$$$zero, b$$7];\n  } else {\n    const x$$68 = BigNatModule$$$copyN(b$$7);\n    const d$$6 = BigNatModule$$$createN(BigNatModule$$$degree(b$$7) - BigNatModule$$$degree(a$$12) + 1 + 1);\n    let p$$21 = BigNatModule$$$degree(b$$7) | 0;\n    const m$$2 = BigNatModule$$$degree(a$$12) | 0;\n    let n$$35 = p$$21 - m$$2 | 0;\n\n    const Invariant = function Invariant(tupledArg$$2) {};\n\n    let finished = false;\n\n    while (!finished) {\n      Invariant([d$$6, x$$68, n$$35, p$$21]);\n      const f$$7 = BigNatModule$$$removeFactor(x$$68, a$$12, n$$35) | 0;\n\n      if (f$$7 > 0) {\n        BigNatModule$$$scaleSubInPlace(x$$68, f$$7, a$$12, n$$35);\n        BigNatModule$$$scaleAddInPlace(d$$6, f$$7, BigNatModule$$$one, n$$35);\n        Invariant([d$$6, x$$68, n$$35, p$$21]);\n      } else {\n        finished = f$$7 === 0 ? n$$35 === 0 : false;\n\n        if (!finished) {\n          if (p$$21 === m$$2 + n$$35) {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21]);\n            n$$35 = n$$35 - 1;\n          } else {\n            Invariant([d$$6, x$$68, n$$35 - 1, p$$21 - 1]);\n            n$$35 = n$$35 - 1;\n            p$$21 = p$$21 - 1;\n          }\n        }\n      }\n    }\n\n    return [BigNatModule$$$normN(d$$6), BigNatModule$$$normN(x$$68)];\n  }\n}\nexport function BigNatModule$$$div(b$$8, a$$13) {\n  return BigNatModule$$$divmod(b$$8, a$$13)[0];\n}\nexport function BigNatModule$$$rem(b$$9, a$$14) {\n  return BigNatModule$$$divmod(b$$9, a$$14)[1];\n}\nexport function BigNatModule$$$bitAnd(a$$15, b$$10) {\n  const rbound$$6 = BigNatModule$$$minInt(a$$15.bound, b$$10.bound) | 0;\n  const r$$19 = BigNatModule$$$createN(rbound$$6);\n\n  for (let i$$44 = 0; i$$44 <= r$$19.bound - 1; i$$44++) {\n    r$$19.digits[i$$44] = a$$15.digits[i$$44] & b$$10.digits[i$$44];\n  }\n\n  return BigNatModule$$$normN(r$$19);\n}\nexport function BigNatModule$$$bitOr(a$$16, b$$11) {\n  const rbound$$7 = BigNatModule$$$maxInt(a$$16.bound, b$$11.bound) | 0;\n  const r$$20 = BigNatModule$$$createN(rbound$$7);\n\n  for (let i$$45 = 0; i$$45 <= a$$16.bound - 1; i$$45++) {\n    r$$20.digits[i$$45] = r$$20.digits[i$$45] | a$$16.digits[i$$45];\n  }\n\n  for (let i$$46 = 0; i$$46 <= b$$11.bound - 1; i$$46++) {\n    r$$20.digits[i$$46] = r$$20.digits[i$$46] | b$$11.digits[i$$46];\n  }\n\n  return BigNatModule$$$normN(r$$20);\n}\nexport function BigNatModule$$$bitXor(a$$17, b$$12) {\n  const rbound$$8 = BigNatModule$$$maxInt(a$$17.bound, b$$12.bound) | 0;\n  const r$$21 = BigNatModule$$$createN(rbound$$8);\n\n  for (let i$$47 = 0; i$$47 <= a$$17.bound - 1; i$$47++) {\n    r$$21.digits[i$$47] = r$$21.digits[i$$47] ^ a$$17.digits[i$$47];\n  }\n\n  for (let i$$48 = 0; i$$48 <= b$$12.bound - 1; i$$48++) {\n    r$$21.digits[i$$48] = r$$21.digits[i$$48] ^ b$$12.digits[i$$48];\n  }\n\n  return BigNatModule$$$normN(r$$21);\n}\nexport function BigNatModule$$$hcf(a$$18, b$$13) {\n  const hcfloop = function hcfloop(a$$19, b$$14) {\n    hcfloop: while (true) {\n      if (BigNatModule$$$equal(BigNatModule$$$zero, a$$19)) {\n        return b$$14;\n      } else {\n        const patternInput$$8 = BigNatModule$$$divmod(b$$14, a$$19);\n        const $a$$19$$49 = a$$19;\n        a$$19 = patternInput$$8[1];\n        b$$14 = $a$$19$$49;\n        continue hcfloop;\n      }\n\n      break;\n    }\n  };\n\n  if (BigNatModule$$$lt(a$$18, b$$13)) {\n    return hcfloop(a$$18, b$$13);\n  } else {\n    return hcfloop(b$$13, a$$18);\n  }\n}\nexport const BigNatModule$$$two = BigNatModule$$$embed(2);\nexport function BigNatModule$$$powi(x$$69, n$$36) {\n  const power = function power(acc$$2, x$$70, n$$37) {\n    power: while (true) {\n      if (n$$37 === 0) {\n        return acc$$2;\n      } else if (n$$37 % 2 === 0) {\n        const $acc$$2$$50 = acc$$2;\n        const $n$$37$$52 = n$$37;\n        const $x$$70$$51 = x$$70;\n        acc$$2 = $acc$$2$$50;\n        x$$70 = BigNatModule$$$mul($x$$70$$51, $x$$70$$51);\n        n$$37 = ~~($n$$37$$52 / 2);\n        continue power;\n      } else {\n        const $acc$$2$$53 = acc$$2;\n        const $n$$37$$55 = n$$37;\n        const $x$$70$$54 = x$$70;\n        acc$$2 = BigNatModule$$$mul($x$$70$$54, $acc$$2$$53);\n        x$$70 = BigNatModule$$$mul($x$$70$$54, $x$$70$$54);\n        n$$37 = ~~($n$$37$$55 / 2);\n        continue power;\n      }\n\n      break;\n    }\n  };\n\n  return power(BigNatModule$$$one, x$$69, n$$36);\n}\nexport function BigNatModule$$$pow(x$$71, n$$38) {\n  const power$$1 = function power$$1(acc$$3, x$$72, n$$39) {\n    power$$1: while (true) {\n      if (BigNatModule$$$isZero(n$$39)) {\n        return acc$$3;\n      } else {\n        const patternInput$$9 = BigNatModule$$$divmod(n$$39, BigNatModule$$$two);\n\n        if (BigNatModule$$$isZero(patternInput$$9[1])) {\n          const $acc$$3$$56 = acc$$3;\n          const $x$$72$$57 = x$$72;\n          acc$$3 = $acc$$3$$56;\n          x$$72 = BigNatModule$$$mul($x$$72$$57, $x$$72$$57);\n          n$$39 = patternInput$$9[0];\n          continue power$$1;\n        } else {\n          const $acc$$3$$58 = acc$$3;\n          const $x$$72$$59 = x$$72;\n          acc$$3 = BigNatModule$$$mul($x$$72$$59, $acc$$3$$58);\n          x$$72 = BigNatModule$$$mul($x$$72$$59, $x$$72$$59);\n          n$$39 = patternInput$$9[0];\n          continue power$$1;\n        }\n      }\n\n      break;\n    }\n  };\n\n  return power$$1(BigNatModule$$$one, x$$71, n$$38);\n}\nexport function BigNatModule$$$toFloat(n$$40) {\n  const basef = BigNatModule$$$baseN;\n\n  const evalFloat = function evalFloat(acc$$4, k$$10, i$$49) {\n    evalFloat: while (true) {\n      if (i$$49 === n$$40.bound) {\n        return acc$$4;\n      } else {\n        const $acc$$4$$60 = acc$$4;\n        const $i$$49$$62 = i$$49;\n        const $k$$10$$61 = k$$10;\n        acc$$4 = $acc$$4$$60 + $k$$10$$61 * n$$40.digits[$i$$49$$62];\n        k$$10 = $k$$10$$61 * basef;\n        i$$49 = $i$$49$$62 + 1;\n        continue evalFloat;\n      }\n\n      break;\n    }\n  };\n\n  return evalFloat(0, 1, 0);\n}\nexport function BigNatModule$$$ofInt32(n$$41) {\n  return BigNatModule$$$embed(n$$41);\n}\nexport function BigNatModule$$$ofInt64(n$$42) {\n  return BigNatModule$$$embed64(n$$42);\n}\nexport function BigNatModule$$$toUInt32(n$$43) {\n  const matchValue = n$$43.bound | 0;\n\n  switch (matchValue) {\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return n$$43.digits[0] >>> 0;\n      }\n\n    case 2:\n      {\n        const patternInput$$10 = [n$$43.digits[0], n$$43.digits[1]];\n\n        if (patternInput$$10[1] > BigNatModule$$$baseMask32B) {\n          throw new Error();\n        }\n\n        return ((patternInput$$10[0] & BigNatModule$$$baseMask32A) >>> 0) + ((patternInput$$10[1] & BigNatModule$$$baseMask32B) >>> 0 << BigNatModule$$$baseShift32B >>> 0);\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toUInt64(n$$44) {\n  const matchValue$$1 = n$$44.bound | 0;\n\n  switch (matchValue$$1) {\n    case 0:\n      {\n        return fromBits(0, 0, true);\n      }\n\n    case 1:\n      {\n        return fromInteger(n$$44.digits[0], true, 2);\n      }\n\n    case 2:\n      {\n        const patternInput$$11 = [n$$44.digits[0], n$$44.digits[1]];\n        return op_Addition(fromInteger(patternInput$$11[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$11[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B));\n      }\n\n    case 3:\n      {\n        const patternInput$$12 = [n$$44.digits[0], n$$44.digits[1], n$$44.digits[2]];\n\n        if (patternInput$$12[2] > BigNatModule$$$baseMask64C) {\n          throw new Error();\n        }\n\n        return op_Addition(op_Addition(fromInteger(patternInput$$12[0] & BigNatModule$$$baseMask64A, true, 2), op_LeftShift(fromInteger(patternInput$$12[1] & BigNatModule$$$baseMask64B, true, 2), BigNatModule$$$baseShift64B)), op_LeftShift(fromInteger(patternInput$$12[2] & BigNatModule$$$baseMask64C, true, 2), BigNatModule$$$baseShift64C));\n      }\n\n    default:\n      {\n        throw new Error();\n      }\n  }\n}\nexport function BigNatModule$$$toString(n$$45) {\n  const degn = BigNatModule$$$degree(n$$45) | 0;\n\n  const route = function route(prior, k$$11, ten2k) {\n    route: while (true) {\n      if (BigNatModule$$$degree(ten2k) > degn) {\n        return new List([k$$11, ten2k], prior);\n      } else {\n        const $k$$11$$64 = k$$11;\n        const $prior$$63 = prior;\n        const $ten2k$$65 = ten2k;\n        prior = new List([$k$$11$$64, $ten2k$$65], $prior$$63);\n        k$$11 = $k$$11$$64 + 1;\n        ten2k = BigNatModule$$$mul($ten2k$$65, $ten2k$$65);\n        continue route;\n      }\n\n      break;\n    }\n  };\n\n  const kten2ks = route(new List(), 0, BigNatModule$$$embed(10));\n\n  const collect = function collect(isLeading, digits, n$$46, _arg1$$3) {\n    if (_arg1$$3.tail != null) {\n      const ten2k$$1 = _arg1$$3.head[1];\n      const prior$$1 = _arg1$$3.tail;\n      const patternInput$$13 = BigNatModule$$$divmod(n$$46, ten2k$$1);\n\n      if (isLeading ? BigNatModule$$$isZero(patternInput$$13[0]) : false) {\n        const digits$$1 = collect(isLeading, digits, patternInput$$13[1], prior$$1);\n        return digits$$1;\n      } else {\n        const digits$$2 = collect(false, digits, patternInput$$13[1], prior$$1);\n        const digits$$3 = collect(isLeading, digits$$2, patternInput$$13[0], prior$$1);\n        return digits$$3;\n      }\n    } else {\n      const n$$47 = BigNatModule$$$eval32(n$$46) | 0;\n\n      if (isLeading ? n$$47 === 0 : false) {\n        return digits;\n      } else {\n        return new List(int32ToString(n$$47), digits);\n      }\n    }\n  };\n\n  const prior$$2 = kten2ks;\n  const digits$$4 = collect(true, new List(), n$$45, prior$$2);\n\n  if (digits$$4.tail == null) {\n    return \"0\";\n  } else {\n    return join(\"\", ...ofList(digits$$4, Array));\n  }\n}\nexport function BigNatModule$$$ofString(str) {\n  const len = str.length | 0;\n\n  if (isNullOrEmpty(str)) {\n    throw new Error(\"empty string\\\\nParameter name: str\");\n  }\n\n  const ten = BigNatModule$$$embed(10);\n\n  const build = function build(acc$$5, i$$50) {\n    build: while (true) {\n      if (i$$50 === len) {\n        return acc$$5;\n      } else {\n        const c$$12 = str[i$$50];\n        const d$$7 = c$$12.charCodeAt(0) - \"0\".charCodeAt(0) | 0;\n\n        if (0 <= d$$7 ? d$$7 <= 9 : false) {\n          const $acc$$5$$66 = acc$$5;\n          const $i$$50$$67 = i$$50;\n          acc$$5 = BigNatModule$$$add(BigNatModule$$$mul(ten, $acc$$5$$66), BigNatModule$$$embed(d$$7));\n          i$$50 = $i$$50$$67 + 1;\n          continue build;\n        } else {\n          throw new Error();\n        }\n      }\n\n      break;\n    }\n  };\n\n  return build(BigNatModule$$$embed(0), 0);\n}\nexport function BigNatModule$$$isSmall(n$$48) {\n  return n$$48.bound <= 1;\n}\nexport function BigNatModule$$$getSmall(n$$49) {\n  if (0 < n$$49.bound) {\n    return n$$49.digits[0] | 0;\n  } else {\n    return 0;\n  }\n}\nexport function BigNatModule$$$factorial(n$$50) {\n  const productR = function productR(a$$20, b$$15) {\n    if (BigNatModule$$$equal(a$$20, b$$15)) {\n      return a$$20;\n    } else {\n      const m$$3 = BigNatModule$$$div(BigNatModule$$$add(a$$20, b$$15), BigNatModule$$$ofInt32(2));\n      return BigNatModule$$$mul(productR(a$$20, m$$3), productR(BigNatModule$$$add(m$$3, BigNatModule$$$one), b$$15));\n    }\n  };\n\n  return productR(BigNatModule$$$one, n$$50);\n}","// https://github.com/MikeMcl/big.js/blob/01b3ce3a6b0ba7b42442ea48ec4ffc88d1669ec4/big.mjs\n/* tslint:disable */\nimport { combineHashCodes } from \"../Util\";\n// The shared prototype object.\nvar P = {\n    GetHashCode() { return combineHashCodes([this.s, this.e].concat(this.c)); },\n    Equals(x) { return !this.cmp(x); },\n    CompareTo(x) { return this.cmp(x); },\n};\n/*\n *  big.js v5.2.2\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\n *  Copyright (c) 2018 Michael Mclaughlin <M8ch88l@gmail.com>\n *  https://github.com/MikeMcl/big.js/LICENCE\n */\n/************************************** EDITABLE DEFAULTS *****************************************/\n// The default values below must be integers within the stated ranges.\n/*\n * The maximum number of decimal places (DP) of the results of operations involving division:\n * div and sqrt, and pow with negative exponents.\n */\nvar DP = 28, // 0 to MAX_DP\n/*\n * The rounding mode (RM) used when rounding to the above decimal places.\n *\n *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\n *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\n *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\n *  3  Away from zero.                                  (ROUND_UP)\n */\nRM = 1, // 0, 1, 2 or 3\n// The maximum value of DP and Big.DP.\nMAX_DP = 1E6, // 0 to 1000000\n// The maximum magnitude of the exponent argument to the pow method.\nMAX_POWER = 1E6, // 1 to 1000000\n/*\n * The negative exponent (NE) at and beneath which toString returns exponential notation.\n * (JavaScript numbers: -7)\n * -1000000 is the minimum recommended exponent value of a Big.\n */\nNE = -29, // 0 to -1000000\n/*\n * The positive exponent (PE) at and above which toString returns exponential notation.\n * (JavaScript numbers: 21)\n * 1000000 is the maximum recommended exponent value of a Big.\n * (This limit is not enforced or checked.)\n */\nPE = 29, // 0 to 1000000\n/**************************************************************************************************/\n// Error messages.\nNAME = '[big.js] ', INVALID = NAME + 'Invalid ', INVALID_DP = INVALID + 'decimal places', INVALID_RM = INVALID + 'rounding mode', DIV_BY_ZERO = NAME + 'Division by zero', UNDEFINED = void 0, NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\n/*\n * Create and return a Big constructor.\n *\n */\nfunction _Big_() {\n    /*\n     * The Big constructor and exported function.\n     * Create and return a new instance of a Big number object.\n     *\n     * n {number|string|Big} A numeric value.\n     */\n    function Big(n) {\n        var x = this;\n        // Enable constructor usage without new.\n        if (!(x instanceof Big))\n            return n === UNDEFINED ? _Big_() : new Big(n);\n        // Duplicate.\n        if (n instanceof Big) {\n            x.s = n.s;\n            x.e = n.e;\n            x.c = n.c.slice();\n        }\n        else {\n            parse(x, n);\n        }\n        /*\n         * Retain a reference to this Big constructor, and shadow Big.prototype.constructor which\n         * points to Object.\n         */\n        x.constructor = Big;\n    }\n    Big.prototype = P;\n    Big.DP = DP;\n    Big.RM = RM;\n    Big.NE = NE;\n    Big.PE = PE;\n    Big.version = '5.2.2';\n    return Big;\n}\n/*\n * Parse the number or string value passed to a Big constructor.\n *\n * x {Big} A Big number instance.\n * n {number|string} A numeric value.\n */\nfunction parse(x, n) {\n    var e, i, nl;\n    // Minus zero?\n    if (n === 0 && 1 / n < 0)\n        n = '-0';\n    else if (!NUMERIC.test(n += ''))\n        throw Error(INVALID + 'number');\n    // Determine sign.\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\n    // Decimal point?\n    if ((e = n.indexOf('.')) > -1)\n        n = n.replace('.', '');\n    // Exponential form?\n    if ((i = n.search(/e/i)) > 0) {\n        // Determine exponent.\n        if (e < 0)\n            e = i;\n        e += +n.slice(i + 1);\n        n = n.substring(0, i);\n    }\n    else if (e < 0) {\n        // Integer.\n        e = n.length;\n    }\n    nl = n.length;\n    // Determine leading zeros before decimal point.\n    for (i = 0; i < e && i < nl && n.charAt(i) == '0';)\n        ++i;\n    // older version (ignores decimal point).\n    // // Determine leading zeros.\n    // for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\n    if (i == nl) {\n        // Zero.\n        x.c = [x.e = 0];\n    }\n    else {\n        x.e = e - i - 1;\n        x.c = [];\n        // Convert string to array of digits without leading zeros\n        for (e = 0; i < nl;)\n            x.c[e++] = +n.charAt(i++);\n        // older version (doesn't keep trailing zeroes).\n        // // Determine trailing zeros.\n        // for (; nl > 0 && n.charAt(--nl) == '0';);\n        // // Convert string to array of digits without leading/trailing zeros.\n        // for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\n    }\n    x = round(x, Big.DP, Big.RM);\n    return x;\n}\n/*\n * Round Big x to a maximum of dp decimal places using rounding mode rm.\n * Called by stringify, P.div, P.round and P.sqrt.\n *\n * x {Big} The Big to round.\n * dp {number} Integer, 0 to MAX_DP inclusive.\n * rm {number} 0, 1, 2 or 3 (DOWN, HALF_UP, HALF_EVEN, UP)\n * [more] {boolean} Whether the result of division was truncated.\n */\nfunction round(x, dp, rm, more) {\n    var xc = x.c, i = x.e + dp + 1;\n    if (i < xc.length) {\n        if (rm === 1) {\n            // xc[i] is the digit after the digit that may be rounded up.\n            more = xc[i] >= 5;\n        }\n        else if (rm === 2) {\n            more = xc[i] > 5 || xc[i] == 5 &&\n                (more || i < 0 || xc[i + 1] !== UNDEFINED || xc[i - 1] & 1);\n        }\n        else if (rm === 3) {\n            more = more || !!xc[0];\n        }\n        else {\n            more = false;\n            if (rm !== 0)\n                throw Error(INVALID_RM);\n        }\n        if (i < 1) {\n            xc.length = 1;\n            if (more) {\n                // 1, 0.1, 0.01, 0.001, 0.0001 etc.\n                x.e = -dp;\n                xc[0] = 1;\n            }\n            else {\n                // Zero.\n                xc[0] = x.e = 0;\n            }\n        }\n        else {\n            // Remove any digits after the required decimal places.\n            xc.length = i--;\n            // Round up?\n            if (more) {\n                // Rounding up may mean the previous digit has to be rounded up.\n                for (; ++xc[i] > 9;) {\n                    xc[i] = 0;\n                    if (!i--) {\n                        ++x.e;\n                        xc.unshift(1);\n                    }\n                }\n            }\n            // Remove trailing zeros.\n            for (i = xc.length; !xc[--i];)\n                xc.pop();\n        }\n    }\n    else if (rm < 0 || rm > 3 || rm !== ~~rm) {\n        throw Error(INVALID_RM);\n    }\n    return x;\n}\n/*\n * Return a string representing the value of Big x in normal or exponential notation.\n * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\n *\n * x {Big}\n * id? {number} Caller id.\n *         1 toExponential\n *         2 toFixed\n *         3 toPrecision\n *         4 valueOf\n * n? {number|undefined} Caller's argument.\n * k? {number|undefined}\n */\nfunction stringify(x, id, n, k) {\n    var e, s, Big = x.constructor, z = !x.c[0];\n    if (n !== UNDEFINED) {\n        if (n !== ~~n || n < (id == 3) || n > MAX_DP) {\n            throw Error(id == 3 ? INVALID + 'precision' : INVALID_DP);\n        }\n        x = new Big(x);\n        // The index of the digit that may be rounded up.\n        n = k - x.e;\n        // Round?\n        if (x.c.length > ++k)\n            round(x, n, Big.RM);\n        // toFixed: recalculate k as x.e may have changed if value rounded up.\n        if (id == 2)\n            k = x.e + n + 1;\n        // Append zeros?\n        for (; x.c.length < k;)\n            x.c.push(0);\n    }\n    e = x.e;\n    s = x.c.join('');\n    n = s.length;\n    // Exponential notation?\n    if (id != 2 && (id == 1 || id == 3 && k <= e || e <= Big.NE || e >= Big.PE)) {\n        s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\n        // Normal notation.\n    }\n    else if (e < 0) {\n        for (; ++e;)\n            s = '0' + s;\n        s = '0.' + s;\n    }\n    else if (e > 0) {\n        if (++e > n)\n            for (e -= n; e--;)\n                s += '0';\n        else if (e < n)\n            s = s.slice(0, e) + '.' + s.slice(e);\n    }\n    else if (n > 1) {\n        s = s.charAt(0) + '.' + s.slice(1);\n    }\n    return x.s < 0 && (!z || id == 4) ? '-' + s : s;\n}\n// Prototype/instance methods\n/*\n * Return a new Big whose value is the absolute value of this Big.\n */\nP.abs = function () {\n    var x = new this.constructor(this);\n    x.s = 1;\n    return x;\n};\n/*\n * Return 1 if the value of this Big is greater than the value of Big y,\n *       -1 if the value of this Big is less than the value of Big y, or\n *        0 if they have the same value.\n*/\nP.cmp = function (y) {\n    var isneg, x = this, xc = x.c, yc = (y = new x.constructor(y)).c, i = x.s, j = y.s, k = x.e, l = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0])\n        return !xc[0] ? !yc[0] ? 0 : -j : i;\n    // Signs differ?\n    if (i != j)\n        return i;\n    isneg = i < 0;\n    // Compare exponents.\n    if (k != l)\n        return k > l ^ isneg ? 1 : -1;\n    // Compare digit by digit.\n    j = Math.max(xc.length, yc.length);\n    for (i = 0; i < j; i++) {\n        k = i < xc.length ? xc[i] : 0;\n        l = i < yc.length ? yc[i] : 0;\n        if (k != l)\n            return k > l ^ isneg ? 1 : -1;\n    }\n    return 0;\n    // old version (doesn't compare well trailing zeroes, e.g. 1.0 with 1.00)\n    // j = (k = xc.length) < (l = yc.length) ? k : l;\n    // // Compare digit by digit.\n    // for (i = -1; ++i < j;) {\n    //   if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\n    // }\n    // // Compare lengths.\n    // return k == l ? 0 : k > l ^ isneg ? 1 : -1;\n};\n/*\n * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\n * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.div = function (y) {\n    var x = this, Big = x.constructor, a = x.c, // dividend\n    b = (y = new Big(y)).c, // divisor\n    k = x.s == y.s ? 1 : -1, dp = Big.DP;\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    // Divisor is zero?\n    if (!b[0])\n        throw Error(DIV_BY_ZERO);\n    // Dividend is 0? Return +-0.\n    if (!a[0])\n        return new Big(k * 0);\n    var bl, bt, n, cmp, ri, bz = b.slice(), ai = bl = b.length, al = a.length, r = a.slice(0, bl), // remainder\n    rl = r.length, q = y, // quotient\n    qc = q.c = [], qi = 0, d = dp + (q.e = x.e - y.e) + 1; // number of digits of the result\n    q.s = k;\n    k = d < 0 ? 0 : d;\n    // Create version of divisor with leading zero.\n    bz.unshift(0);\n    // Add zeros to make remainder as long as divisor.\n    for (; rl++ < bl;)\n        r.push(0);\n    do {\n        // n is how many times the divisor goes into current remainder.\n        for (n = 0; n < 10; n++) {\n            // Compare divisor and remainder.\n            if (bl != (rl = r.length)) {\n                cmp = bl > rl ? 1 : -1;\n            }\n            else {\n                for (ri = -1, cmp = 0; ++ri < bl;) {\n                    if (b[ri] != r[ri]) {\n                        cmp = b[ri] > r[ri] ? 1 : -1;\n                        break;\n                    }\n                }\n            }\n            // If divisor < remainder, subtract divisor from remainder.\n            if (cmp < 0) {\n                // Remainder can't be more than 1 digit longer than divisor.\n                // Equalise lengths using divisor with extra leading zero?\n                for (bt = rl == bl ? b : bz; rl;) {\n                    if (r[--rl] < bt[rl]) {\n                        ri = rl;\n                        for (; ri && !r[--ri];)\n                            r[ri] = 9;\n                        --r[ri];\n                        r[rl] += 10;\n                    }\n                    r[rl] -= bt[rl];\n                }\n                for (; !r[0];)\n                    r.shift();\n            }\n            else {\n                break;\n            }\n        }\n        // Add the digit n to the result array.\n        qc[qi++] = cmp ? n : ++n;\n        // Update the remainder.\n        if (r[0] && cmp)\n            r[rl] = a[ai] || 0;\n        else\n            r = [a[ai]];\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\n    if (!qc[0] && qi != 1) {\n        // There can't be more than one zero.\n        qc.shift();\n        q.e--;\n    }\n    // Round?\n    if (qi > d)\n        round(q, dp, Big.RM, r[0] !== UNDEFINED);\n    return q;\n};\n/*\n * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\n */\nP.eq = function (y) {\n    return !this.cmp(y);\n};\n/*\n * Return true if the value of this Big is greater than the value of Big y, otherwise return\n * false.\n */\nP.gt = function (y) {\n    return this.cmp(y) > 0;\n};\n/*\n * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\n * return false.\n */\nP.gte = function (y) {\n    return this.cmp(y) > -1;\n};\n/*\n * Return true if the value of this Big is less than the value of Big y, otherwise return false.\n */\nP.lt = function (y) {\n    return this.cmp(y) < 0;\n};\n/*\n * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\n * return false.\n */\nP.lte = function (y) {\n    return this.cmp(y) < 1;\n};\n/*\n * Return a new Big whose value is the value of this Big minus the value of Big y.\n */\nP.minus = P.sub = function (y) {\n    var i, j, t, xlty, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.plus(y);\n    }\n    var xc = x.c.slice(), xe = x.e, yc = y.c, ye = y.e;\n    // Either zero?\n    if (!xc[0] || !yc[0]) {\n        // y is non-zero? x is non-zero? Or both are zero.\n        return yc[0] ? (y.s = -b, y) : new Big(xc[0] ? x : 0);\n    }\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\n    if (a = xe - ye) {\n        if (xlty = a < 0) {\n            a = -a;\n            t = xc;\n        }\n        else {\n            ye = xe;\n            t = yc;\n        }\n        t.reverse();\n        for (b = a; b--;)\n            t.push(0);\n        t.reverse();\n    }\n    else {\n        // Exponents equal. Check digit by digit.\n        j = ((xlty = xc.length < yc.length) ? xc : yc).length;\n        for (a = b = 0; b < j; b++) {\n            if (xc[b] != yc[b]) {\n                xlty = xc[b] < yc[b];\n                break;\n            }\n        }\n    }\n    // x < y? Point xc to the array of the bigger number.\n    if (xlty) {\n        t = xc;\n        xc = yc;\n        yc = t;\n        y.s = -y.s;\n    }\n    /*\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\n     * needs to start at yc.length.\n     */\n    if ((b = (j = yc.length) - (i = xc.length)) > 0)\n        for (; b--;)\n            xc[i++] = 0;\n    // Subtract yc from xc.\n    for (b = i; j > a;) {\n        if (xc[--j] < yc[j]) {\n            for (i = j; i && !xc[--i];)\n                xc[i] = 9;\n            --xc[i];\n            xc[j] += 10;\n        }\n        xc[j] -= yc[j];\n    }\n    // Remove trailing zeros.\n    for (; xc[--b] === 0;)\n        xc.pop();\n    // Remove leading zeros and adjust exponent accordingly.\n    for (; xc[0] === 0;) {\n        xc.shift();\n        --ye;\n    }\n    if (!xc[0]) {\n        // n - n = +0\n        y.s = 1;\n        // Result must be zero.\n        xc = [ye = 0];\n    }\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a new Big whose value is the value of this Big modulo the value of Big y.\n */\nP.mod = function (y) {\n    var ygtx, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;\n    if (!y.c[0])\n        throw Error(DIV_BY_ZERO);\n    x.s = y.s = 1;\n    ygtx = y.cmp(x) == 1;\n    x.s = a;\n    y.s = b;\n    if (ygtx)\n        return new Big(x);\n    a = Big.DP;\n    b = Big.RM;\n    Big.DP = Big.RM = 0;\n    x = x.div(y);\n    Big.DP = a;\n    Big.RM = b;\n    return this.minus(x.times(y));\n};\n/*\n * Return a new Big whose value is the value of this Big plus the value of Big y.\n */\nP.plus = P.add = function (y) {\n    var t, x = this, Big = x.constructor, a = x.s, b = (y = new Big(y)).s;\n    // Signs differ?\n    if (a != b) {\n        y.s = -b;\n        return x.minus(y);\n    }\n    var xe = x.e, xc = x.c, ye = y.e, yc = y.c;\n    // Either zero? y is non-zero? x is non-zero? Or both are zero.\n    if (!xc[0] || !yc[0])\n        return yc[0] ? y : new Big(xc[0] ? x : a * 0);\n    xc = xc.slice();\n    // Prepend zeros to equalise exponents.\n    // Note: reverse faster than unshifts.\n    if (a = xe - ye) {\n        if (a > 0) {\n            ye = xe;\n            t = yc;\n        }\n        else {\n            a = -a;\n            t = xc;\n        }\n        t.reverse();\n        for (; a--;)\n            t.push(0);\n        t.reverse();\n    }\n    // Point xc to the longer array.\n    if (xc.length - yc.length < 0) {\n        t = yc;\n        yc = xc;\n        xc = t;\n    }\n    a = yc.length;\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\n    for (b = 0; a; xc[a] %= 10)\n        b = (xc[--a] = xc[a] + yc[a] + b) / 10 | 0;\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\n    if (b) {\n        xc.unshift(b);\n        ++ye;\n    }\n    // Remove trailing zeros.\n    for (a = xc.length; xc[--a] === 0;)\n        xc.pop();\n    y.c = xc;\n    y.e = ye;\n    return y;\n};\n/*\n * Return a Big whose value is the value of this Big raised to the power n.\n * If n is negative, round to a maximum of Big.DP decimal places using rounding\n * mode Big.RM.\n *\n * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\n */\nP.pow = function (n) {\n    var x = this, one = new x.constructor(1), y = one, isneg = n < 0;\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER)\n        throw Error(INVALID + 'exponent');\n    if (isneg)\n        n = -n;\n    for (;;) {\n        if (n & 1)\n            y = y.times(x);\n        n >>= 1;\n        if (!n)\n            break;\n        x = x.times(x);\n    }\n    return isneg ? one.div(y) : y;\n};\n/*\n * Return a new Big whose value is the value of this Big rounded using rounding mode rm\n * to a maximum of dp decimal places, or, if dp is negative, to an integer which is a\n * multiple of 10**-dp.\n * If dp is not specified, round to 0 decimal places.\n * If rm is not specified, use Big.RM.\n *\n * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\n * rm? 0, 1, 2 or 3 (ROUND_DOWN, ROUND_HALF_UP, ROUND_HALF_EVEN, ROUND_UP)\n */\nP.round = function (dp, rm) {\n    var Big = this.constructor;\n    if (dp === UNDEFINED)\n        dp = 0;\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP)\n        throw Error(INVALID_DP);\n    return round(new Big(this), dp, rm === UNDEFINED ? Big.RM : rm);\n};\n/*\n * Return a new Big whose value is the square root of the value of this Big, rounded, if\n * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\n */\nP.sqrt = function () {\n    var r, c, t, x = this, Big = x.constructor, s = x.s, e = x.e, half = new Big(0.5);\n    // Zero?\n    if (!x.c[0])\n        return new Big(x);\n    // Negative?\n    if (s < 0)\n        throw Error(NAME + 'No square root');\n    // Estimate.\n    s = Math.sqrt(x + '');\n    // Math.sqrt underflow/overflow?\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\n    if (s === 0 || s === 1 / 0) {\n        c = x.c.join('');\n        if (!(c.length + e & 1))\n            c += '0';\n        s = Math.sqrt(c);\n        e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\n        r = new Big((s == 1 / 0 ? '1e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\n    }\n    else {\n        r = new Big(s);\n    }\n    e = r.e + (Big.DP += 4);\n    // Newton-Raphson iteration.\n    do {\n        t = r;\n        r = half.times(t.plus(x.div(t)));\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\n    return round(r, Big.DP -= 4, Big.RM);\n};\n/*\n * Return a new Big whose value is the value of this Big times the value of Big y.\n */\nP.times = P.mul = function (y) {\n    var c, x = this, Big = x.constructor, xc = x.c, yc = (y = new Big(y)).c, a = xc.length, b = yc.length, i = x.e, j = y.e;\n    // Determine sign of result.\n    y.s = x.s == y.s ? 1 : -1;\n    // Return signed 0 if either 0.\n    if (!xc[0] || !yc[0])\n        return new Big(y.s * 0);\n    // Initialise exponent of result as x.e + y.e.\n    y.e = i + j;\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\n    if (a < b) {\n        c = xc;\n        xc = yc;\n        yc = c;\n        j = a;\n        a = b;\n        b = j;\n    }\n    // Initialise coefficient array of result with zeros.\n    for (c = new Array(j = a + b); j--;)\n        c[j] = 0;\n    // Multiply.\n    // i is initially xc.length.\n    for (i = b; i--;) {\n        b = 0;\n        // a is yc.length.\n        for (j = a + i; j > i;) {\n            // Current sum of products at this digit position, plus carry.\n            b = c[j] + yc[i] * xc[j - i - 1] + b;\n            c[j--] = b % 10;\n            // carry\n            b = b / 10 | 0;\n        }\n        c[j] = (c[j] + b) % 10;\n    }\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\n    if (b)\n        ++y.e;\n    else\n        c.shift();\n    // Remove trailing zeros.\n    for (i = c.length; !c[--i];)\n        c.pop();\n    y.c = c;\n    return y;\n};\n/*\n * Return a string representing the value of this Big in exponential notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n */\nP.toExponential = function (dp) {\n    return stringify(this, 1, dp, dp);\n};\n/*\n * Return a string representing the value of this Big in normal notation to dp fixed decimal\n * places and rounded using Big.RM.\n *\n * dp? {number} Integer, 0 to MAX_DP inclusive.\n *\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\n */\nP.toFixed = function (dp) {\n    return stringify(this, 2, dp, this.e + dp);\n};\n/*\n * Return a string representing the value of this Big rounded to sd significant digits using\n * Big.RM. Use exponential notation if sd is less than the number of digits necessary to represent\n * the integer part of the value in normal notation.\n *\n * sd {number} Integer, 1 to MAX_DP inclusive.\n */\nP.toPrecision = function (sd) {\n    return stringify(this, 3, sd, sd - 1);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Omit the sign for negative zero.\n */\nP.toString = function () {\n    return stringify(this);\n};\n/*\n * Return a string representing the value of this Big.\n * Return exponential notation if this Big has a positive exponent equal to or greater than\n * Big.PE, or a negative exponent equal to or less than Big.NE.\n * Include the sign for negative zero.\n */\nP.valueOf = P.toJSON = function () {\n    return stringify(this, 4);\n};\n// Export\nexport var Big = _Big_();\nexport default Big;\n","import Decimal from \"./lib/big\";\nexport default Decimal;\nexport const get_Zero = new Decimal(0);\nexport const get_One = new Decimal(1);\nexport const get_MinusOne = new Decimal(-1);\nexport const get_MaxValue = new Decimal(\"79228162514264337593543950335\");\nexport const get_MinValue = new Decimal(\"-79228162514264337593543950335\");\nexport function compare(x, y) {\n    return x.cmp(y);\n}\nexport function equals(x, y) {\n    return !x.cmp(y);\n}\nexport function abs(x) {\n    return x.abs();\n}\nexport function round(x, digits = 0) {\n    return x.round(digits, x.cmp(0) >= 0 ? 1 /* ROUND_HALF_UP */ : 2 /* ROUND_HALF_EVEN */);\n}\nexport function truncate(x) {\n    return x.round(0, 0 /* ROUND_DOWN */);\n}\nexport function ceiling(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 3 /* ROUND_UP */ : 0 /* ROUND_DOWN */);\n}\nexport function floor(x) {\n    return x.round(0, x.cmp(0) >= 0 ? 0 /* ROUND_DOWN */ : 3 /* ROUND_UP */);\n}\nexport function pow(x, n) {\n    return x.pow(n);\n}\nexport function sqrt(x) {\n    return x.sqrt();\n}\nexport function op_Addition(x, y) {\n    return x.add(y);\n}\nexport function op_Subtraction(x, y) {\n    return x.sub(y);\n}\nexport function op_Multiply(x, y) {\n    return x.mul(y);\n}\nexport function op_Division(x, y) {\n    return x.div(y);\n}\nexport function op_Modulus(x, y) {\n    return x.mod(y);\n}\nexport function op_UnaryNegation(x) {\n    const x2 = new Decimal(x);\n    x2.s = -x2.s || 0;\n    return x2;\n}\nexport const add = op_Addition;\nexport const subtract = op_Subtraction;\nexport const multiply = op_Multiply;\nexport const divide = op_Division;\nexport const remainder = op_Modulus;\nexport const negate = op_UnaryNegation;\nexport function toString(x) {\n    return x.toString();\n}\nexport function tryParse(str) {\n    try {\n        return [true, new Decimal(str.trim())];\n    }\n    catch (_a) {\n        return [false, get_Zero];\n    }\n}\nexport function parse(str) {\n    const [ok, value] = tryParse(str);\n    if (ok) {\n        return value;\n    }\n    else {\n        throw new Error(\"Input string was not in a correct format.\");\n    }\n}\nexport function toNumber(x) {\n    return +x;\n}\nfunction decimalToHex(dec, bitSize) {\n    const hex = new Uint8Array(bitSize / 4 | 0);\n    let hexCount = 1;\n    for (let d = 0; d < dec.length; d++) {\n        let value = dec[d];\n        for (let i = 0; i < hexCount; i++) {\n            const digit = hex[i] * 10 + value | 0;\n            hex[i] = digit & 0xF;\n            value = digit >> 4;\n        }\n        if (value !== 0) {\n            hex[hexCount++] = value;\n        }\n    }\n    return hex.slice(0, hexCount); // digits in reverse order\n}\nfunction hexToDecimal(hex, bitSize) {\n    const dec = new Uint8Array(bitSize * 301 / 1000 + 1 | 0);\n    let decCount = 1;\n    for (let d = hex.length - 1; d >= 0; d--) {\n        let carry = hex[d];\n        for (let i = 0; i < decCount; i++) {\n            const val = dec[i] * 16 + carry | 0;\n            dec[i] = (val % 10) | 0;\n            carry = (val / 10) | 0;\n        }\n        while (carry > 0) {\n            dec[decCount++] = (carry % 10) | 0;\n            carry = (carry / 10) | 0;\n        }\n    }\n    return dec.slice(0, decCount); // digits in reverse order\n}\nfunction setInt32Bits(hexDigits, bits, offset) {\n    for (let i = 0; i < 8; i++) {\n        hexDigits[offset + i] = (bits >> (i * 4)) & 0xF;\n    }\n}\nfunction getInt32Bits(hexDigits, offset) {\n    let bits = 0;\n    for (let i = 0; i < 8; i++) {\n        bits = bits | (hexDigits[offset + i] << (i * 4));\n    }\n    return bits;\n}\nexport function fromIntArray(bits) {\n    return fromInts(bits[0], bits[1], bits[2], bits[3]);\n}\nexport function fromInts(low, mid, high, signExp) {\n    const isNegative = signExp < 0;\n    const scale = (signExp >> 16) & 0x7F;\n    return fromParts(low, mid, high, isNegative, scale);\n}\nexport function fromParts(low, mid, high, isNegative, scale) {\n    const bitSize = 96;\n    const hexDigits = new Uint8Array(bitSize / 4);\n    setInt32Bits(hexDigits, low, 0);\n    setInt32Bits(hexDigits, mid, 8);\n    setInt32Bits(hexDigits, high, 16);\n    const decDigits = hexToDecimal(hexDigits, bitSize);\n    scale = scale & 0x7F;\n    const big = new Decimal(0);\n    big.c = Array.from(decDigits.reverse());\n    big.e = decDigits.length - scale - 1;\n    big.s = isNegative ? -1 : 1;\n    const d = new Decimal(big);\n    return d;\n}\nexport function getBits(d) {\n    const bitSize = 96;\n    const decDigits = Uint8Array.from(d.c);\n    const hexDigits = decimalToHex(decDigits, bitSize);\n    const low = getInt32Bits(hexDigits, 0);\n    const mid = getInt32Bits(hexDigits, 8);\n    const high = getInt32Bits(hexDigits, 16);\n    const decStr = d.toString();\n    const dotPos = decStr.indexOf(\".\");\n    const scale = dotPos < 0 ? 0 : decStr.length - dotPos - 1;\n    const signExp = ((scale & 0x7F) << 16) | (d.s < 0 ? 0x80000000 : 0);\n    return [low, mid, high, signExp];\n}\n","import { declare, Record } from \"../Types.js\";\nimport { type } from \"../Reflection.js\";\nimport { BigNatModule$$$factorial as BigNatModule$0024$0024$0024factorial, BigNatModule$$$ofString as BigNatModule$0024$0024$0024ofString, BigNatModule$$$toFloat as BigNatModule$0024$0024$0024toFloat, BigNatModule$$$toUInt64 as BigNatModule$0024$0024$0024toUInt64, BigNatModule$$$toUInt32 as BigNatModule$0024$0024$0024toUInt32, BigNatModule$$$pow as BigNatModule$0024$0024$0024pow, BigNatModule$$$rem as BigNatModule$0024$0024$0024rem, BigNatModule$$$two as BigNatModule$0024$0024$0024two, BigNatModule$$$lte as BigNatModule$0024$0024$0024lte, BigNatModule$$$hcf as BigNatModule$0024$0024$0024hcf, BigNatModule$$$bitXor as BigNatModule$0024$0024$0024bitXor, BigNatModule$$$bitOr as BigNatModule$0024$0024$0024bitOr, BigNatModule$$$bitAnd as BigNatModule$0024$0024$0024bitAnd, BigNatModule$$$divmod as BigNatModule$0024$0024$0024divmod, BigNatModule$$$mul as BigNatModule$0024$0024$0024mul, BigNatModule$$$isOne as BigNatModule$0024$0024$0024isOne, BigNatModule$$$sub as BigNatModule$0024$0024$0024sub, BigNatModule$$$gte as BigNatModule$0024$0024$0024gte, BigNatModule$$$scale as BigNatModule$0024$0024$0024scale, BigNatModule$$$add as BigNatModule$0024$0024$0024add, BigNatModule$$$one as BigNatModule$0024$0024$0024one, BigNatModule$$$ofInt64 as BigNatModule$0024$0024$0024ofInt64, BigNatModule$$$toString as BigNatModule$0024$0024$0024toString, BigNatModule$$$hash as BigNatModule$0024$0024$0024hash, BigNatModule$$$gt as BigNatModule$0024$0024$0024gt, BigNatModule$$$lt as BigNatModule$0024$0024$0024lt, BigNatModule$$$isZero as BigNatModule$0024$0024$0024isZero, BigNatModule$$$equal as BigNatModule$0024$0024$0024equal, BigNatModule$$$getSmall as BigNatModule$0024$0024$0024getSmall, BigNatModule$$$isSmall as BigNatModule$0024$0024$0024isSmall, BigNatModule$$$ofInt32 as BigNatModule$0024$0024$0024ofInt32 } from \"./n\";\nimport { initialize } from \"../Array.js\";\nimport { op_Addition, op_Multiply, fromValue, equals, compare, fromBits, op_UnaryNegation, fromInteger } from \"../Long.js\";\nimport { op_UnaryNegation_Int32 } from \"../Int32.js\";\nimport Decimal from \"../Decimal.js\";\nexport const BigInteger = declare(function BigInt_BigInteger(signInt, v) {\n  const $this$$1 = this;\n  $this$$1.signInt = signInt;\n  $this$$1.v = v;\n}, Record);\nexport function BigInteger$reflection() {\n  return type(\"BigInt.BigInteger\");\n}\nexport function BigInteger$$$$002Ector$$Z2BE94A1(signInt, v) {\n  return this instanceof BigInteger ? BigInteger.call(this, signInt, v) : new BigInteger(signInt, v);\n}\n\n(function BigInteger$$$$002Ecctor() {\n  BigInteger.smallLim = 4096;\n  BigInteger.smallPosTab = initialize(BigInteger.smallLim, BigNatModule$0024$0024$0024ofInt32, Array);\n  BigInteger.one = BigInteger$$$$002Ector$$Z524259A4(1);\n  BigInteger.two = BigInteger$$$$002Ector$$Z524259A4(2);\n  BigInteger.zero = BigInteger$$$$002Ector$$Z524259A4(0);\n})();\n\nexport function BigInteger$$$nat$$Z67CCE57D(n$$1) {\n  if (BigNatModule$0024$0024$0024isSmall(n$$1) ? BigNatModule$0024$0024$0024getSmall(n$$1) < BigInteger.smallLim : false) {\n    return BigInteger.smallPosTab[BigNatModule$0024$0024$0024getSmall(n$$1)];\n  } else {\n    return n$$1;\n  }\n}\nexport function BigInteger$$$create$$Z2BE94A1(s, n$$2) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(s, BigInteger$$$nat$$Z67CCE57D(n$$2));\n}\nexport function BigInteger$$$posn$$Z67CCE57D(n$$3) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(1, BigInteger$$$nat$$Z67CCE57D(n$$3));\n}\nexport function BigInteger$$$negn$$Z67CCE57D(n$$4) {\n  return BigInteger$$$$002Ector$$Z2BE94A1(-1, BigInteger$$$nat$$Z67CCE57D(n$$4));\n}\nexport function BigInteger$$get_Sign(x) {\n  if (BigInteger$$get_IsZero(x)) {\n    return 0;\n  } else {\n    return x.signInt | 0;\n  }\n}\nexport function BigInteger$$get_SignInt(x$$1) {\n  return x$$1.signInt;\n}\nexport function BigInteger$$get_V(x$$2) {\n  return x$$2.v;\n}\nexport function BigInteger$$$op_Equality$$56F059C0(x$$3, y) {\n  const matchValue = [BigInteger$$get_SignInt(x$$3), BigInteger$$get_SignInt(y)];\n  var $target$$2;\n\n  if (matchValue[0] === -1) {\n    if (matchValue[1] === -1) {\n      $target$$2 = 1;\n    } else if (matchValue[1] === 0) {\n      $target$$2 = 8;\n    } else if (matchValue[1] === 1) {\n      $target$$2 = 3;\n    } else {\n      $target$$2 = 9;\n    }\n  } else if (matchValue[0] === 0) {\n    if (matchValue[1] === -1) {\n      $target$$2 = 6;\n    } else if (matchValue[1] === 0) {\n      $target$$2 = 4;\n    } else if (matchValue[1] === 1) {\n      $target$$2 = 5;\n    } else {\n      $target$$2 = 9;\n    }\n  } else if (matchValue[0] === 1) {\n    if (matchValue[1] === -1) {\n      $target$$2 = 2;\n    } else if (matchValue[1] === 0) {\n      $target$$2 = 7;\n    } else if (matchValue[1] === 1) {\n      $target$$2 = 0;\n    } else {\n      $target$$2 = 9;\n    }\n  } else {\n    $target$$2 = 9;\n  }\n\n  switch ($target$$2) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024equal(BigInteger$$get_V(x$$3), BigInteger$$get_V(y));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$3));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_Inequality$$56F059C0(x$$4, y$$1) {\n  return !BigInteger$$$op_Equality$$56F059C0(x$$4, y$$1);\n}\nexport function BigInteger$$$op_LessThan$$56F059C0(x$$5, y$$2) {\n  const matchValue$$1 = [BigInteger$$get_SignInt(x$$5), BigInteger$$get_SignInt(y$$2)];\n  var $target$$3;\n\n  if (matchValue$$1[0] === -1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$3 = 1;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$3 = 8;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$3 = 3;\n    } else {\n      $target$$3 = 9;\n    }\n  } else if (matchValue$$1[0] === 0) {\n    if (matchValue$$1[1] === -1) {\n      $target$$3 = 6;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$3 = 4;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$3 = 5;\n    } else {\n      $target$$3 = 9;\n    }\n  } else if (matchValue$$1[0] === 1) {\n    if (matchValue$$1[1] === -1) {\n      $target$$3 = 2;\n    } else if (matchValue$$1[1] === 0) {\n      $target$$3 = 7;\n    } else if (matchValue$$1[1] === 1) {\n      $target$$3 = 0;\n    } else {\n      $target$$3 = 9;\n    }\n  } else {\n    $target$$3 = 9;\n  }\n\n  switch ($target$$3) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(x$$5), BigInteger$$get_V(y$$2));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lt(BigInteger$$get_V(y$$2), BigInteger$$get_V(x$$5));\n      }\n\n    case 2:\n      {\n        return false;\n      }\n\n    case 3:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n        }\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$2));\n      }\n\n    case 6:\n      {\n        return false;\n      }\n\n    case 7:\n      {\n        return false;\n      }\n\n    case 8:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$5));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThan$$56F059C0(x$$6, y$$3) {\n  const matchValue$$2 = [BigInteger$$get_SignInt(x$$6), BigInteger$$get_SignInt(y$$3)];\n  var $target$$4;\n\n  if (matchValue$$2[0] === -1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$4 = 1;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$4 = 8;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$4 = 3;\n    } else {\n      $target$$4 = 9;\n    }\n  } else if (matchValue$$2[0] === 0) {\n    if (matchValue$$2[1] === -1) {\n      $target$$4 = 6;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$4 = 4;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$4 = 5;\n    } else {\n      $target$$4 = 9;\n    }\n  } else if (matchValue$$2[0] === 1) {\n    if (matchValue$$2[1] === -1) {\n      $target$$4 = 2;\n    } else if (matchValue$$2[1] === 0) {\n      $target$$4 = 7;\n    } else if (matchValue$$2[1] === 1) {\n      $target$$4 = 0;\n    } else {\n      $target$$4 = 9;\n    }\n  } else {\n    $target$$4 = 9;\n  }\n\n  switch ($target$$4) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(x$$6), BigInteger$$get_V(y$$3));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gt(BigInteger$$get_V(y$$3), BigInteger$$get_V(x$$6));\n      }\n\n    case 2:\n      {\n        if (!BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6))) {\n          return true;\n        } else {\n          return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n        }\n      }\n\n    case 3:\n      {\n        return false;\n      }\n\n    case 4:\n      {\n        return false;\n      }\n\n    case 5:\n      {\n        return false;\n      }\n\n    case 6:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$3));\n      }\n\n    case 7:\n      {\n        return !BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$6));\n      }\n\n    case 8:\n      {\n        return false;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$compare$$56F059C0(n$$5, nn) {\n  if (BigInteger$$$op_LessThan$$56F059C0(n$$5, nn)) {\n    return -1 | 0;\n  } else if (BigInteger$$$op_Equality$$56F059C0(n$$5, nn)) {\n    return 0;\n  } else {\n    return 1;\n  }\n}\nexport function BigInteger$$$hash$$Z665282C2(z) {\n  if (BigInteger$$get_SignInt(z) === 0) {\n    return 1;\n  } else {\n    return BigInteger$$get_SignInt(z) + BigNatModule$0024$0024$0024hash(BigInteger$$get_V(z)) | 0;\n  }\n}\n\nBigInteger.prototype.toString = function () {\n  const x$$7 = this;\n  const matchValue$$3 = BigInteger$$get_SignInt(x$$7) | 0;\n\n  switch (matchValue$$3) {\n    case -1:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$7)) ? \"0\" : \"-\" + BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    case 0:\n      {\n        return \"0\";\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toString(BigInteger$$get_V(x$$7));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\");\n      }\n  }\n};\n\nexport function BigInteger$$get_StructuredDisplayString(x$$8) {\n  return String(x$$8);\n}\n\nBigInteger.prototype.Equals = function (obj) {\n  const this$ = this;\n\n  if (obj instanceof BigInteger) {\n    const that = obj;\n    return BigInteger$$$op_Equality$$56F059C0(this$, that);\n  } else {\n    return false;\n  }\n};\n\nBigInteger.prototype.GetHashCode = function () {\n  const x$$9 = this;\n  return BigInteger$$$hash$$Z665282C2(x$$9) | 0;\n};\n\nexport function BigInteger$$$$002Ector$$Z524259A4(n$$6) {\n  if (n$$6 >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(n$$6)));\n  } else if (n$$6 === -2147483648) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(fromInteger(n$$6, false, 2)))));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt32(op_UnaryNegation_Int32(n$$6))));\n  }\n}\nexport function BigInteger$$$$002Ector$$Z524259C1(n$$7) {\n  if (compare(n$$7, fromBits(0, 0, false)) >= 0) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, 1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(n$$7)));\n  } else if (equals(n$$7, fromBits(0, 2147483648, false))) {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024add(BigNatModule$0024$0024$0024ofInt64(fromBits(4294967295, 2147483647, false)), BigNatModule$0024$0024$0024one)));\n  } else {\n    return BigInteger$$$$002Ector$$Z2BE94A1.call(this, -1, BigInteger$$$nat$$Z67CCE57D(BigNatModule$0024$0024$0024ofInt64(op_UnaryNegation(n$$7))));\n  }\n}\nexport function BigInteger$$$get_One() {\n  return BigInteger.one;\n}\nexport function BigInteger$$$get_Two() {\n  return BigInteger.two;\n}\nexport function BigInteger$$$get_Zero() {\n  return BigInteger.zero;\n}\nexport function BigInteger$$$op_UnaryNegation$$Z665282C2(z$$1) {\n  const matchValue$$4 = BigInteger$$get_SignInt(z$$1) | 0;\n\n  if (matchValue$$4 === 0) {\n    return BigInteger$$$get_Zero();\n  } else {\n    const i = matchValue$$4 | 0;\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(i), BigInteger$$get_V(z$$1));\n  }\n}\nexport function BigInteger$$$Scale$$Z320F31E(k, z$$2) {\n  if (BigInteger$$get_SignInt(z$$2) === 0) {\n    return BigInteger$$$get_Zero();\n  } else if (k < 0) {\n    return BigInteger$$$create$$Z2BE94A1(op_UnaryNegation_Int32(BigInteger$$get_SignInt(z$$2)), BigNatModule$0024$0024$0024scale(op_UnaryNegation_Int32(k), BigInteger$$get_V(z$$2)));\n  } else {\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(z$$2), BigNatModule$0024$0024$0024scale(k, BigInteger$$get_V(z$$2)));\n  }\n}\nexport function BigInteger$$$subnn$$6A57060(nx, ny) {\n  if (BigNatModule$0024$0024$0024gte(nx, ny)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(nx, ny));\n  } else {\n    return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024sub(ny, nx));\n  }\n}\nexport function BigInteger$$$addnn$$6A57060(nx$$1, ny$$1) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024add(nx$$1, ny$$1));\n}\nexport function BigInteger$$get_IsZero(x$$10) {\n  if (BigInteger$$get_SignInt(x$$10) === 0) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$10));\n  }\n}\nexport function BigInteger$$get_IsOne(x$$11) {\n  if (BigInteger$$get_SignInt(x$$11) === 1) {\n    return BigNatModule$0024$0024$0024isOne(BigInteger$$get_V(x$$11));\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$op_Addition$$56F059C0(x$$12, y$$4) {\n  if (BigInteger$$get_IsZero(y$$4)) {\n    return x$$12;\n  } else if (BigInteger$$get_IsZero(x$$12)) {\n    return y$$4;\n  } else {\n    const matchValue$$5 = [BigInteger$$get_SignInt(x$$12), BigInteger$$get_SignInt(y$$4)];\n    var $target$$5;\n\n    if (matchValue$$5[0] === -1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$5 = 1;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$5 = 3;\n      } else {\n        $target$$5 = 4;\n      }\n    } else if (matchValue$$5[0] === 1) {\n      if (matchValue$$5[1] === -1) {\n        $target$$5 = 2;\n      } else if (matchValue$$5[1] === 1) {\n        $target$$5 = 0;\n      } else {\n        $target$$5 = 4;\n      }\n    } else {\n      $target$$5 = 4;\n    }\n\n    switch ($target$$5) {\n      case 0:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4)));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$12), BigInteger$$get_V(y$$4));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$4), BigInteger$$get_V(x$$12));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Subtraction$$56F059C0(x$$13, y$$5) {\n  if (BigInteger$$get_IsZero(y$$5)) {\n    return x$$13;\n  } else if (BigInteger$$get_IsZero(x$$13)) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(y$$5);\n  } else {\n    const matchValue$$6 = [BigInteger$$get_SignInt(x$$13), BigInteger$$get_SignInt(y$$5)];\n    var $target$$6;\n\n    if (matchValue$$6[0] === -1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$6 = 1;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$6 = 3;\n      } else {\n        $target$$6 = 4;\n      }\n    } else if (matchValue$$6[0] === 1) {\n      if (matchValue$$6[1] === -1) {\n        $target$$6 = 2;\n      } else if (matchValue$$6[1] === 1) {\n        $target$$6 = 0;\n      } else {\n        $target$$6 = 4;\n      }\n    } else {\n      $target$$6 = 4;\n    }\n\n    switch ($target$$6) {\n      case 0:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 1:\n        {\n          return BigInteger$$$subnn$$6A57060(BigInteger$$get_V(y$$5), BigInteger$$get_V(x$$13));\n        }\n\n      case 2:\n        {\n          return BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5));\n        }\n\n      case 3:\n        {\n          return BigInteger$$$op_UnaryNegation$$Z665282C2(BigInteger$$$addnn$$6A57060(BigInteger$$get_V(x$$13), BigInteger$$get_V(y$$5)));\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Multiply$$56F059C0(x$$14, y$$6) {\n  if (BigInteger$$get_IsZero(x$$14)) {\n    return x$$14;\n  } else if (BigInteger$$get_IsZero(y$$6)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(x$$14)) {\n    return y$$6;\n  } else if (BigInteger$$get_IsOne(y$$6)) {\n    return x$$14;\n  } else {\n    const m = BigNatModule$0024$0024$0024mul(BigInteger$$get_V(x$$14), BigInteger$$get_V(y$$6));\n    return BigInteger$$$create$$Z2BE94A1(BigInteger$$get_SignInt(x$$14) * BigInteger$$get_SignInt(y$$6), m);\n  }\n}\nexport function BigInteger$$$DivRem$$56F059C0(x$$15, y$$7) {\n  if (BigInteger$$get_IsZero(y$$7)) {\n    throw new Error();\n  }\n\n  if (BigInteger$$get_IsZero(x$$15)) {\n    return [BigInteger$$$get_Zero(), BigInteger$$$get_Zero()];\n  } else {\n    const patternInput = BigNatModule$0024$0024$0024divmod(BigInteger$$get_V(x$$15), BigInteger$$get_V(y$$7));\n    const matchValue$$7 = [BigInteger$$get_SignInt(x$$15), BigInteger$$get_SignInt(y$$7)];\n    var $target$$7;\n\n    if (matchValue$$7[0] === -1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$7 = 1;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$7 = 3;\n      } else {\n        $target$$7 = 4;\n      }\n    } else if (matchValue$$7[0] === 1) {\n      if (matchValue$$7[1] === -1) {\n        $target$$7 = 2;\n      } else if (matchValue$$7[1] === 1) {\n        $target$$7 = 0;\n      } else {\n        $target$$7 = 4;\n      }\n    } else {\n      $target$$7 = 4;\n    }\n\n    switch ($target$$7) {\n      case 0:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 1:\n        {\n          return [BigInteger$$$posn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 2:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$posn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 3:\n        {\n          return [BigInteger$$$negn$$Z67CCE57D(patternInput[0]), BigInteger$$$negn$$Z67CCE57D(patternInput[1])];\n        }\n\n      case 4:\n        {\n          throw new Error(\"signs should be +/- 1\\\\nParameter name: x\");\n        }\n    }\n  }\n}\nexport function BigInteger$$$op_Division$$56F059C0(x$$16, y$$8) {\n  return BigInteger$$$DivRem$$56F059C0(x$$16, y$$8)[0];\n}\nexport function BigInteger$$$op_Modulus$$56F059C0(x$$17, y$$9) {\n  return BigInteger$$$DivRem$$56F059C0(x$$17, y$$9)[1];\n}\nexport function BigInteger$$$op_RightShift$$62E082A2(x$$18, y$$10) {\n  return BigInteger$$$op_Division$$56F059C0(x$$18, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$10));\n}\nexport function BigInteger$$$op_LeftShift$$62E082A2(x$$19, y$$11) {\n  return BigInteger$$$op_Multiply$$56F059C0(x$$19, BigInteger$$$Pow$$62E082A2(BigInteger$$$get_Two(), y$$11));\n}\nexport function BigInteger$$$op_BitwiseAnd$$56F059C0(x$$20, y$$12) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitAnd(BigInteger$$get_V(x$$20), BigInteger$$get_V(y$$12)));\n}\nexport function BigInteger$$$op_BitwiseOr$$56F059C0(x$$21, y$$13) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitOr(BigInteger$$get_V(x$$21), BigInteger$$get_V(y$$13)));\n}\nexport function BigInteger$$$op_ExclusiveOr$$56F059C0(x$$22, y$$14) {\n  return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024bitXor(BigInteger$$get_V(x$$22), BigInteger$$get_V(y$$14)));\n}\nexport function BigInteger$$$GreatestCommonDivisor$$56F059C0(x$$23, y$$15) {\n  const matchValue$$8 = [BigInteger$$get_SignInt(x$$23), BigInteger$$get_SignInt(y$$15)];\n\n  if (matchValue$$8[0] === 0) {\n    if (matchValue$$8[1] === 0) {\n      return BigInteger$$$get_Zero();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(y$$15));\n    }\n  } else if (matchValue$$8[1] === 0) {\n    return BigInteger$$$posn$$Z67CCE57D(BigInteger$$get_V(x$$23));\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024hcf(BigInteger$$get_V(x$$23), BigInteger$$get_V(y$$15)));\n  }\n}\nexport function BigInteger$$get_IsNegative(x$$24) {\n  if (BigInteger$$get_SignInt(x$$24) === -1) {\n    return !BigInteger$$get_IsZero(x$$24);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$get_IsPositive(x$$25) {\n  if (BigInteger$$get_SignInt(x$$25) === 1) {\n    return !BigInteger$$get_IsZero(x$$25);\n  } else {\n    return false;\n  }\n}\nexport function BigInteger$$$Abs$$Z665282C2(x$$26) {\n  if (BigInteger$$get_SignInt(x$$26) === -1) {\n    return BigInteger$$$op_UnaryNegation$$Z665282C2(x$$26);\n  } else {\n    return x$$26;\n  }\n}\nexport function BigInteger$$$op_LessThanOrEqual$$56F059C0(x$$27, y$$16) {\n  const matchValue$$9 = [BigInteger$$get_SignInt(x$$27), BigInteger$$get_SignInt(y$$16)];\n  var $target$$8;\n\n  if (matchValue$$9[0] === -1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$8 = 1;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$8 = 6;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$8 = 3;\n    } else {\n      $target$$8 = 9;\n    }\n  } else if (matchValue$$9[0] === 0) {\n    if (matchValue$$9[1] === -1) {\n      $target$$8 = 8;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$8 = 4;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$8 = 7;\n    } else {\n      $target$$8 = 9;\n    }\n  } else if (matchValue$$9[0] === 1) {\n    if (matchValue$$9[1] === -1) {\n      $target$$8 = 2;\n    } else if (matchValue$$9[1] === 0) {\n      $target$$8 = 5;\n    } else if (matchValue$$9[1] === 1) {\n      $target$$8 = 0;\n    } else {\n      $target$$8 = 9;\n    }\n  } else {\n    $target$$8 = 9;\n  }\n\n  switch ($target$$8) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(x$$27), BigInteger$$get_V(y$$16));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024lte(BigInteger$$get_V(y$$16), BigInteger$$get_V(x$$27));\n      }\n\n    case 2:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n        } else {\n          return false;\n        }\n      }\n\n    case 3:\n      {\n        return true;\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$27));\n      }\n\n    case 6:\n      {\n        return true;\n      }\n\n    case 7:\n      {\n        return true;\n      }\n\n    case 8:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$16));\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$op_GreaterThanOrEqual$$56F059C0(x$$28, y$$17) {\n  const matchValue$$10 = [BigInteger$$get_SignInt(x$$28), BigInteger$$get_SignInt(y$$17)];\n  var $target$$9;\n\n  if (matchValue$$10[0] === -1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$9 = 1;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$9 = 6;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$9 = 3;\n    } else {\n      $target$$9 = 9;\n    }\n  } else if (matchValue$$10[0] === 0) {\n    if (matchValue$$10[1] === -1) {\n      $target$$9 = 8;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$9 = 4;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$9 = 7;\n    } else {\n      $target$$9 = 9;\n    }\n  } else if (matchValue$$10[0] === 1) {\n    if (matchValue$$10[1] === -1) {\n      $target$$9 = 2;\n    } else if (matchValue$$10[1] === 0) {\n      $target$$9 = 5;\n    } else if (matchValue$$10[1] === 1) {\n      $target$$9 = 0;\n    } else {\n      $target$$9 = 9;\n    }\n  } else {\n    $target$$9 = 9;\n  }\n\n  switch ($target$$9) {\n    case 0:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(x$$28), BigInteger$$get_V(y$$17));\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024gte(BigInteger$$get_V(y$$17), BigInteger$$get_V(x$$28));\n      }\n\n    case 2:\n      {\n        return true;\n      }\n\n    case 3:\n      {\n        if (BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28))) {\n          return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n        } else {\n          return false;\n        }\n      }\n\n    case 4:\n      {\n        return true;\n      }\n\n    case 5:\n      {\n        return true;\n      }\n\n    case 6:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(x$$28));\n      }\n\n    case 7:\n      {\n        return BigNatModule$0024$0024$0024isZero(BigInteger$$get_V(y$$17));\n      }\n\n    case 8:\n      {\n        return true;\n      }\n\n    case 9:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$$Pow$$62E082A2(x$$29, y$$18) {\n  if (y$$18 < 0) {\n    throw new Error(\"y\");\n  }\n\n  const matchValue$$11 = [BigInteger$$get_IsZero(x$$29), y$$18];\n\n  if (matchValue$$11[0]) {\n    if (matchValue$$11[1] === 0) {\n      return BigInteger$$$get_One();\n    } else {\n      return BigInteger$$$get_Zero();\n    }\n  } else {\n    const yval = BigInteger$$$$002Ector$$Z524259A4(y$$18);\n    return BigInteger$$$create$$Z2BE94A1(BigNatModule$0024$0024$0024isZero(BigNatModule$0024$0024$0024rem(BigInteger$$get_V(yval), BigNatModule$0024$0024$0024two)) ? 1 : BigInteger$$get_SignInt(x$$29), BigNatModule$0024$0024$0024pow(BigInteger$$get_V(x$$29), BigInteger$$get_V(yval)));\n  }\n}\nexport function BigInteger$$get_ToInt32(x$$30) {\n  if (BigInteger$$get_IsZero(x$$30)) {\n    return 0;\n  } else {\n    const u = BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$30));\n\n    if (u <= 2147483647 >>> 0) {\n      return BigInteger$$get_SignInt(x$$30) * ~~u | 0;\n    } else if (BigInteger$$get_SignInt(x$$30) === -1 ? u === 2147483647 + 1 >>> 0 : false) {\n      return -2147483648 | 0;\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt32(x$$31) {\n  if (BigInteger$$get_IsZero(x$$31)) {\n    return 0;\n  } else {\n    return BigNatModule$0024$0024$0024toUInt32(BigInteger$$get_V(x$$31));\n  }\n}\nexport function BigInteger$$get_ToInt64(x$$32) {\n  if (BigInteger$$get_IsZero(x$$32)) {\n    return fromBits(0, 0, false);\n  } else {\n    const u$$1 = BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$32));\n\n    if (compare(u$$1, fromValue(fromBits(4294967295, 2147483647, false), true)) <= 0) {\n      return op_Multiply(fromInteger(BigInteger$$get_SignInt(x$$32), false, 2), fromValue(u$$1, false));\n    } else if (BigInteger$$get_SignInt(x$$32) === -1 ? equals(u$$1, fromValue(op_Addition(fromBits(4294967295, 2147483647, false), fromBits(1, 0, false)), true)) : false) {\n      return fromBits(0, 2147483648, false);\n    } else {\n      throw new Error();\n    }\n  }\n}\nexport function BigInteger$$get_ToUInt64(x$$33) {\n  if (BigInteger$$get_IsZero(x$$33)) {\n    return fromBits(0, 0, true);\n  } else {\n    return BigNatModule$0024$0024$0024toUInt64(BigInteger$$get_V(x$$33));\n  }\n}\nexport function BigInteger$$get_ToDouble(x$$34) {\n  const matchValue$$12 = BigInteger$$get_SignInt(x$$34) | 0;\n\n  switch (matchValue$$12) {\n    case -1:\n      {\n        return -BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    case 0:\n      {\n        return 0;\n      }\n\n    case 1:\n      {\n        return BigNatModule$0024$0024$0024toFloat(BigInteger$$get_V(x$$34));\n      }\n\n    default:\n      {\n        throw new Error(\"signs should be +/- 1 or 0\\\\nParameter name: x\");\n      }\n  }\n}\nexport function BigInteger$$get_ToSByte(x$$35) {\n  return (BigInteger$$get_ToInt32(x$$35) + 0x80 & 0xFF) - 0x80;\n}\nexport function BigInteger$$get_ToByte(x$$36) {\n  return BigInteger$$get_ToUInt32(x$$36) & 0xFF;\n}\nexport function BigInteger$$get_ToInt16(x$$37) {\n  return (BigInteger$$get_ToInt32(x$$37) + 0x8000 & 0xFFFF) - 0x8000;\n}\nexport function BigInteger$$get_ToUInt16(x$$38) {\n  return BigInteger$$get_ToUInt32(x$$38) & 0xFFFF;\n}\nexport function BigInteger$$get_ToSingle(x$$39) {\n  return BigInteger$$get_ToDouble(x$$39);\n}\nexport function BigInteger$$get_ToDecimal(x$$40) {\n  return new Decimal(BigInteger$$get_ToDouble(x$$40));\n}\nexport function BigInteger$$$Parse$$Z721C83C5(text) {\n  if (text == null) {\n    throw new Error(\"text\");\n  }\n\n  const text$$1 = text.trim();\n  const len = text$$1.length | 0;\n\n  if (len === 0) {\n    throw new Error();\n  }\n\n  const matchValue$$13 = [text$$1[0], len];\n\n  if (matchValue$$13[0] === \"+\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else if (matchValue$$13[0] === \"-\") {\n    if (matchValue$$13[1] === 1) {\n      throw new Error();\n    } else {\n      return BigInteger$$$negn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1.slice(1, len - 1 + 1)));\n    }\n  } else {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024ofString(text$$1));\n  }\n}\nexport function BigInteger$$get_IsSmall(x$$41) {\n  if (BigInteger$$get_IsZero(x$$41)) {\n    return true;\n  } else {\n    return BigNatModule$0024$0024$0024isSmall(BigInteger$$get_V(x$$41));\n  }\n}\nexport function BigInteger$$$Factorial$$Z665282C2(x$$42) {\n  if (BigInteger$$get_IsNegative(x$$42)) {\n    throw new Error(\"mustBeNonNegative\\\\nParameter name: x\");\n  }\n\n  if (BigInteger$$get_IsPositive(x$$42)) {\n    return BigInteger$$$posn$$Z67CCE57D(BigNatModule$0024$0024$0024factorial(BigInteger$$get_V(x$$42)));\n  } else {\n    return BigInteger$$$get_One();\n  }\n}\nexport function BigInteger$$$op_UnaryPlus$$Z665282C2(n1) {\n  return n1;\n}\nexport function BigInteger$$$FromInt64$$Z524259C1(x$$43) {\n  return BigInteger$$$$002Ector$$Z524259C1(x$$43);\n}\nexport function BigInteger$$$FromInt32$$Z524259A4(x$$44) {\n  return BigInteger$$$$002Ector$$Z524259A4(x$$44);\n}\n\nBigInteger.prototype.CompareTo = function (obj$$1) {\n  const this$$$1 = this;\n\n  if (obj$$1 instanceof BigInteger) {\n    const that$$1 = obj$$1;\n    return BigInteger$$$compare$$56F059C0(this$$$1, that$$1) | 0;\n  } else {\n    throw new Error(\"the objects are not comparable\\\\nParameter name: obj\");\n  }\n};","import { BigInteger$$$op_Inequality$$56F059C0 as BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0, BigInteger$$$op_Equality$$56F059C0 as BigInteger$0024$0024$0024op_Equality$0024$002456F059C0, BigInteger$$$op_GreaterThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0, BigInteger$$$op_GreaterThan$$56F059C0 as BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0, BigInteger$$$op_LessThanOrEqual$$56F059C0 as BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0, BigInteger$$$op_LessThan$$56F059C0 as BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0, BigInteger$$$op_ExclusiveOr$$56F059C0 as BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0, BigInteger$$$op_BitwiseOr$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0, BigInteger$$$op_BitwiseAnd$$56F059C0 as BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0, BigInteger$$$op_LeftShift$$62E082A2 as BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2, BigInteger$$$op_RightShift$$62E082A2 as BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2, BigInteger$$$op_UnaryPlus$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2, BigInteger$$$op_UnaryNegation$$Z665282C2 as BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2, BigInteger$$$op_Modulus$$56F059C0 as BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0, BigInteger$$$op_Division$$56F059C0 as BigInteger$0024$0024$0024op_Division$0024$002456F059C0, BigInteger$$$op_Multiply$$56F059C0 as BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0, BigInteger$$$op_Subtraction$$56F059C0 as BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0, BigInteger$$$op_Addition$$56F059C0 as BigInteger$0024$0024$0024op_Addition$0024$002456F059C0, BigInteger$$get_IsOne as BigInteger$0024$0024get_IsOne, BigInteger$$get_IsZero as BigInteger$0024$0024get_IsZero, BigInteger$$get_Sign as BigInteger$0024$0024get_Sign, BigInteger$$get_ToDecimal as BigInteger$0024$0024get_ToDecimal, BigInteger$$get_ToDouble as BigInteger$0024$0024get_ToDouble, BigInteger$$get_ToSingle as BigInteger$0024$0024get_ToSingle, BigInteger$$get_ToUInt64 as BigInteger$0024$0024get_ToUInt64, BigInteger$$get_ToInt64 as BigInteger$0024$0024get_ToInt64, BigInteger$$get_ToUInt32 as BigInteger$0024$0024get_ToUInt32, BigInteger$$get_ToInt32 as BigInteger$0024$0024get_ToInt32, BigInteger$$get_ToUInt16 as BigInteger$0024$0024get_ToUInt16, BigInteger$$get_ToInt16 as BigInteger$0024$0024get_ToInt16, BigInteger$$get_ToByte as BigInteger$0024$0024get_ToByte, BigInteger$$get_ToSByte as BigInteger$0024$0024get_ToSByte, BigInteger$$$$002Ector$$Z524259A4 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4, BigInteger$$$$002Ector$$Z524259C1 as BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1, BigInteger$$$get_Two as BigInteger$0024$0024$0024get_Two, BigInteger$$$get_One as BigInteger$0024$0024$0024get_One, BigInteger$$$Abs$$Z665282C2 as BigInteger$0024$0024$0024Abs$0024$0024Z665282C2, BigInteger$$$Pow$$62E082A2 as BigInteger$0024$0024$0024Pow$0024$002462E082A2, BigInteger$$$GreatestCommonDivisor$$56F059C0 as BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0, BigInteger$$$DivRem$$56F059C0 as BigInteger$0024$0024$0024DivRem$0024$002456F059C0, BigInteger$$$Parse$$Z721C83C5 as BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5, BigInteger$$$get_Zero as BigInteger$0024$0024$0024get_Zero, BigInteger } from \"./BigInt/z\";\nimport { fromInteger } from \"./Long.js\";\nimport { min, comparePrimitives, equals as equals$$1, structuralHash } from \"./Util.js\";\nimport { rangeNumber } from \"./Seq.js\";\nimport { fold, head, skipWhile, find, ofSeq } from \"./List.js\";\nimport { List } from \"./Types.js\";\nimport { fill, reverse, ofList } from \"./Array.js\";\nexport function isBigInt(x) {\n  return x instanceof BigInteger;\n}\nexport function tryParse(str) {\n  try {\n    const res = BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(str);\n    return [true, res];\n  } catch (matchValue) {\n    return [false, BigInteger$0024$0024$0024get_Zero()];\n  }\n}\nexport function parse(arg00) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(arg00);\n}\nexport function divRem(arg00$$1, arg01) {\n  return BigInteger$0024$0024$0024DivRem$0024$002456F059C0(arg00$$1, arg01);\n}\nexport function greatestCommonDivisor(arg00$$2, arg01$$1) {\n  return BigInteger$0024$0024$0024GreatestCommonDivisor$0024$002456F059C0(arg00$$2, arg01$$1);\n}\nexport function pow(arg00$$3, arg01$$2) {\n  return BigInteger$0024$0024$0024Pow$0024$002462E082A2(arg00$$3, arg01$$2);\n}\nexport function abs(arg00$$4) {\n  return BigInteger$0024$0024$0024Abs$0024$0024Z665282C2(arg00$$4);\n}\nexport const zero = BigInteger$0024$0024$0024get_Zero();\nexport const one = BigInteger$0024$0024$0024get_One();\nexport const two = BigInteger$0024$0024$0024get_Two();\nexport function fromString(s) {\n  return BigInteger$0024$0024$0024Parse$0024$0024Z721C83C5(s);\n}\nexport function fromZero() {\n  return BigInteger$0024$0024$0024get_Zero();\n}\nexport function fromOne() {\n  return BigInteger$0024$0024$0024get_One();\n}\nexport function fromInt64(i) {\n  return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(i);\n}\nexport function fromInt32(i$$1) {\n  if (i$$1 > 2147483647) {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259C1(fromInteger(i$$1, false, 6));\n  } else {\n    return BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(i$$1);\n  }\n}\nexport function toSByte(x$$1) {\n  return BigInteger$0024$0024get_ToSByte(x$$1);\n}\nexport function toByte(x$$2) {\n  return BigInteger$0024$0024get_ToByte(x$$2);\n}\nexport function toInt16(x$$3) {\n  return BigInteger$0024$0024get_ToInt16(x$$3);\n}\nexport function toUInt16(x$$4) {\n  return BigInteger$0024$0024get_ToUInt16(x$$4);\n}\nexport function toInt32(x$$5) {\n  return BigInteger$0024$0024get_ToInt32(x$$5);\n}\nexport function toUInt32(x$$6) {\n  return BigInteger$0024$0024get_ToUInt32(x$$6);\n}\nexport function toInt64(x$$7) {\n  return BigInteger$0024$0024get_ToInt64(x$$7);\n}\nexport function toUInt64(x$$8) {\n  return BigInteger$0024$0024get_ToUInt64(x$$8);\n}\nexport function toSingle(x$$9) {\n  return BigInteger$0024$0024get_ToSingle(x$$9);\n}\nexport function toDouble(x$$10) {\n  return BigInteger$0024$0024get_ToDouble(x$$10);\n}\nexport function toDecimal(x$$11) {\n  return BigInteger$0024$0024get_ToDecimal(x$$11);\n}\nexport function sign(x$$12) {\n  return BigInteger$0024$0024get_Sign(x$$12);\n}\nexport function isZero(x$$13) {\n  return BigInteger$0024$0024get_IsZero(x$$13);\n}\nexport function isOne(x$$14) {\n  return BigInteger$0024$0024get_IsOne(x$$14);\n}\nexport function hash(x$$15) {\n  return structuralHash(x$$15);\n}\nexport function compare(x$$16, y) {\n  return x$$16.CompareTo(y);\n}\nexport function equals(x$$17, y$$1) {\n  return equals$$1(x$$17, y$$1);\n}\nexport function toString(x$$18) {\n  return String(x$$18);\n}\nexport const get_Zero = BigInteger$0024$0024$0024get_Zero();\nexport const get_One = BigInteger$0024$0024$0024get_One();\nexport function op_Addition(arg00$$5, arg01$$3) {\n  return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(arg00$$5, arg01$$3);\n}\nexport function op_Subtraction(arg00$$6, arg01$$4) {\n  return BigInteger$0024$0024$0024op_Subtraction$0024$002456F059C0(arg00$$6, arg01$$4);\n}\nexport function op_Multiply(arg00$$7, arg01$$5) {\n  return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(arg00$$7, arg01$$5);\n}\nexport function op_Division(arg00$$8, arg01$$6) {\n  return BigInteger$0024$0024$0024op_Division$0024$002456F059C0(arg00$$8, arg01$$6);\n}\nexport function op_Modulus(arg00$$9, arg01$$7) {\n  return BigInteger$0024$0024$0024op_Modulus$0024$002456F059C0(arg00$$9, arg01$$7);\n}\nexport function op_UnaryNegation(arg00$$10) {\n  return BigInteger$0024$0024$0024op_UnaryNegation$0024$0024Z665282C2(arg00$$10);\n}\nexport function op_UnaryPlus(arg00$$11) {\n  return BigInteger$0024$0024$0024op_UnaryPlus$0024$0024Z665282C2(arg00$$11);\n}\nexport function op_RightShift(arg00$$12, arg01$$8) {\n  return BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2(arg00$$12, arg01$$8);\n}\nexport function op_LeftShift(arg00$$13, arg01$$9) {\n  return BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(arg00$$13, arg01$$9);\n}\nexport function op_BitwiseAnd(arg00$$14, arg01$$10) {\n  return BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(arg00$$14, arg01$$10);\n}\nexport function op_BitwiseOr(arg00$$15, arg01$$11) {\n  return BigInteger$0024$0024$0024op_BitwiseOr$0024$002456F059C0(arg00$$15, arg01$$11);\n}\nexport function op_ExclusiveOr(arg00$$16, arg01$$12) {\n  return BigInteger$0024$0024$0024op_ExclusiveOr$0024$002456F059C0(arg00$$16, arg01$$12);\n}\nexport function op_LessThan(arg00$$17, arg01$$13) {\n  return BigInteger$0024$0024$0024op_LessThan$0024$002456F059C0(arg00$$17, arg01$$13);\n}\nexport function op_LessThanOrEqual(arg00$$18, arg01$$14) {\n  return BigInteger$0024$0024$0024op_LessThanOrEqual$0024$002456F059C0(arg00$$18, arg01$$14);\n}\nexport function op_GreaterThan(arg00$$19, arg01$$15) {\n  return BigInteger$0024$0024$0024op_GreaterThan$0024$002456F059C0(arg00$$19, arg01$$15);\n}\nexport function op_GreaterThanOrEqual(arg00$$20, arg01$$16) {\n  return BigInteger$0024$0024$0024op_GreaterThanOrEqual$0024$002456F059C0(arg00$$20, arg01$$16);\n}\nexport function op_Equality(arg00$$21, arg01$$17) {\n  return BigInteger$0024$0024$0024op_Equality$0024$002456F059C0(arg00$$21, arg01$$17);\n}\nexport function op_Inequality(arg00$$22, arg01$$18) {\n  return BigInteger$0024$0024$0024op_Inequality$0024$002456F059C0(arg00$$22, arg01$$18);\n}\n\nfunction flipTwosComplement(currByte, lowBitFound) {\n  const matchValue$$1 = [currByte, lowBitFound];\n\n  if (matchValue$$1[1]) {\n    return [(currByte ^ 255) & 255, true];\n  } else if (matchValue$$1[0] === 0) {\n    return [0, false];\n  } else {\n    const firstBitIndex = find(function predicate(i$$2) {\n      return (currByte & 1 << i$$2) > 0;\n    }, ofSeq(rangeNumber(0, 1, 7))) | 0;\n    return [(currByte ^ 254 << firstBitIndex) & 255, true];\n  }\n}\n\nexport function toByteArray(value$$1) {\n  if (equals$$1(value$$1, zero)) {\n    return new Uint8Array([0]);\n  } else {\n    const isPositive = value$$1.CompareTo(zero) > 0;\n    const value$$2 = isPositive ? value$$1 : BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$1);\n    const mask32 = fromInt64(fromInteger(4294967295, false, 6));\n\n    const loop = function loop(accumBytes, consumeValue, lowBitFound$$1) {\n      loop: while (true) {\n        if (consumeValue.CompareTo(zero) <= 0) {\n          const accumBytes$$1 = isPositive ? skipWhile(function predicate$$1(b) {\n            return b === 0;\n          }, accumBytes) : skipWhile(function predicate$$2(b$$1) {\n            return b$$1 === 255;\n          }, accumBytes);\n          const isHighBitOne = (head(accumBytes$$1) & 128) !== 0;\n          const accumBytes$$2 = (isPositive ? isHighBitOne : false) ? new List(0, accumBytes$$1) : (!isPositive ? !isHighBitOne : false) ? new List(255, accumBytes$$1) : accumBytes$$1;\n          return reverse(ofList(accumBytes$$2, Uint8Array), Uint8Array);\n        } else {\n          const currValue = toUInt32(BigInteger$0024$0024$0024op_BitwiseAnd$0024$002456F059C0(consumeValue, mask32));\n\n          if (isPositive) {\n            const b0 = currValue & 0xFF;\n            const b1 = currValue >>> 8 & 0xFF;\n            const b2 = currValue >>> 16 & 0xFF;\n            const b3 = currValue >>> 24 & 0xFF;\n            const $accumBytes$$3 = accumBytes;\n            const $consumeValue$$4 = consumeValue;\n            accumBytes = new List(b3, new List(b2, new List(b1, new List(b0, $accumBytes$$3))));\n            consumeValue = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2($consumeValue$$4, 32);\n            lowBitFound$$1 = false;\n            continue loop;\n          } else {\n            const patternInput = flipTwosComplement(currValue & 0xFF, lowBitFound$$1);\n            const patternInput$$1 = flipTwosComplement(currValue >>> 8 & 0xFF, patternInput[1]);\n            const patternInput$$2 = flipTwosComplement(currValue >>> 16 & 0xFF, patternInput$$1[1]);\n            const patternInput$$3 = flipTwosComplement(currValue >>> 24 & 0xFF, patternInput$$2[1]);\n            const $accumBytes$$5 = accumBytes;\n            const $consumeValue$$6 = consumeValue;\n            accumBytes = new List(patternInput$$3[0], new List(patternInput$$2[0], new List(patternInput$$1[0], new List(patternInput[0], $accumBytes$$5))));\n            consumeValue = BigInteger$0024$0024$0024op_RightShift$0024$002462E082A2($consumeValue$$6, 32);\n            lowBitFound$$1 = patternInput$$3[1];\n            continue loop;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop(new List(), value$$2, false);\n  }\n}\nexport function fromByteArray(bytes) {\n  if (bytes == null) {\n    throw new Error(\"bytes\");\n  }\n\n  if (bytes.length === 0) {\n    return zero;\n  } else {\n    const isPositive$$1 = (bytes[bytes.length - 1] & 128) === 0;\n    const buffer = fill(new Uint8Array(4), 0, 4, 0);\n\n    const loop$$1 = function loop$$1(accumUInt32, currIndex, bytesRemaining, lowBitFound$$6) {\n      loop$$1: while (true) {\n        if (bytesRemaining === 0) {\n          const value$$14 = fold(function folder(acc, value$$12) {\n            return BigInteger$0024$0024$0024op_Addition$0024$002456F059C0(BigInteger$0024$0024$0024op_LeftShift$0024$002462E082A2(acc, 32), fromInt64(fromInteger(value$$12, false, 6)));\n          }, zero, accumUInt32);\n\n          if (isPositive$$1) {\n            return value$$14;\n          } else {\n            return BigInteger$0024$0024$0024op_Multiply$0024$002456F059C0(BigInteger$0024$0024$0024$0024002Ector$0024$0024Z524259A4(-1), value$$14);\n          }\n        } else {\n          const bytesToProcess = min(comparePrimitives, bytesRemaining, 4) | 0;\n\n          for (let i$$5 = 0; i$$5 <= bytesToProcess - 1; i$$5++) {\n            buffer[i$$5] = bytes[currIndex + i$$5];\n          }\n\n          if (isPositive$$1) {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 0);\n            const value$$15 = (((buffer[0] | buffer[1] << 8 >>> 0) >>> 0 | buffer[2] << 16 >>> 0) >>> 0 | buffer[3] << 24 >>> 0) >>> 0;\n            const $accumUInt32$$7 = accumUInt32;\n            const $bytesRemaining$$9 = bytesRemaining;\n            const $currIndex$$8 = currIndex;\n            accumUInt32 = new List(value$$15, $accumUInt32$$7);\n            currIndex = $currIndex$$8 + bytesToProcess;\n            bytesRemaining = $bytesRemaining$$9 - bytesToProcess;\n            lowBitFound$$6 = false;\n            continue loop$$1;\n          } else {\n            fill(buffer, bytesToProcess, 4 - bytesToProcess, 255);\n            const patternInput$$4 = flipTwosComplement(buffer[0], lowBitFound$$6);\n            const patternInput$$5 = flipTwosComplement(buffer[1], patternInput$$4[1]);\n            const patternInput$$6 = flipTwosComplement(buffer[2], patternInput$$5[1]);\n            const patternInput$$7 = flipTwosComplement(buffer[3], patternInput$$6[1]);\n            const value$$16 = (((patternInput$$4[0] | patternInput$$5[0] << 8 >>> 0) >>> 0 | patternInput$$6[0] << 16 >>> 0) >>> 0 | patternInput$$7[0] << 24 >>> 0) >>> 0;\n            const $accumUInt32$$10 = accumUInt32;\n            const $bytesRemaining$$12 = bytesRemaining;\n            const $currIndex$$11 = currIndex;\n            accumUInt32 = new List(value$$16, $accumUInt32$$10);\n            currIndex = $currIndex$$11 + bytesToProcess;\n            bytesRemaining = $bytesRemaining$$12 - bytesToProcess;\n            lowBitFound$$6 = patternInput$$7[1];\n            continue loop$$1;\n          }\n        }\n\n        break;\n      }\n    };\n\n    return loop$$1(new List(), 0, bytes.length, false);\n  }\n}","\nnamespace Thoth.Json\n\n[<RequireQualifiedAccess>]\nmodule Decode =\n\n    open System.Globalization\n    open Fable.Core\n    open Fable.Core.JsInterop\n\n    module internal Helpers =\n        [<Emit(\"typeof $0\")>]\n        let jsTypeof (_ : JsonValue) : string = jsNative\n\n        [<Emit(\"$0 instanceof SyntaxError\")>]\n        let isSyntaxError (_ : JsonValue) : bool = jsNative\n\n        let inline getField (fieldName: string) (o: JsonValue) = o?(fieldName)\n        let inline isString (o: JsonValue) : bool = o :? string\n\n        let inline isBoolean (o: JsonValue) : bool = o :? bool\n\n        let inline isNumber (o: JsonValue) : bool = jsTypeof o = \"number\"\n\n        let inline isArray (o: JsonValue) : bool = JS.Array.isArray(o)\n\n        [<Emit(\"$0 === null ? false : (Object.getPrototypeOf($0 || false) === Object.prototype)\")>]\n        let isObject (_ : JsonValue) : bool = jsNative\n\n        let inline isNaN (o: JsonValue) : bool = JS.Number.isNaN(!!o)\n\n        let inline isNullValue (o: JsonValue): bool = isNull o\n\n        [<Emit(\"-2147483648 < $0 && $0 < 2147483647 && ($0 | 0) === $0\")>]\n        let isValidIntRange (_: JsonValue) : bool = jsNative\n\n        [<Emit(\"isFinite($0) && !($0 % 1)\")>]\n        let isIntFinite (_: JsonValue) : bool = jsNative\n\n        let isUndefined (o: JsonValue): bool = jsTypeof o = \"undefined\"\n\n        [<Emit(\"JSON.stringify($0, null, 4) + ''\")>]\n        let anyToString (_: JsonValue) : string = jsNative\n\n        let inline isFunction (o: JsonValue) : bool = jsTypeof o = \"function\"\n\n        let inline objectKeys (o: JsonValue) : string seq = upcast JS.Object.keys(o)\n        let inline asBool (o: JsonValue): bool = unbox o\n        let inline asInt (o: JsonValue): int = unbox o\n        let inline asFloat (o: JsonValue): float = unbox o\n        let inline asString (o: JsonValue): string = unbox o\n        let inline asArray (o: JsonValue): JsonValue[] = unbox o\n\n    let private genericMsg msg value newLine =\n        try\n            \"Expecting \"\n                + msg\n                + \" but instead got:\"\n                + (if newLine then \"\\n\" else \" \")\n                + (Helpers.anyToString value)\n        with\n            | _ ->\n                \"Expecting \"\n                + msg\n                + \" but decoder failed. Couldn't report given value due to circular structure.\"\n                + (if newLine then \"\\n\" else \" \")\n\n    let private errorToString (path : string, error) =\n        let reason =\n            match error with\n            | BadPrimitive (msg, value) ->\n                genericMsg msg value false\n            | BadType (msg, value) ->\n                genericMsg msg value true\n            | BadPrimitiveExtra (msg, value, reason) ->\n                genericMsg msg value false + \"\\nReason: \" + reason\n            | BadField (msg, value) ->\n                genericMsg msg value true\n            | BadPath (msg, value, fieldName) ->\n                genericMsg msg value true + (\"\\nNode `\" + fieldName + \"` is unkown.\")\n            | TooSmallArray (msg, value) ->\n                \"Expecting \" + msg + \".\\n\" + (Helpers.anyToString value)\n            | BadOneOf messages ->\n                \"I run into the following problems:\\n\\n\" + String.concat \"\\n\\n\" messages\n            | FailMessage msg ->\n                \"I run into a `fail` decoder: \" + msg\n\n        match error with\n        | BadOneOf _ ->\n            // Don't need to show the path here because each error case will show it's own path\n            reason\n        | _ ->\n            \"Error at: `\" + path + \"`\\n\" + reason\n\n    ///////////////\n    // Runners ///\n    /////////////\n\n    let fromValue (path : string) (decoder : Decoder<'T>) =\n        fun value ->\n            match decoder path value with\n            | Ok success ->\n                Ok success\n            | Error error ->\n                Error (errorToString error)\n\n    let fromString (decoder : Decoder<'T>) =\n        fun value ->\n            try\n                let json = JS.JSON.parse value\n                fromValue \"$\" decoder json\n            with\n                | ex when Helpers.isSyntaxError ex ->\n                    Error(\"Given an invalid JSON: \" + ex.Message)\n\n    let unsafeFromString (decoder : Decoder<'T>) =\n        fun value ->\n            match fromString decoder value with\n            | Ok x -> x\n            | Error msg -> failwith msg\n\n    [<System.Obsolete(\"Please use fromValue instead\")>]\n    let decodeValue (path : string) (decoder : Decoder<'T>) = fromValue path decoder\n\n    [<System.Obsolete(\"Please use fromString instead\")>]\n    let decodeString (decoder : Decoder<'T>) = fromString decoder\n\n    //////////////////\n    // Primitives ///\n    ////////////////\n\n    let string : Decoder<string> =\n        fun path value ->\n            if Helpers.isString value then\n                Ok(Helpers.asString value)\n            else\n                (path, BadPrimitive(\"a string\", value)) |> Error\n\n    let guid : Decoder<System.Guid> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.Guid.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a guid\", value)) |> Error\n            else (path, BadPrimitive(\"a guid\", value)) |> Error\n\n    let int : Decoder<int> =\n        fun path value ->\n            if Helpers.isNumber value then\n                if Helpers.isValidIntRange value then\n                    Ok(Helpers.asInt value)\n                else\n                    (path, BadPrimitiveExtra(\"an int\", value, \"Value was either too large or too small for an int\")) |> Error\n            elif Helpers.isString value then\n                match System.Int32.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"an int\", value)) |> Error\n            else\n                (path, BadPrimitive(\"an int\", value)) |> Error\n\n\n    let int64 : Decoder<int64> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Helpers.asInt value |> int64 |> Ok\n            elif Helpers.isString value then\n                match System.Int64.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"an int64\", value)) |> Error\n            else (path, BadPrimitive(\"an int64\", value)) |> Error\n\n    let uint32 : Decoder<uint32> =\n        fun path value ->\n            if Helpers.isNumber value then\n                let x = Helpers.asFloat value\n                if x >= 0. && x <= (float System.UInt32.MaxValue) then\n                    Helpers.asInt value |> uint32 |> Ok\n                else\n                    (path, BadPrimitiveExtra(\"an uint32\", value, \"Value was either too large or too small for an uint32\")) |> Error\n            elif Helpers.isString value then\n                match System.UInt32.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"an uint32\", value)) |> Error\n            else (path, BadPrimitive(\"an uint32\", value)) |> Error\n\n    let uint64 : Decoder<uint64> =\n        fun path value ->\n            if Helpers.isNumber value then\n                let x = Helpers.asFloat value\n                if x >= 0. && x <= (float System.UInt64.MaxValue) then\n                    Helpers.asInt value |> uint64 |> Ok\n                else\n                    (path, BadPrimitiveExtra(\"an uint64\", value, \"Value was either too large or too small for an uint64\")) |> Error\n            elif Helpers.isString value then\n                match System.UInt64.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"an uint64\", value)) |> Error\n            else (path, BadPrimitive(\"an uint64\", value)) |> Error\n\n    let bigint : Decoder<bigint> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Helpers.asInt value |> bigint |> Ok\n            elif Helpers.isString value then\n                // TODO: BigInt.TryParse has been added in Fable 2.1.4\n                // Don't use it for now to support lower Fable versions\n                try\n                    bigint.Parse (Helpers.asString value) |> Ok\n                with _ ->\n                    (path, BadPrimitive(\"a bigint\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a bigint\", value)) |> Error\n\n    let bool : Decoder<bool> =\n        fun path value ->\n            if Helpers.isBoolean value then\n                Ok(Helpers.asBool value)\n            else\n                (path, BadPrimitive(\"a boolean\", value)) |> Error\n\n    let float : Decoder<float> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Ok(Helpers.asFloat value)\n            else\n                (path, BadPrimitive(\"a float\", value)) |> Error\n\n    let decimal : Decoder<decimal> =\n        fun path value ->\n            if Helpers.isNumber value then\n                Helpers.asFloat value |> decimal |> Ok\n            elif Helpers.isString value then\n                match System.Decimal.TryParse (Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a decimal\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a decimal\", value)) |> Error\n\n    let datetime : Decoder<System.DateTime> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.DateTime.TryParse (Helpers.asString value) with\n                | true, x -> x.ToUniversalTime() |> Ok\n                | _ -> (path, BadPrimitive(\"a datetime\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a datetime\", value)) |> Error\n\n    let datetimeOffset : Decoder<System.DateTimeOffset> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.DateTimeOffset.TryParse(Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a datetimeoffset\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a datetime\", value)) |> Error\n\n    let timespan : Decoder<System.TimeSpan> =\n        fun path value ->\n            if Helpers.isString value then\n                match System.TimeSpan.TryParse(Helpers.asString value) with\n                | true, x -> Ok x\n                | _ -> (path, BadPrimitive(\"a timespan\", value)) |> Error\n            else\n                (path, BadPrimitive(\"a timespan\", value)) |> Error\n\n    /////////////////////////\n    // Object primitives ///\n    ///////////////////////\n\n    let private decodeMaybeNull path (decoder : Decoder<'T>) value =\n        // The decoder may be an option decoder so give it an opportunity to check null values\n        match decoder path value with\n        | Ok v -> Ok(Some v)\n        | Error _ when Helpers.isNullValue value -> Ok None\n        | Error er -> Error er\n\n    let optional (fieldName : string) (decoder : Decoder<'value>) : Decoder<'value option> =\n        fun path value ->\n            if Helpers.isObject value then\n                let fieldValue = Helpers.getField fieldName value\n                if Helpers.isUndefined fieldValue then Ok None\n                else decodeMaybeNull (path + \".\" + fieldName) decoder fieldValue\n            else\n                Error(path, BadType(\"an object\", value))\n\n    let private badPathError fieldNames currentPath value =\n        let currentPath = defaultArg currentPath (\"$\"::fieldNames |> String.concat \".\")\n        let msg = \"an object with path `\" + (String.concat \".\" fieldNames) + \"`\"\n        Error(currentPath, BadPath (msg, value, List.tryLast fieldNames |> Option.defaultValue \"\"))\n\n    let optionalAt (fieldNames : string list) (decoder : Decoder<'value>) : Decoder<'value option> =\n        fun firstPath firstValue ->\n            ((firstPath, firstValue, None), fieldNames)\n            ||> List.fold (fun (curPath, curValue, res) field ->\n                match res with\n                | Some _ -> curPath, curValue, res\n                | None ->\n                    if Helpers.isNullValue curValue then\n                        let res = badPathError fieldNames (Some curPath) firstValue\n                        curPath, curValue, Some res\n                    elif Helpers.isObject curValue then\n                        let curValue = Helpers.getField field curValue\n                        curPath + \".\" + field, curValue, None\n                    else\n                        let res = Error(curPath, BadType(\"an object\", curValue))\n                        curPath, curValue, Some res)\n            |> function\n                | _, _, Some res -> res\n                | lastPath, lastValue, None ->\n                    if Helpers.isUndefined lastValue then Ok None\n                    else decodeMaybeNull lastPath decoder lastValue\n\n    let field (fieldName: string) (decoder : Decoder<'value>) : Decoder<'value> =\n        fun path value ->\n            if Helpers.isObject value then\n                let fieldValue = Helpers.getField fieldName value\n                if Helpers.isUndefined fieldValue then\n                    Error(path, BadField (\"an object with a field named `\" + fieldName + \"`\", value))\n                else\n                    decoder (path + \".\" + fieldName) fieldValue\n            else\n                Error(path, BadType(\"an object\", value))\n\n    let at (fieldNames: string list) (decoder : Decoder<'value>) : Decoder<'value> =\n        fun firstPath firstValue ->\n            ((firstPath, firstValue, None), fieldNames)\n            ||> List.fold (fun (curPath, curValue, res) field ->\n                match res with\n                | Some _ -> curPath, curValue, res\n                | None ->\n                    if Helpers.isNullValue curValue then\n                        let res = badPathError fieldNames (Some curPath) firstValue\n                        curPath, curValue, Some res\n                    elif Helpers.isObject curValue then\n                        let curValue = Helpers.getField field curValue\n                        if Helpers.isUndefined curValue then\n                            let res = badPathError fieldNames None firstValue\n                            curPath, curValue, Some res\n                        else\n                            curPath + \".\" + field, curValue, None\n                    else\n                        let res = Error(curPath, BadType(\"an object\", curValue))\n                        curPath, curValue, Some res)\n            |> function\n                | _, _, Some res -> res\n                | lastPath, lastValue, None ->\n                    decoder lastPath lastValue\n\n    let index (requestedIndex: int) (decoder : Decoder<'value>) : Decoder<'value> =\n        fun path value ->\n            let currentPath = path + \".[\" + (Operators.string requestedIndex) + \"]\"\n            if Helpers.isArray value then\n                let vArray = Helpers.asArray value\n                if requestedIndex < vArray.Length then\n                    decoder currentPath (vArray.[requestedIndex])\n                else\n                    let msg =\n                        \"a longer array. Need index `\"\n                            + (requestedIndex.ToString())\n                            + \"` but there are only `\"\n                            + (vArray.Length.ToString())\n                            + \"` entries\"\n\n                    (currentPath, TooSmallArray(msg, value))\n                    |> Error\n            else\n                (currentPath, BadPrimitive(\"an array\", value))\n                |> Error\n\n    let option (decoder : Decoder<'value>) : Decoder<'value option> =\n        fun path value ->\n            if Helpers.isNullValue value then Ok None\n            else decoder path value |> Result.map Some\n\n    //////////////////////\n    // Data structure ///\n    ////////////////////\n\n    let list (decoder : Decoder<'value>) : Decoder<'value list> =\n        fun path value ->\n            if Helpers.isArray value then\n                let mutable i = -1\n                let tokens = Helpers.asArray value\n                (Ok [], tokens) ||> Array.fold (fun acc value ->\n                    i <- i + 1\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match decoder (path + \".[\" + (i.ToString()) + \"]\") value with\n                        | Error er -> Error er\n                        | Ok value -> Ok (value::acc))\n                |> Result.map List.rev\n            else\n                (path, BadPrimitive (\"a list\", value))\n                |> Error\n\n    let array (decoder : Decoder<'value>) : Decoder<'value array> =\n        fun path value ->\n            if Helpers.isArray value then\n                let mutable i = -1\n                let tokens = Helpers.asArray value\n                let arr = Array.zeroCreate tokens.Length\n                (Ok arr, tokens) ||> Array.fold (fun acc value ->\n                    i <- i + 1\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match decoder (path + \".[\" + (i.ToString()) + \"]\") value with\n                        | Error er -> Error er\n                        | Ok value -> acc.[i] <- value; Ok acc)\n            else\n                (path, BadPrimitive (\"an array\", value))\n                |> Error\n\n    let keyValuePairs (decoder : Decoder<'value>) : Decoder<(string * 'value) list> =\n        fun path value ->\n            if Helpers.isObject value then\n                (Ok [], Helpers.objectKeys value) ||> Seq.fold (fun acc prop ->\n                    match acc with\n                    | Error _ -> acc\n                    | Ok acc ->\n                        match Helpers.getField prop value |> decoder path with\n                        | Error er -> Error er\n                        | Ok value -> (prop, value)::acc |> Ok)\n                |> Result.map List.rev\n            else\n                (path, BadPrimitive (\"an object\", value))\n                |> Error\n\n    //////////////////////////////\n    // Inconsistent Structure ///\n    ////////////////////////////\n\n    let oneOf (decoders : Decoder<'value> list) : Decoder<'value> =\n        fun path value ->\n            let rec runner (decoders : Decoder<'value> list) (errors : string list) =\n                match decoders with\n                | head::tail ->\n                    match fromValue path head value with\n                    | Ok v ->\n                        Ok v\n                    | Error error -> runner tail (errors @ [error])\n                | [] -> (path, BadOneOf errors) |> Error\n\n            runner decoders []\n\n    //////////////////////\n    // Fancy decoding ///\n    ////////////////////\n\n    let nil (output : 'a) : Decoder<'a> =\n        fun path value ->\n            if Helpers.isNullValue value then\n                Ok output\n            else\n                (path, BadPrimitive(\"null\", value)) |> Error\n\n    let value _ v = Ok v\n\n    let succeed (output : 'a) : Decoder<'a> =\n        fun _ _ ->\n            Ok output\n\n    let fail (msg: string) : Decoder<'a> =\n        fun path _ ->\n            (path, FailMessage msg) |> Error\n\n    let andThen (cb: 'a -> Decoder<'b>) (decoder : Decoder<'a>) : Decoder<'b> =\n        fun path value ->\n            match decoder path value with\n            | Error error -> Error error\n            | Ok result -> cb result path value\n\n    /////////////////////\n    // Map functions ///\n    ///////////////////\n\n    let map\n        (ctor : 'a -> 'value)\n        (d1 : Decoder<'a>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value with\n            | Ok v1 -> Ok (ctor v1)\n            | Error er -> Error er\n\n    let map2\n        (ctor : 'a -> 'b -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value with\n            | Ok v1, Ok v2 -> Ok (ctor v1 v2)\n            | Error er,_ -> Error er\n            | _,Error er -> Error er\n\n    let map3\n        (ctor : 'a -> 'b -> 'c -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value with\n            | Ok v1, Ok v2, Ok v3 -> Ok (ctor v1 v2 v3)\n            | Error er,_,_ -> Error er\n            | _,Error er,_ -> Error er\n            | _,_,Error er -> Error er\n\n    let map4\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4 -> Ok (ctor v1 v2 v3 v4)\n            | Error er,_,_,_ -> Error er\n            | _,Error er,_,_ -> Error er\n            | _,_,Error er,_ -> Error er\n            | _,_,_,Error er -> Error er\n\n    let map5\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5 -> Ok (ctor v1 v2 v3 v4 v5)\n            | Error er,_,_,_,_ -> Error er\n            | _,Error er,_,_,_ -> Error er\n            | _,_,Error er,_,_ -> Error er\n            | _,_,_,Error er,_ -> Error er\n            | _,_,_,_,Error er -> Error er\n\n    let map6\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>)\n        (d6 : Decoder<'f>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value, d6 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5, Ok v6 -> Ok (ctor v1 v2 v3 v4 v5 v6)\n            | Error er,_,_,_,_,_ -> Error er\n            | _,Error er,_,_,_,_ -> Error er\n            | _,_,Error er,_,_,_ -> Error er\n            | _,_,_,Error er,_,_ -> Error er\n            | _,_,_,_,Error er,_ -> Error er\n            | _,_,_,_,_,Error er -> Error er\n\n    let map7\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>)\n        (d6 : Decoder<'f>)\n        (d7 : Decoder<'g>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value, d6 path value, d7 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5, Ok v6, Ok v7 -> Ok (ctor v1 v2 v3 v4 v5 v6 v7)\n            | Error er,_,_,_,_,_,_ -> Error er\n            | _,Error er,_,_,_,_,_ -> Error er\n            | _,_,Error er,_,_,_,_ -> Error er\n            | _,_,_,Error er,_,_,_ -> Error er\n            | _,_,_,_,Error er,_,_ -> Error er\n            | _,_,_,_,_,Error er,_ -> Error er\n            | _,_,_,_,_,_,Error er -> Error er\n\n    let map8\n        (ctor : 'a -> 'b -> 'c -> 'd -> 'e -> 'f -> 'g -> 'h -> 'value)\n        (d1 : Decoder<'a>)\n        (d2 : Decoder<'b>)\n        (d3 : Decoder<'c>)\n        (d4 : Decoder<'d>)\n        (d5 : Decoder<'e>)\n        (d6 : Decoder<'f>)\n        (d7 : Decoder<'g>)\n        (d8 : Decoder<'h>) : Decoder<'value> =\n        fun path value ->\n            match d1 path value, d2 path value, d3 path value, d4 path value, d5 path value, d6 path value, d7 path value, d8 path value with\n            | Ok v1, Ok v2, Ok v3, Ok v4, Ok v5, Ok v6, Ok v7, Ok v8 -> Ok (ctor v1 v2 v3 v4 v5 v6 v7 v8)\n            | Error er,_,_,_,_,_,_,_ -> Error er\n            | _,Error er,_,_,_,_,_,_ -> Error er\n            | _,_,Error er,_,_,_,_,_ -> Error er\n            | _,_,_,Error er,_,_,_,_ -> Error er\n            | _,_,_,_,Error er,_,_,_ -> Error er\n            | _,_,_,_,_,Error er,_,_ -> Error er\n            | _,_,_,_,_,_,Error er,_ -> Error er\n            | _,_,_,_,_,_,_,Error er -> Error er\n\n    let dict (decoder : Decoder<'value>) : Decoder<Map<string, 'value>> =\n        map Map.ofList (keyValuePairs decoder)\n\n    //////////////////////\n    // Object builder ///\n    ////////////////////\n\n    type IRequiredGetter =\n        abstract Field : string -> Decoder<'a> -> 'a\n        abstract At : List<string> -> Decoder<'a> -> 'a\n        abstract Raw : Decoder<'a> -> 'a\n\n    type IOptionalGetter =\n        abstract Field : string -> Decoder<'a> -> 'a option\n        abstract At : List<string> -> Decoder<'a> -> 'a option\n        abstract Raw : Decoder<'a> -> 'a option\n\n    type IGetters =\n        abstract Required: IRequiredGetter\n        abstract Optional: IOptionalGetter\n\n    let private unwrapWith (errors: ResizeArray<DecoderError>) path (decoder: Decoder<'T>) value: 'T =\n        match decoder path value with\n        | Ok v -> v\n        | Error er -> errors.Add(er); Unchecked.defaultof<'T>\n\n    type Getters<'T>(path: string, v: 'T) =\n        let mutable errors = ResizeArray<DecoderError>()\n        let required =\n            { new IRequiredGetter with\n                member __.Field (fieldName : string) (decoder : Decoder<_>) =\n                    unwrapWith errors path (field fieldName decoder) v\n                member __.At (fieldNames : string list) (decoder : Decoder<_>) =\n                    unwrapWith errors path (at fieldNames decoder) v\n                member __.Raw (decoder: Decoder<_>) =\n                    unwrapWith errors path decoder v }\n        let optional =\n            { new IOptionalGetter with\n                member __.Field (fieldName : string) (decoder : Decoder<_>) =\n                    unwrapWith errors path (optional fieldName decoder) v\n                member __.At (fieldNames : string list) (decoder : Decoder<_>) =\n                    unwrapWith errors path (optionalAt fieldNames decoder) v\n                member __.Raw (decoder: Decoder<_>) =\n                    match decoder path v with\n                    | Ok v -> Some v\n                    | Error((_, reason) as error) ->\n                        match reason with\n                        | BadPrimitive(_,v)\n                        | BadPrimitiveExtra(_,v,_)\n                        | BadType(_,v) ->\n                            if Helpers.isNullValue v then None\n                            else errors.Add(error); Unchecked.defaultof<_>\n                        | BadField _\n                        | BadPath _ -> None\n                        | TooSmallArray _\n                        | FailMessage _\n                        | BadOneOf _ -> errors.Add(error); Unchecked.defaultof<_> }\n        member __.Errors: _ list = Seq.toList errors\n        interface IGetters with\n            member __.Required = required\n            member __.Optional = optional\n\n    let object (builder: IGetters -> 'value) : Decoder<'value> =\n        fun path v ->\n            let getters = Getters(path, v)\n            let result = builder getters\n            match getters.Errors with\n            | [] -> Ok result\n            | fst::_ as errors ->\n                if errors.Length > 1 then\n                    let errors = List.map errorToString errors\n                    (path, BadOneOf errors) |> Error\n                else\n                    Error fst\n\n    ///////////////////////\n    // Tuples decoders ///\n    ////////////////////\n\n    let tuple2 (decoder1: Decoder<'T1>) (decoder2: Decoder<'T2>) : Decoder<'T1 * 'T2> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                succeed (v1, v2)\n            )\n        )\n\n    let tuple3 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>) : Decoder<'T1 * 'T2 * 'T3> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    succeed (v1, v2, v3)\n                )\n            )\n        )\n\n    let tuple4 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>) : Decoder<'T1 * 'T2 * 'T3 * 'T4> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        succeed (v1, v2, v3, v4)\n                    )\n                )\n            )\n        )\n\n    let tuple5 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            succeed (v1, v2, v3, v4, v5)\n                        )\n                    )\n                )\n            )\n        )\n\n    let tuple6 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>)\n               (decoder6: Decoder<'T6>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            index 5 decoder6\n                            |> andThen (fun v6 ->\n                                succeed (v1, v2, v3, v4, v5, v6)\n                            )\n                        )\n                    )\n                )\n            )\n        )\n\n    let tuple7 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>)\n               (decoder6: Decoder<'T6>)\n               (decoder7: Decoder<'T7>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            index 5 decoder6\n                            |> andThen (fun v6 ->\n                                index 6 decoder7\n                                |> andThen (fun v7 ->\n                                    succeed (v1, v2, v3, v4, v5, v6, v7)\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n\n    let tuple8 (decoder1: Decoder<'T1>)\n               (decoder2: Decoder<'T2>)\n               (decoder3: Decoder<'T3>)\n               (decoder4: Decoder<'T4>)\n               (decoder5: Decoder<'T5>)\n               (decoder6: Decoder<'T6>)\n               (decoder7: Decoder<'T7>)\n               (decoder8: Decoder<'T8>) : Decoder<'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8> =\n        index 0 decoder1\n        |> andThen (fun v1 ->\n            index 1 decoder2\n            |> andThen (fun v2 ->\n                index 2 decoder3\n                |> andThen (fun v3 ->\n                    index 3 decoder4\n                    |> andThen (fun v4 ->\n                        index 4 decoder5\n                        |> andThen (fun v5 ->\n                            index 5 decoder6\n                            |> andThen (fun v6 ->\n                                index 6 decoder7\n                                |> andThen (fun v7 ->\n                                    index 7 decoder8\n                                    |> andThen (fun v8 ->\n                                        succeed (v1, v2, v3, v4, v5, v6, v7, v8)\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        )\n\n    //////////////////\n    // Reflection ///\n    ////////////////\n\n    open FSharp.Reflection\n\n    // As generics are erased by Fable, let's just do an unsafe cast for performance\n    let inline boxDecoder (d: Decoder<'T>): BoxedDecoder =\n        !!d // d >> Result.map box\n\n    let inline unboxDecoder (d: BoxedDecoder): Decoder<'T> =\n        !!d // d >> Result.map unbox\n\n    // This is used to force Fable use a generic comparer for map keys\n    let private toMap<'key, 'value when 'key: comparison> (xs: ('key*'value) seq) = Map.ofSeq xs\n    let private toSet<'key when 'key: comparison> (xs: 'key seq) = Set.ofSeq xs\n\n    let private autoObject (decoderInfos: (string * BoxedDecoder)[]) (path : string) (value: JsonValue) =\n        if not (Helpers.isObject value) then\n            (path, BadPrimitive (\"an object\", value)) |> Error\n        else\n            (decoderInfos, Ok []) ||> Array.foldBack (fun (name, decoder) acc ->\n                match acc with\n                | Error _ -> acc\n                | Ok result ->\n                    Helpers.getField name value\n                    |> decoder (path + \".\" + name)\n                    |> Result.map (fun v -> v::result))\n\n    let private autoObject2 (keyDecoder: BoxedDecoder) (valueDecoder: BoxedDecoder) (path : string) (value: JsonValue) =\n        if not (Helpers.isObject value) then\n            (path, BadPrimitive (\"an object\", value)) |> Error\n        else\n            (Ok [], Helpers.objectKeys(value)) ||> Seq.fold (fun acc name ->\n                match acc with\n                | Error _ -> acc\n                | Ok acc ->\n                    match keyDecoder path name with\n                    | Error er -> Error er\n                    | Ok k ->\n                        Helpers.getField name value\n                        |> valueDecoder (path + \".\" + name)\n                        |> function\n                            | Error er -> Error er\n                            | Ok v -> (k,v)::acc |> Ok)\n\n    let private mixedArray msg (decoders: BoxedDecoder[]) (path: string) (values: JsonValue[]): Result<JsonValue list, DecoderError> =\n        if decoders.Length <> values.Length then\n            (path, sprintf \"Expected %i %s but got %i\" decoders.Length msg values.Length\n            |> FailMessage) |> Error\n        else\n            (values, decoders, Ok [])\n            |||> Array.foldBack2 (fun value decoder acc ->\n                match acc with\n                | Error _ -> acc\n                | Ok result -> decoder path value |> Result.map (fun v -> v::result))\n\n    let rec private makeUnion extra isCamelCase t name (path : string) (values: JsonValue[]) =\n        let uci =\n            FSharpType.GetUnionCases(t, allowAccessToPrivateRepresentation=true)\n            |> Array.tryFind (fun x -> x.Name = name)\n        match uci with\n        | None -> (path, FailMessage(\"Cannot find case \" + name + \" in \" + t.FullName)) |> Error\n        | Some uci ->\n            if values.Length = 0 then\n                FSharpValue.MakeUnion(uci, [||], allowAccessToPrivateRepresentation=true) |> Ok\n            else\n                let decoders = uci.GetFields() |> Array.map (fun fi -> autoDecoder extra isCamelCase false fi.PropertyType)\n                mixedArray \"union fields\" decoders path values\n                |> Result.map (fun values -> FSharpValue.MakeUnion(uci, List.toArray values, allowAccessToPrivateRepresentation=true))\n\n    and private autoDecodeRecordsAndUnions extra (isCamelCase : bool) (isOptional : bool) (t: System.Type) : BoxedDecoder =\n        if FSharpType.IsRecord(t, allowAccessToPrivateRepresentation=true) then\n            let decoders =\n                FSharpType.GetRecordFields(t, allowAccessToPrivateRepresentation=true)\n                |> Array.map (fun fi ->\n                    let name =\n                        if isCamelCase then fi.Name.[..0].ToLowerInvariant() + fi.Name.[1..]\n                        else fi.Name\n                    name, autoDecoder extra isCamelCase false fi.PropertyType)\n            fun path value ->\n                autoObject decoders path value\n                |> Result.map (fun xs -> FSharpValue.MakeRecord(t, List.toArray xs, allowAccessToPrivateRepresentation=true))\n\n        elif FSharpType.IsUnion(t, allowAccessToPrivateRepresentation=true) then\n            fun path (value: JsonValue) ->\n                if Helpers.isString(value) then\n                    let name = Helpers.asString value\n                    makeUnion extra isCamelCase t name path [||]\n                elif Helpers.isArray(value) then\n                    let values = Helpers.asArray value\n                    let name = Helpers.asString values.[0]\n                    makeUnion extra isCamelCase t name path values.[1..]\n                else (path, BadPrimitive(\"a string or array\", value)) |> Error\n\n        else\n            if isOptional then\n                // The error will only happen at runtime if the value is not null\n                // See https://github.com/MangelMaxime/Thoth/pull/84#issuecomment-444837773\n                boxDecoder(fun path value -> Error(path, BadType(\"an extra coder for \" + t.FullName, value)))\n            else\n                // TODO: `failwithf \"... %s\" t.FullName` doesn't fail immediately in Fable, investigate\n                sprintf \"Cannot generate auto decoder for %s. Please pass an extra decoder.\" t.FullName |> failwith\n\n    and private autoDecoder (extra: ExtraCoders) isCamelCase (isOptional : bool) (t: System.Type) : BoxedDecoder =\n      let fullname = t.FullName\n      match Map.tryFind fullname extra with\n      | Some(_,decoder) -> decoder\n      | None ->\n        if t.IsArray then\n            let decoder = t.GetElementType() |> autoDecoder extra isCamelCase false\n            array decoder |> boxDecoder\n        elif t.IsGenericType then\n            if FSharpType.IsTuple(t) then\n                let decoders = FSharpType.GetTupleElements(t) |> Array.map (autoDecoder extra isCamelCase false)\n                fun path value ->\n                    if Helpers.isArray value then\n                        mixedArray \"tuple elements\" decoders path (Helpers.asArray value)\n                        |> Result.map (fun xs -> FSharpValue.MakeTuple(List.toArray xs, t))\n                    else (path, BadPrimitive (\"an array\", value)) |> Error\n            else\n                let fullname = t.GetGenericTypeDefinition().FullName\n                if fullname = typedefof<obj option>.FullName then\n                    t.GenericTypeArguments.[0] |> (autoDecoder extra isCamelCase true) |> option |> boxDecoder\n                elif fullname = typedefof<obj list>.FullName then\n                    t.GenericTypeArguments.[0] |> (autoDecoder extra isCamelCase false) |> list |> boxDecoder\n                elif fullname = typedefof< Map<string, obj> >.FullName then\n                    let keyDecoder = t.GenericTypeArguments.[0] |> autoDecoder extra isCamelCase false\n                    let valueDecoder = t.GenericTypeArguments.[1] |> autoDecoder extra isCamelCase false\n                    oneOf [\n                        autoObject2 keyDecoder valueDecoder\n                        list (tuple2 keyDecoder valueDecoder)\n                    ] |> map (fun ar -> toMap (unbox ar) |> box)\n                elif fullname = typedefof< Set<string> >.FullName then\n                    let decoder = t.GenericTypeArguments.[0] |> autoDecoder extra isCamelCase false\n                    fun path value ->\n                        match array decoder path value with\n                        | Error er -> Error er\n                        | Ok ar -> toSet (unbox ar) |> box |> Ok\n                else\n                    autoDecodeRecordsAndUnions extra isCamelCase isOptional t\n        else\n            if fullname = typeof<bool>.FullName then\n                boxDecoder bool\n            elif fullname = typeof<string>.FullName then\n                boxDecoder string\n            elif fullname = typeof<int>.FullName then\n                boxDecoder int\n            elif fullname = typeof<uint32>.FullName then\n                boxDecoder uint32\n            elif fullname = typeof<float>.FullName then\n                boxDecoder float\n            // These number types require extra libraries in Fable. To prevent penalizing\n            // all users, extra decoders (withInt64, etc) must be passed when they're needed.\n\n            // elif fullname = typeof<int64>.FullName then\n            //     boxDecoder int64\n            // elif fullname = typeof<uint64>.FullName then\n            //     boxDecoder uint64\n            // elif fullname = typeof<bigint>.FullName then\n            //     boxDecoder bigint\n            // elif fullname = typeof<decimal>.FullName then\n            //     boxDecoder decimal\n            elif fullname = typeof<System.DateTime>.FullName then\n                boxDecoder datetime\n            elif fullname = typeof<System.DateTimeOffset>.FullName then\n                boxDecoder datetimeOffset\n            elif fullname = typeof<System.TimeSpan>.FullName then\n                boxDecoder timespan\n            elif fullname = typeof<System.Guid>.FullName then\n                boxDecoder guid\n            elif fullname = typeof<obj>.FullName then\n                fun _ v -> Ok v\n            else autoDecodeRecordsAndUnions extra isCamelCase isOptional t\n\n    type Auto =\n        /// ATTENTION: Use this only when other arguments (isCamelCase, extra) don't change\n        static member generateDecoderCached<'T>(?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Decoder<'T> =\n            let t = Util.resolveType resolver\n            Util.CachedDecoders.GetOrAdd(t.FullName, fun _ ->\n                let isCamelCase = defaultArg isCamelCase false\n                let extra = match extra with Some e -> e | None -> Map.empty\n                autoDecoder extra isCamelCase false t) |> unboxDecoder\n\n        static member generateDecoder<'T>(?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Decoder<'T> =\n            let isCamelCase = defaultArg isCamelCase false\n            let extra = match extra with Some e -> e | None -> Map.empty\n            Util.resolveType resolver |> autoDecoder extra isCamelCase false |> unboxDecoder\n\n        static member fromString<'T>(json: string, ?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): Result<'T, string> =\n            let decoder = Auto.generateDecoder(?isCamelCase=isCamelCase, ?extra=extra, ?resolver=resolver)\n            fromString decoder json\n\n        static member unsafeFromString<'T>(json: string, ?isCamelCase : bool, ?extra: ExtraCoders, [<Inject>] ?resolver: ITypeResolver<'T>): 'T =\n            let decoder = Auto.generateDecoder(?isCamelCase=isCamelCase, ?extra=extra, ?resolver=resolver)\n            match fromString decoder json with\n            | Ok x -> x\n            | Error msg -> failwith msg\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Section =\n\n    type Option =\n        | Props of IHTMLProp list\n        | CustomClass of string\n        /// Add `is-medium` class\n        | [<CompiledName(\"is-medium\")>] IsMedium\n        /// Add `is-large` class\n        | [<CompiledName(\"is-large\")>] IsLarge\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <section class=\"section\"></section>\n    let section (options: Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsMedium\n            | IsLarge -> result.AddCaseName option\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"section\").ToReactElement(section, children)\n","[<AutoOpen>]\nmodule Database\n\nopen System\nopen Browser\nopen Fable.Core\nopen Fable.Core.JsInterop\nopen Thoth.Json\n\n/// Shared types between the Client and the Database part\n\n/// If we update the database content or structure we need to increment this value\nlet [<Literal>] CurrentVersion = 9\n\n\nmodule Encode =\n    let datetime (date : DateTime) =\n        date.ToString(\"O\") |> Encode.string\n\ntype User =\n    { Id : int\n      Firstname: string\n      Surname: string\n      Avatar : string }\n\n    static member Decoder =\n        Decode.object (fun get ->\n            { Id        = get.Required.Field \"id\" Decode.int\n              Firstname = get.Required.Field \"firstname\" Decode.string\n              Surname   = get.Required.Field \"surname\" Decode.string\n              Avatar    = get.Required.Field \"avatar\" Decode.string } : User)\n\n    static member Encoder user =\n        Encode.object [\n            \"id\", Encode.int user.Id\n            \"firstname\", Encode.string user.Firstname\n            \"surname\", Encode.string user.Surname\n            \"avatar\", Encode.string user.Avatar\n        ]\n\ntype Answer =\n    { Id : int\n      CreatedAt : DateTime\n      AuthorId : int\n      Content : string\n      Score : int }\n\n    static member Decoder =\n        Decode.object (fun get ->\n            { Id        = get.Required.Field \"id\" Decode.int\n              CreatedAt = get.Required.Field \"created_at\" Decode.datetime\n              AuthorId  = get.Required.Field \"author_id\" Decode.int\n              Content   = get.Required.Field \"content\" Decode.string\n              Score     = get.Required.Field \"score\" Decode.int } : Answer)\n\n    static member Encoder answer =\n        Encode.object [\n            \"id\", Encode.int answer.Id\n            \"created_at\", Encode.datetime answer.CreatedAt\n            \"author_id\", Encode.int answer.AuthorId\n            \"content\", Encode.string answer.Content\n            \"score\", Encode.int answer.Score\n        ]\n\ntype Question =\n    { Id : int\n      AuthorId : int\n      Title : string\n      Description : string\n      CreatedAt : DateTime\n      Answers : Answer [] }\n\n    static member Decoder =\n        Decode.object (fun get ->\n            { Id          = get.Required.Field \"id\" Decode.int\n              AuthorId    = get.Required.Field \"author_id\" Decode.int\n              Title       = get.Required.Field \"title\" Decode.string\n              Description = get.Required.Field \"description\" Decode.string\n              CreatedAt   = get.Required.Field \"created_at\" Decode.datetime\n              Answers     = get.Required.Field \"answers\" (Decode.array Answer.Decoder) } : Question)\n\n    static member Encoder question =\n        Encode.object [\n            \"id\", Encode.int question.Id\n            \"author_id\", Encode.int question.AuthorId\n            \"title\", Encode.string question.Title\n            \"description\", Encode.string question.Description\n            \"created_at\", Encode.datetime question.CreatedAt\n            \"answers\", Encode.array (question.Answers |> Array.map Answer.Encoder)\n        ]\n\ntype DatabaseData =\n    { Version : int\n      Questions : Question []\n      Users : User [] }\n\n    static member Decoder =\n        Decode.object (fun get ->\n            { Version   = get.Required.Field \"version\" Decode.int\n              Questions = get.Required.Field \"questions\" (Decode.array Question.Decoder)\n              Users     = get.Required.Field \"users\" (Decode.array User.Decoder) } : DatabaseData)\n\n    static member Encoder databaseData =\n        try\n            Encode.object [\n                \"version\", Encode.int databaseData.Version\n                \"questions\", Encode.array (databaseData.Questions |> Array.map Question.Encoder)\n                \"users\", Encode.array (databaseData.Users |> Array.map User.Encoder)\n            ]\n        // If the database is empty we received the object: {}\n        // We catch the error to gracefully init the database\n        with\n            | _ -> Encode.object []\n\n/// Database helpers\n\nlet adapterOptions = jsOptions<Lowdb.AdapterOptions>(fun o ->\n    o.serialize <- Some(DatabaseData.Encoder >> Encode.toString 0)\n\n    o.deserialize <- Some(fun (data:string) ->\n        match Decode.fromString DatabaseData.Decoder data with\n        | Ok databaseData -> databaseData\n        | Error msg -> failwith msg\n    )\n)\n\nlet mutable private dbInstance : Lowdb.Lowdb option = Option.None\n\ntype Database =\n    static member Lowdb\n        with get() : Lowdb.Lowdb =\n            if dbInstance.IsNone then\n                dbInstance <-\n                    Lowdb.LocalStorageAdapter(\"database\", adapterOptions)\n                    |> Lowdb.Lowdb\n                    |> Some\n\n            dbInstance.Value\n\n    static member Questions\n        with get() : Lowdb.Lowdb =\n            Database.Lowdb\n                .get(!^\"Questions\")\n\n    static member Users\n        with get() : Lowdb.Lowdb =\n            Database.Lowdb\n                .get(!^\"Users\")\n\n    static member GetUserById (userId: int) =\n        Database.Users\n            .find(createObj [ \"Id\" ==> userId])\n            .value()\n        |> function\n           | null -> None\n           | value -> unbox<User> value |> Some\n\n    static member Version\n        with get() : int =\n            Database.Lowdb\n                .get(!^\"Version\")\n                .value()\n\n    static member Init () =\n        Logger.debug \"Init database\"\n        try\n            Logger.debugfn \"Database.Version: %i\" Database.Version\n            Logger.debugfn \"CurrentVersion: %i\" CurrentVersion\n            if Database.Version <> CurrentVersion then\n                Logger.debug \"Migration detected\"\n                Database.Restore()\n        with\n            | _ ->\n                Logger.debug \"Failed to parse database from storage\"\n                Database.Restore()\n\n    static member Restore () =\n        Logger.debug \"Restore the database\"\n        localStorage.removeItem(\"database\")\n        dbInstance <- None\n        Database.Default()\n\n    static member Default () =\n        Database.Lowdb\n            .defaults(\n                { Version = CurrentVersion\n                  Questions =\n                    [| { Id = 0\n                         AuthorId = 1\n                         Title = \"What is the average wing speed of an unladen swallow?\"\n                         Description =\n                             \"\"\"\nHello, yesterday I saw a flight of swallows and was wondering what their **average wing speed** is?\n\nIf you know the answer please share it.\n                             \"\"\"\n                         Answers =\n                            [| { Id = 0\n                                 CreatedAt = DateTime.Parse \"2017-09-14T19:57:33.103Z\"\n                                 AuthorId = 0\n                                 Score = 2\n                                 Content =\n                                    \"\"\"\n> What do you mean, an African or European Swallow?\n>\n> Monty Python’s: The Holy Grail\n\nOk I must admit, I use google to search the question and found a post explaining the reference :).\n\nI thought you were asking it seriously, well done.\n                                    \"\"\" }\n                               { Id = 1\n                                 CreatedAt = DateTime.Parse \"2017-09-14T20:07:27.103Z\"\n                                 AuthorId = 2\n                                 Score = 1\n                                 Content =\n                                    \"\"\"\nMaxime,\n\nI believe you found [this blog post](http://www.saratoga.com/how-should-i-know/2013/07/what-is-the-average-air-speed-velocity-of-a-laden-swallow/).\n\nAnd so Robin, the conclusion of the post is:\n\n> In the end, it’s concluded that the airspeed velocity of a (European) unladen swallow is about 24 miles per hour or 11 meters per second.\n                                    \"\"\" }\n                            |]\n                         CreatedAt = DateTime.Parse \"2017-09-14T17:44:28.103Z\" }\n                       { Id = 1\n                         AuthorId = 0\n                         Title = \"Why did you create Fable?\"\n                         Description =\n                             \"\"\"\nHello Alfonso,\n\nI wanted to know why you created Fable. Did you always plan to use F#? Or were you thinking in others languages?\n                             \"\"\"\n                         Answers = [| |]\n                         CreatedAt = DateTime.Parse \"2017-09-12T09:27:28.103Z\" } |]\n                  Users =\n                    [| { Id = 0\n                         Firstname = \"Maxime\"\n                         Surname = \"Mangel\"\n                         Avatar = \"maxime_mangel.png\" }\n                       { Id = 1\n                         Firstname = \"Robin\"\n                         Surname = \"Munn\"\n                         Avatar = \"robin_munn.png\" }\n                       { Id = 2\n                         Firstname = \"Alfonso\"\n                         Surname = \"Garciacaro\"\n                         Avatar = \"alfonso_garciacaro.png\" }\n                       { Id = 3\n                         Firstname = \"Guest\"\n                         Surname = \"\"\n                         Avatar = \"guest.png\" }\n                          |]\n                }\n            ).write()\n        Logger.debug \"Database restored\"\n","module Question.Index.State\n\nopen Elmish\nopen Types\n\nlet init () =\n    Model.Empty, Cmd.OfFunc.result GetQuestions\n\nlet update msg (model: Model) =\n    match msg with\n    | GetQuestions ->\n        model, Cmd.OfPromise.either Rest.getQuestions () GetQuestionsResult (GetQuestionsRes.Error >> GetQuestionsResult)\n\n    | GetQuestionsResult result ->\n        match result with\n        | GetQuestionsRes.Success questions ->\n            { model with Questions = Some questions }, Cmd.none\n\n        | GetQuestionsRes.Error error ->\n            Logger.debugfn \"[Question.Index.State] Error when fetch questions:\\n %A\" error\n            model, Cmd.none\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Column =\n\n    type ISize =\n        | [<CompiledName(\"is-one-quarter\")>] IsOneQuarter\n        | [<CompiledName(\"is-one-third\")>] IsOneThird\n        | [<CompiledName(\"is-half\")>] IsHalf\n        | [<CompiledName(\"is-two-thirds\")>] IsTwoThirds\n        | [<CompiledName(\"is-three-quarters\")>] IsThreeQuarters\n        | [<CompiledName(\"is-1\")>] Is1\n        | [<CompiledName(\"is-2\")>] Is2\n        | [<CompiledName(\"is-3\")>] Is3\n        | [<CompiledName(\"is-4\")>] Is4\n        | [<CompiledName(\"is-5\")>] Is5\n        | [<CompiledName(\"is-6\")>] Is6\n        | [<CompiledName(\"is-7\")>] Is7\n        | [<CompiledName(\"is-8\")>] Is8\n        | [<CompiledName(\"is-9\")>] Is9\n        | [<CompiledName(\"is-10\")>] Is10\n        | [<CompiledName(\"is-11\")>] Is11\n        | [<CompiledName(\"is-12\")>] Is12\n        | [<CompiledName(\"is-narrow\")>] IsNarrow\n        | [<CompiledName(\"is-full\")>] IsFull\n        | [<CompiledName(\"is-one-fifth\")>] IsOneFifth\n        | [<CompiledName(\"is-two-fifths\")>] IsTwoFifths\n        | [<CompiledName(\"is-three-fifths\")>] IsThreeFifths\n        | [<CompiledName(\"is-four-fifths\")>] IsFourFifths\n\n    type Option =\n        /// Configure the width of the column. You can configure the display and size\n        /// Example: Column.Width (Column.Desktop, Column.Is6)\n        /// Becomes: `is-6-desktop`\n        | Width of Screen * ISize\n        /// Configure the offset of the column. You can configure the display and offset size\n        /// Example: Column.Offset (Column.Desktop, Column.Is6)\n        /// Becomes: `is-offset-6-desktop`\n        | Offset of Screen * ISize\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    let private suffix = function\n        | Screen.All -> \"\"\n        | Screen.Desktop -> \"-desktop\"\n        | Screen.Tablet -> \"-tablet\"\n        | Screen.Mobile -> \"-mobile\"\n        | Screen.WideScreen -> \"-widescreen\"\n        | Screen.FullHD -> \"-fullhd\"\n        | Screen.Touch -> \"-touch\"\n\n    let internal ofWidth (screen, size) =\n        Reflection.getCaseName size + suffix screen\n\n    let internal ofOffset (screen, offset) =\n        let className = Reflection.getCaseName offset\n        \"is-offset-\" + className.[3..] + suffix screen\n\n    /// Generate <div class=\"column\"></div>\n    let column (options : Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Width (screen, width) ->\n                ofWidth (screen, width) |> result.AddClass\n            | Offset (screen, offset) ->\n                ofOffset (screen, offset) |> result.AddClass\n            | CustomClass customClass ->\n                result.AddClass customClass\n            | Props props ->\n                result.AddProps props\n            | Modifiers modifiers ->\n                result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"column\")\n            .ToReactElement(div, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Textarea =\n\n    type Option =\n        | Size of ISize\n        /// Add `is-fullwidth` class\n        | [<CompiledName(\"is-fullwidth\")>] IsFullWidth\n        /// Add `is-inline` class\n        | [<CompiledName(\"is-inline\")>] IsInline\n        /// Add `is-loading` class if true\n        | [<CompiledName(\"is-loading\")>] IsLoading of bool\n        /// Add `is-focused` class\n        | [<CompiledName(\"is-focused\")>] IsFocused of bool\n        /// Add `is-active` class if true\n        | [<CompiledName(\"is-active\")>] IsActive of bool\n        /// Add `IsReadOnly` HTMLAttr\n        | IsReadOnly of bool\n        | Color of IColor\n        | Id of string\n        /// Add `disabled` HTMLAttr if true\n        | Disabled of bool\n        /// Set `Value` HTMLAttr\n        | Value of string\n        /// Set `DefaultValue` HTMLAttr\n        | DefaultValue of string\n        /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n        | ValueOrDefault of string\n        /// Set `Placeholder` HTMLAttr\n        | Placeholder of string\n        | Props of IHTMLProp list\n        | OnChange of (Event -> unit)\n        | Ref of (Element->unit)\n        | CustomClass of string\n        /// Add `has-fixed-size` class\n        | [<CompiledName(\"has-fixed-size\")>] HasFixedSize\n        | Modifiers of Modifier.IModifier list\n\n    open Fable.Core.JsInterop\n\n    /// Generate <textarea class=\"textarea\"></textarea>\n    let textarea options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Size size -> ofSize size |> result.AddClass\n            | Color color -> ofColor color |> result.AddClass\n            | IsFullWidth\n            | HasFixedSize\n            | IsInline -> result.AddCaseName option\n            | IsLoading state\n            | IsFocused state\n            | IsActive state -> if state then result.AddCaseName option else result\n            | Id id -> Props.Id id |> result.AddProp\n            | Disabled disabled -> Props.Disabled disabled |> result.AddProp\n            | IsReadOnly state -> Props.ReadOnly state |> result.AddProp\n            | Value value -> Props.Value value |> result.AddProp\n            | DefaultValue defaultValue -> Props.DefaultValue defaultValue |> result.AddProp\n            | ValueOrDefault valueOrDefault ->\n                Props.Ref <| (fun e ->\n                    if e |> isNull |> not\n                        && !!e?value <> valueOrDefault then\n                        e?value <- valueOrDefault\n                ) |> result.AddProp\n            | Placeholder placeholder -> Props.Placeholder placeholder |> result.AddProp\n            | OnChange cb -> Props.OnChange cb |> result.AddProp\n            | Ref ref -> Props.Ref ref |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"textarea\").ToReactElement(textarea, children)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Level =\n\n    module Level =\n\n        type Option =\n            | Props of IHTMLProp list\n            /// Add `is-mobile` class\n            | [<CompiledName(\"is-mobile\")>] IsMobile\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    module Item =\n\n        type Option =\n            | Props of IHTMLProp list\n            /// Add `has-text-centered` class\n            | [<CompiledName(\"has-text-centered\")>] HasTextCentered\n            | CustomClass of string\n            | Modifiers of Modifier.IModifier list\n\n    /// Generate <nav class=\"level\"></nav>\n    let level (options : Level.Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Level.Option.IsMobile -> result.AddCaseName option\n            | Level.Props props -> result.AddProps props\n            | Level.CustomClass customClass -> result.AddClass customClass\n            | Level.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"level\").ToReactElement(nav, children)\n\n    /// Generate <div class=\"level-left\"></div>\n    let left (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"level-left\").ToReactElement(div, children)\n\n    /// Generate <div class=\"level-right\"></div>\n    let right (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"level-right\").ToReactElement(div, children)\n\n    /// Generate <div class=\"level-item\"></div>\n    let item (options : Item.Option list) children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Item.HasTextCentered -> result.AddCaseName option\n            | Item.Props props -> result.AddProps props\n            | Item.CustomClass customClass -> result.AddClass customClass\n            | Item.Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"level-item\").ToReactElement(div, children)\n\n    /// Generate <p class=\"heading\"></p>\n    let heading (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"heading\").ToReactElement(p, children)\n\n    /// Generate <p class=\"title\"></p>\n    let title (options: GenericOption list) children =\n        GenericOptions.Parse(options, parseOptions, \"title\").ToReactElement(p, children)\n","module Question.Create.State\n\nopen Elmish\nopen Types\nopen System\n\nlet init _ : Model * Cmd<Msg> =\n    Model.Empty, Cmd.none\n\nlet requiredField (value : string) =\n    if String.IsNullOrWhiteSpace value then\n        \"This field is required\"\n    else\n        \"\"\n\nlet validateModel model =\n    let newModel =\n        { model with TitleError = requiredField model.Title\n                     ContentError = requiredField model.Content }\n\n    let hasError =\n        // Title is required\n        String.IsNullOrWhiteSpace model.Title\n        // Content is required\n        || String.IsNullOrWhiteSpace model.Content\n\n    newModel, hasError\n\n\nlet update (user : Database.User) msg (model: Model) =\n    match msg with\n    | ChangeTitle newTitle ->\n        { model with Title = newTitle\n                     TitleError = requiredField newTitle }, Cmd.none\n\n    | ChangeContent newContent ->\n        { model with Content = newContent\n                     ContentError = requiredField newContent }, Cmd.none\n\n    | Submit ->\n        match validateModel model with\n        | newModel, true ->\n            newModel, Cmd.none\n\n        | newModel, false ->\n            { newModel with IsWaitingServer = true }, Cmd.OfPromise.either Rest.createQuestion\n                                 (user.Id, model.Title, model.Content)\n                                 (CreateQuestionRes.Success >> CreateQuestionResult)\n                                 (CreateQuestionRes.Error >> CreateQuestionResult)\n\n    | CreateQuestionResult (CreateQuestionRes.Success question) ->\n        { model with IsWaitingServer = false }, Router.newUrl (Router.QuestionPage.Show question.Id |> Router.Question)\n\n    | CreateQuestionResult (CreateQuestionRes.Error error) ->\n        Logger.debugfn \"[Question.Show.State] Error when fetching details: \\n %A\" error\n        { model with IsWaitingServer = false }, Cmd.none\n","module Question.Show.Answer.View\n\nopen Types\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.FontAwesome\nopen Fable.FontAwesome.Free\nopen System\n\nlet private voteArea score =\n    let icon =\n        if score > 0 then\n            Fa.Regular.ThumbsUp\n        else\n            Fa.Regular.ThumbsDown\n\n    let iterationCount =\n        Math.Min(5, Math.Abs score - 1)\n\n    span [ ]\n        [ for i = 0 to iterationCount do\n            yield Icon.icon [ ]\n                    [ Fa.i [ icon ] [ ] ] ]\n\nlet root model dispatch =\n    Media.media [ ]\n        [ Media.left [ ]\n            [ Image.image [ Image.Is64x64 ]\n                [ img [ Src (\"avatars/\" + model.Author.Avatar) ] ] ]\n          Media.content [ ]\n            [ Render.contentFromMarkdown [ ] model.Answer.Content\n              Level.level [ ]\n                [ Level.right [ CustomClass \"vote-area\" ]\n                    [ Button.button [ Button.IsLoading model.IsLoading\n                                      Button.Size IsSmall\n                                      Button.Color IsDanger\n                                      Button.OnClick (fun _ -> dispatch VoteDown) ]\n                        [ str \"-1\" ]\n                      Button.button [ Button.IsLoading model.IsLoading\n                                      Button.Size IsSmall\n                                      Button.Color IsSuccess\n                                      Button.OnClick (fun _ -> dispatch VoteUp) ]\n                        [ str \"+1\" ]\n                      voteArea model.Answer.Score\n                      Help.help [ Help.Color IsDanger ]\n                        [ str model.Error ] ]\n                  Level.left [ ]\n                    [ Level.item [ ]\n                        [ Help.help [ ]\n                            [ str (sprintf \"Answer by %s %s, %s\"\n                                            model.Author.Firstname\n                                            model.Author.Surname\n                                            (model.Answer.CreatedAt.ToString(\"yyyy-MM-dd HH:mm:ss\"))) ] ] ] ] ] ]\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\nopen Browser.Types\n\n[<RequireQualifiedAccess>]\nmodule Input =\n\n    module Classes =\n        let [<Literal>] Container = \"input\"\n        module State =\n            let [<Literal>] IsFocused = \"is-focused\"\n            let [<Literal>] IsActive = \"is-active\"\n            let [<Literal>] IsHovered = \"is-hovered\"\n            let [<Literal>] IsLoading = \"is-loading\"\n            let [<Literal>] IsStatic = \"is-static\"\n        module Styles =\n            let [<Literal>] IsRounded = \"is-rounded\"\n        module Size =\n            let [<Literal>] IsSmall = \"is-small\"\n            let [<Literal>] IsMedium = \"is-medium\"\n            let [<Literal>] IsLarge = \"is-large\"\n            let [<Literal>] IsFullwidth = \"is-fullwidth\"\n            let [<Literal>] IsInline = \"is-inline\"\n\n    type IInputType =\n        | Text\n        | Password\n        | DatetimeLocal\n        | Date\n        | Month\n        | Time\n        | Week\n        | Number\n        | Email\n        | Url\n        | Search\n        | Tel\n        | ColorType\n\n    type Option =\n        | Size of ISize\n        /// Set `Type` HTMLAttr\n        /// Don't use if you used one of the helpers like: `Input.password`\n        | Type of IInputType\n        | Color of IColor\n        /// Set `Id` HTMLAttr\n        | Id of string\n        /// Add `disabled` HTMLAttr if true\n        | Disabled of bool\n        /// Set `IsReadOnly` HTMLAttr\n        | IsReadOnly of bool\n        /// Add `is-static` class if true\n        | [<CompiledName(\"is-static\")>] IsStatic of bool\n        /// Add `is-rounded` class\n        | [<CompiledName(\"is-rounded\")>] IsRounded\n        /// Set `Value` HTMLAttr\n        | Value of string\n        | Key of string\n        /// Set `DefaultValue` HTMLAttr\n        | DefaultValue of string\n        /// `Ref` callback that sets the value of an input textbox after DOM element is created.\n        | ValueOrDefault of string\n        /// Set `Placeholder` HTMLAttr\n        | Placeholder of string\n        | OnChange of (Event -> unit)\n        | Ref of (Element->unit)\n        | Props of IHTMLProp list\n        | CustomClass of string\n        | Modifiers of Modifier.IModifier list\n\n    let private ofType (typ : IInputType) =\n        match typ with\n        | Text -> \"text\"\n        | Password -> \"password\"\n        | DatetimeLocal -> \"datetime-local\"\n        | Date -> \"date\"\n        | Month -> \"month\"\n        | Time -> \"time\"\n        | Week -> \"week\"\n        | Number -> \"number\"\n        | Email -> \"email\"\n        | Url -> \"url\"\n        | Search -> \"search\"\n        | Tel -> \"tel\"\n        | IInputType.ColorType -> \"color\"\n\n    open Fable.Core.JsInterop\n\n    /// Generate <input class=\"input\" />\n    let input (options : Option list) =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | IsStatic state -> if state then result.AddCaseName option else result\n            | IsRounded -> result.AddCaseName option\n            | Size size -> ofSize size |> result.AddClass\n            | Color color -> ofColor color |> result.AddClass\n            | Type type' -> Props.Type (ofType type') |> result.AddProp\n            | Id id -> Props.Id id |> result.AddProp\n            | Disabled disabled -> Props.Disabled disabled |> result.AddProp\n            | IsReadOnly state -> Props.ReadOnly state |> result.AddProp\n            | Value value -> Props.Value value |> result.AddProp\n            | DefaultValue defaultValue -> Props.DefaultValue defaultValue |> result.AddProp\n            | ValueOrDefault valueOrDefault ->\n                Props.Ref <| (fun e ->\n                    if e |> isNull |> not\n                        && !!e?value <> valueOrDefault then\n                        e?value <- valueOrDefault\n                ) |> result.AddProp\n            | Placeholder placeholder -> Props.Placeholder placeholder |> result.AddProp\n            | OnChange cb -> Props.OnChange cb |> result.AddProp\n            | Ref ref -> Props.Ref ref |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n            | Key k -> Props.Prop.Key k |> result.AddProp\n\n        GenericOptions.Parse(options, parseOptions, \"input\").ToReactElement(input)\n\n    /// Generate <input type=\"text\" class=\"input\" />\n    let inline text options = input (Type Text :: options)\n    /// Generate <input type=\"password\" class=\"input\" />\n    let inline password options = input (Type Password :: options)\n    /// Generate <input type=\"datetime-local\" class=\"input\" />\n    let inline datetimeLocal options = input (Type DatetimeLocal :: options)\n    /// Generate <input type=\"date\" class=\"input\" />\n    let inline date options = input (Type Date :: options)\n    /// Generate <input type=\"month\" class=\"input\" />\n    let inline month options = input (Type Month :: options)\n    /// Generate <input type=\"time\" class=\"input\" />\n    let inline time options = input (Type Time :: options)\n    /// Generate <input type=\"week\" class=\"input\" />\n    let inline week options = input (Type Week :: options)\n    /// Generate <input type=\"number\" class=\"input\" />\n    let inline number options = input (Type Number :: options)\n    /// Generate <input type=\"email\" class=\"input\" />\n    let inline email options = input (Type Email :: options)\n    /// Generate <input type=\"url\" class=\"input\" />\n    let inline url options = input (Type Url :: options)\n    /// Generate <input type=\"search\" class=\"input\" />\n    let inline search options = input (Type Search :: options)\n    /// Generate <input type=\"tel\" class=\"input\" />\n    let inline tel options = input (Type Tel :: options)\n    /// Generate <input type=\"color\" class=\"input\" />\n    let inline color options = input (Type IInputType.ColorType :: options)\n","namespace Fulma\n\nopen Fulma\nopen Fable.React\nopen Fable.React.Props\n\n[<RequireQualifiedAccess>]\nmodule Label =\n\n    type Option =\n        | Size of ISize\n        /// Set `For` HTMLAttr\n        | For of string\n        | CustomClass of string\n        | Props of IHTMLProp list\n        | Modifiers of Modifier.IModifier list\n\n    /// Generate <label class=\"label\"></label>\n    let label options children =\n        let parseOptions (result : GenericOptions) option =\n            match option with\n            | Size size -> ofSize size |> result.AddClass\n            | For htmlFor -> HtmlFor htmlFor |> result.AddProp\n            | Props props -> result.AddProps props\n            | CustomClass customClass -> result.AddClass customClass\n            | Modifiers modifiers -> result.AddModifiers modifiers\n\n        GenericOptions.Parse(options, parseOptions, \"label\").ToReactElement(label, children)\n","namespace Elmish.React\n\nopen Fable.React\nopen Elmish\n\ntype LazyProps<'model> = {\n    model:'model\n    render:unit->ReactElement\n    equal:'model->'model->bool\n}\n\nmodule Components =\n    type LazyView<'model>(props) =\n        inherit Component<LazyProps<'model>,obj>(props)\n\n        override this.shouldComponentUpdate(nextProps, _nextState) =\n            not <| this.props.equal this.props.model nextProps.model\n\n        override this.render () =\n            this.props.render ()\n\n[<AutoOpen>]\nmodule Common =\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model\n    /// state: new state to render\n    let lazyViewWith (equal:'model->'model->bool)\n                     (view:'model->ReactElement)\n                     (state:'model) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new states\n    /// view: function to render the model using the dispatch\n    /// state: new state to render\n    /// dispatch: dispatch function\n    let lazyView2With (equal:'model->'model->bool)\n                      (view:'model->'msg Dispatch->ReactElement)\n                      (state:'model)\n                      (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state dispatch\n              equal = equal\n              model = state }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// equal: function to compare the previous and the new model (a tuple of two states)\n    /// view: function to render the model using the dispatch\n    /// state1: new state to render\n    /// state2: new state to render\n    /// dispatch: dispatch function\n    let lazyView3With (equal:_->_->bool) (view:_->_->_->ReactElement) state1 state2 (dispatch:'msg Dispatch) =\n        ofType<Components.LazyView<_>,_,_>\n            { render = fun () -> view state1 state2 dispatch\n              equal = equal\n              model = (state1,state2) }\n            []\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of model to render the view\n    let lazyView (view:'model->ReactElement) =\n        lazyViewWith (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of two arguments to render the model using the dispatch\n    let lazyView2 (view:'model->'msg Dispatch->ReactElement) =\n        lazyView2With (=) view\n\n    /// Avoid rendering the view unless the model has changed.\n    /// view: function of three arguments to render the model using the dispatch\n    let lazyView3 (view:_->_->_->ReactElement) =\n        lazyView3With (=) view\n\n\n","module Question.Create.View\n\nopen Types\nopen Fable.React\nopen Fable.React.Props\nopen Fulma\nopen Fable.Core.JsInterop\n\n\nlet private form (user : Database.User) (model : Model) dispatch =\n    Media.media [ ]\n        [ Media.left [ ]\n            [ Image.image [ Image.Is64x64 ]\n                [ img [ Src (\"avatars/\" + user.Avatar) ] ] ]\n          Media.content [ ]\n            [ form [ ]\n                [ Field.div [ ]\n                    [ Label.label [ ]\n                        [ str \"Title\" ]\n                      Control.div [ Control.IsLoading model.IsWaitingServer ]\n                        [ Input.text [ Input.Placeholder \"Ex: Who created F#?\"\n                                       Input.Value model.Title\n                                       Input.Disabled model.IsWaitingServer\n                                       Input.Props [ OnChange (fun ev -> !!ev.target?value |> ChangeTitle |> dispatch ) ] ] ]\n                      Help.help [ Help.Color IsDanger ]\n                        [ str model.TitleError ] ]\n                  Field.div [ ]\n                    [ Label.label [ ]\n                        [ str \"Description\" ]\n                      Control.div [ Control.IsLoading model.IsWaitingServer ]\n                        [ Textarea.textarea [ Textarea.Value model.Content\n                                              Textarea.Disabled model.IsWaitingServer\n                                              Textarea.Props [ OnChange (fun ev -> !!ev.target?value |> ChangeContent |> dispatch ) ] ]\n                            [ ] ]\n                      Help.help [ Help.Color IsDanger ]\n                        [ str model.ContentError ] ] ]\n              br [ ]\n              Level.level [ ]\n                [ Level.left [ ]\n                    [ Level.item [ ]\n                        [ Button.button [ Button.Color IsPrimary\n                                          Button.OnClick (fun _ -> dispatch Submit)\n                                          Button.Disabled model.IsWaitingServer\n                                          ]\n                                        [ str \"Submit\" ] ] ]\n                  Level.item [ Level.Item.HasTextCentered ]\n                    [ Help.help [ ]\n                        [ str \"You can use markdown to format your description\" ] ] ] ] ]\n\nlet root user model dispatch =\n    Container.container [ ]\n        [ Section.section [ ]\n            [ Heading.h3 [ ]\n                [ str \"Ask a new question\" ] ]\n          form user model dispatch\n        ]\n","module Question.Show.Answer.Rest\n\nopen Database\nopen Fable.Core.JsInterop\n\nlet voteUp (questionId, answerId) =\n    promise {\n        let answer =\n            Database.Questions\n                .find(createObj [ \"Id\" ==> questionId ])\n                .get(!^\"Answers\")\n                .find(createObj [ \"Id\" ==> answerId ])\n\n        let newScore =\n            answer.value()\n            |> unbox<Answer>\n            |> (fun answer -> answer.Score + 1)\n\n        answer\n            .assign(createObj [ \"Score\" ==> newScore])\n            .write()\n\n        return newScore\n    }\n\nlet voteDown (questionId, answerId) =\n    promise {\n        let answer =\n            Database.Questions\n                .find(createObj [ \"Id\" ==> questionId ])\n                .get(!^\"Answers\")\n                .find(createObj [ \"Id\" ==> answerId ])\n\n        let newScore =\n            answer.value()\n            |> unbox<Answer>\n            |> (fun answer -> answer.Score - 1)\n\n        answer\n            .assign(createObj [ \"Score\" ==> newScore])\n            .write()\n\n        return newScore\n    }\n","module Question.Show.Rest\n\nopen Types\nopen Database\nopen Fable.Core.JsInterop\nopen System\n\nlet assiocateAuthor (answer : Database.Answer) =\n    Database.GetUserById answer.AuthorId\n    |> function\n       | None -> failwith \"Author of the answer unkown\"\n       | Some user -> answer, user\n\nlet getDetails (id : int) =\n    promise {\n\n        let data =\n            Database.Questions\n                .find(createObj [ \"Id\" ==> id])\n                .value()\n            |> unbox<Database.Question>\n            |> (fun question ->\n                Database.GetUserById question.AuthorId\n                |> function\n                   | None -> failwith \"Author of the question unkown\"\n                   | Some user ->\n                        { Id = question.Id\n                          Author = user\n                          Title = question.Title\n                          Description = question.Description\n                          CreatedAt = question.CreatedAt }, (Array.map assiocateAuthor question.Answers)\n            )\n\n        do! Promise.sleep 500\n\n        return data\n    }\n\nlet createAnswer (questionId : int, userId : int, content : string) =\n    promise {\n\n        let nextId =\n            Database.Questions\n                .find(createObj [ \"Id\" ==> questionId])\n                .get(!^\"Answers\")\n                .size()\n                .value()\n            |> unbox<int>\n            |> (fun x -> x + 1)\n\n        let answer =\n            { Id = nextId\n              CreatedAt = DateTime.Now\n              AuthorId = userId\n              Content = content\n              Score = 0 }\n\n        // Add the answer to the question\n        Database.Questions\n            .find(createObj [ \"Id\" ==> questionId])\n            .get(!^\"Answers\")\n            .push(answer)\n            .write()\n\n        do! Promise.sleep 500\n\n        return assiocateAuthor answer\n    }\n","module Question.Show.State\n\nopen Elmish\nopen Types\n\nlet init id =\n    Model.Empty id , Cmd.OfFunc.result (GetDetails id)\n\nlet update (user : Database.User) msg (model: Model) =\n    match msg with\n    | GetDetails id ->\n        model, Cmd.OfPromise.either Rest.getDetails id (GetDetailsRes.Success >> GetDetailsResult) (GetDetailsRes.Error >> GetDetailsResult)\n\n    | GetDetailsResult result ->\n        match result with\n        | GetDetailsRes.Success (question, answers) ->\n            // We use mutable here because it's easier to split the model and cmd, also performance isn't a problem here\n            let mutable answersModel = []\n            let mutable answersCmd = []\n\n            for (answer, author) in answers do\n                let (subModel, subCmd) = Answer.State.init question.Id answer author\n                answersModel <- answersModel @ [subModel]\n                answersCmd <- answersCmd @ [Cmd.map AnswerMsg subCmd]\n\n            { model with Question = Some question\n                         Answers = answersModel}, Cmd.batch answersCmd\n\n        | GetDetailsRes.Error error ->\n            Logger.debugfn \"[Question.Show.State] Error when fetching details: \\n %A\" error\n            { model with Question = None }, Cmd.none\n\n    | ChangeReply value ->\n        { model with Reply = value }, Cmd.none\n\n    | Submit ->\n        if model.IsWaitingReply then\n            model, Cmd.none\n        else\n            if model.Reply <> \"\" then\n                { model with IsWaitingReply = true\n                             Error = \"\" }, Cmd.OfPromise.either\n                                                Rest.createAnswer\n                                                (model.QuestionId, user.Id, model.Reply)\n                                                (CreateAnswerRes.Success >> CreateAnswerResult)\n                                                (CreateAnswerRes.Error >> CreateAnswerResult)\n            else\n                { model with Error = \"Your answer can't be empty\" }, Cmd.none\n\n    | CreateAnswerResult result ->\n        match result with\n        | CreateAnswerRes.Error error ->\n            Logger.debugfn \"[Question.Show.State] Error when fetching details: \\n %A\" error\n            { model with IsWaitingReply = false }, Cmd.none\n\n        | CreateAnswerRes.Success (answer, author) ->\n            let (answerModel, answerCmd) = Answer.State.init model.QuestionId answer author\n            { model with Reply = \"\"\n                         Error = \"\"\n                         IsWaitingReply = false\n                         Answers = model.Answers @ [answerModel] }, Cmd.map AnswerMsg answerCmd\n\n    | AnswerMsg (rank,  msg) ->\n        let mutable answersModel = []\n        let mutable answersCmd = []\n\n        model.Answers\n        |> List.iteri(fun index answer ->\n            if index = rank then\n                let (subModel, subCmd) = Answer.State.update msg answer\n                answersModel <- answersModel @ [subModel]\n                answersCmd <- answersCmd @ [Cmd.map (fun x -> AnswerMsg (index, x)) subCmd]\n            else\n                answersModel <- answersModel @ [answer]\n        )\n\n        { model with Answers = answersModel }, Cmd.batch answersCmd\n","module Question.Dispatcher.State\n\nopen Elmish\nopen Types\nopen Fable.Core\n\nlet init (questionPage: Router.QuestionPage) =\n    // Store current page\n    let model = { Model.Empty with CurrentPage = questionPage }\n    // Store model depending on the current page\n    match questionPage with\n    | Router.QuestionPage.Index ->\n        let (subModel, subCmd) = Question.Index.State.init ()\n        { model with IndexModel = Some subModel }, Cmd.map IndexMsg subCmd\n\n    | Router.QuestionPage.Show id ->\n        let (subModel, subCmd) = Question.Show.State.init id\n        { model with ShowModel = Some subModel }, Cmd.map ShowMsg subCmd\n\n    | Router.QuestionPage.Create ->\n        let (subModel, subCmd) = Question.Create.State.init ()\n        { model with CreateModel = Some subModel }, Cmd.map CreateMsg subCmd\n\n\nlet update user msg (model: Model) =\n    match msg, model with\n    | IndexMsg msg, { IndexModel = Some extractedModel } ->\n        let (subModel, subCmd) = Question.Index.State.update msg extractedModel\n        { model with IndexModel = Some subModel }, Cmd.map IndexMsg subCmd\n\n    | ShowMsg msg, { ShowModel = Some extractedModel } ->\n        let (subModel, subCmd) = Question.Show.State.update user msg extractedModel\n        { model with ShowModel = Some subModel }, Cmd.map ShowMsg subCmd\n\n    | CreateMsg msg, { CreateModel = Some extractedModel } ->\n        let (subModel, subCmd) = Question.Create.State.update user msg extractedModel\n        { model with CreateModel = Some subModel }, Cmd.map CreateMsg subCmd\n\n    | _ ->\n        JS.console.log(\"[Question.Dispatcher.State] Discarded message\")\n        model, Cmd.none\n","module Question.Create.Types\n\ntype Model =\n    { Title : string\n      Content : string\n      TitleError : string\n      ContentError : string\n      IsWaitingServer : bool }\n\n    static member Empty =\n        { Title = \"\"\n          Content = \"\"\n          TitleError = \"\"\n          ContentError = \"\"\n          IsWaitingServer = false }\n\ntype CreateQuestionRes =\n    | Success of Question\n    | Error of exn\n\ntype Msg =\n    | ChangeTitle of string\n    | ChangeContent of string\n    | Submit\n    | CreateQuestionResult of CreateQuestionRes\n","module App.State\n\nopen Fable.Core\nopen Browser\nopen Elmish\nopen Types\n\n\nlet urlUpdate (result: Option<Router.Page>) model =\n    match result with\n    | None ->\n\n        JS.console.error(\"Error parsing url: \" + window.location.href)\n        model, Router.modifyUrl model.CurrentPage\n\n    | Some page ->\n        let model = { model with CurrentPage = page }\n        match page with\n        | Router.Question questionPage ->\n            let (subModel, subCmd) = Question.Dispatcher.State.init questionPage\n            { model with QuestionDispatcher = Some subModel }, Cmd.map QuestionDispatcherMsg subCmd\n        | Router.Home ->\n            let (subModel, subCmd) = Question.Dispatcher.State.init Router.QuestionPage.Index\n            { model with QuestionDispatcher = Some subModel }, Cmd.map QuestionDispatcherMsg subCmd\n        | Router.BeerScore ->\n            let (subModel, subCmd) = Question.Dispatcher.State.init Router.QuestionPage.Index\n            { model with QuestionDispatcher = Some subModel }, Cmd.map QuestionDispatcherMsg subCmd\n\nlet init result =\n    urlUpdate result Model.Empty\n\nlet update msg model =\n    match (msg, model) with\n    | (QuestionDispatcherMsg msg, { QuestionDispatcher = Some extractedModel }) ->\n        let (subModel, subCmd) = Question.Dispatcher.State.update model.Session msg extractedModel\n        { model with QuestionDispatcher = Some subModel }, Cmd.map QuestionDispatcherMsg subCmd\n\n    | (QuestionDispatcherMsg capturedMsg, _) ->\n        JS.console.log(\"[App.State] Discarded message\")\n        printfn \"%A\" capturedMsg\n        model, Cmd.none\n\n    | (ResetDatabase, _) ->\n        Database.Restore()\n        let redirect =\n            match model.CurrentPage with\n            | Router.Question Router.QuestionPage.Index ->\n                Router.Home\n            | _ ->\n                Router.QuestionPage.Index\n                |> Router.Question\n            |> Router.newUrl\n\n        model, redirect\n\n    | (ToggleBurger, _) ->\n        { model with IsBurgerOpen = not model.IsBurgerOpen }, Cmd.none\n","module App.View\n\nopen Elmish\nopen Fable.React\nopen Fable.React.Props\nopen State\nopen Types\nopen Fulma\nopen Fable.FontAwesome\nopen Fable.FontAwesome.Free\n\nlet private navbarEnd =\n    Navbar.End.div [ ]\n        [ Navbar.Item.div [ ]\n            [ Field.div [ Field.IsGrouped ]\n                [ Control.p [ ]\n                    [ Button.a [ Button.Props [ Href \"https://github.com/MangelMaxime/fulma-demo\" ] ]\n                        [ Icon.icon [ ]\n                            [ Fa.i [ Fa.Brand.Github ] [ ] ]\n                          span [ ] [ str \"Source\" ] ] ] ] ] ]\n\nlet private navbarStart dispatch =\n    Navbar.Start.div [ ]\n        [ Navbar.Item.a [ Navbar.Item.Props [ OnClick (fun _ ->\n                                                        Router.QuestionPage.Index\n                                                        |> Router.Question\n                                                        |> Router.modifyLocation) ] ]\n            [ str \"Home\" ]\n          Navbar.Item.a [ Navbar.Item.Props [ OnClick (fun _ ->\n                                                        Router.BeerScore\n                                                        |> Router.modifyLocation) ] ]\n            [ str \"Beer score\" ]\n          Navbar.Item.div [ Navbar.Item.HasDropdown\n                            Navbar.Item.IsHoverable ]\n            [ Navbar.Link.div [ ]\n                [ str \"Options\" ]\n              Navbar.Dropdown.div [ ]\n                [ Navbar.Item.a [ Navbar.Item.Props [ OnClick (fun _ -> dispatch ResetDatabase)] ]\n                    [ str \"Reset demo\" ] ] ] ]\n\nlet private navbarView isBurgerOpen dispatch =\n    div [ ClassName \"navbar-bg\" ]\n        [ Container.container [ ]\n            [ Navbar.navbar [ Navbar.CustomClass \"is-primary\" ]\n                [ Navbar.Brand.div [ ]\n                    [ Navbar.Item.a [ Navbar.Item.Props [ Href \"#\" ] ]\n                        [ Image.image [ Image.Is32x32 ]\n                            [ img [ Src \"assets/mini_logo.svg\" ] ]\n                          Heading.p [ Heading.Is4 ]\n                            [ str \"Fulma-demo\" ] ]\n                      // Icon display only on mobile\n                      Navbar.Item.a [ Navbar.Item.Props [ Href \"https://github.com/MangelMaxime/fulma-demo\" ]\n                                      Navbar.Item.CustomClass \"is-hidden-desktop\" ]\n                                    [ Icon.icon [ ]\n                                        [ Fa.i [ Fa.Brand.Github\n                                                 Fa.Size Fa.FaLarge ] [ ] ] ]\n                      // Make sure to have the navbar burger as the last child of the brand\n                      Navbar.burger [ Fulma.Common.CustomClass (if isBurgerOpen then \"is-active\" else \"\")\n                                      Fulma.Common.Props [\n                                        OnClick (fun _ -> dispatch ToggleBurger) ] ]\n                        [ span [ ] [ ]\n                          span [ ] [ ]\n                          span [ ] [ ] ] ]\n                  Navbar.menu [ Navbar.Menu.IsActive isBurgerOpen ]\n                    [ navbarStart dispatch\n                      navbarEnd ] ] ] ]\n\nlet private renderPage model dispatch =\n    match model with\n    | { CurrentPage = Router.Question _\n        QuestionDispatcher = Some extractedModel } ->\n        Question.Dispatcher.View.root model.Session extractedModel (QuestionDispatcherMsg >> dispatch)\n    | { CurrentPage = Router.BeerScore } ->\n        BeerScore.View.root 1 2 3\n    | _ ->\n        Render.pageNotFound\n\nlet private root model dispatch =\n    div [ ]\n        [ navbarView model.IsBurgerOpen dispatch\n          renderPage model dispatch ]\n\n\nopen Elmish.Debug\nopen Elmish.Navigation\nopen Elmish.UrlParser\nopen Elmish.HMR\n\n// Init the first datas into the database\nDatabase.Init()\n\nProgram.mkProgram init update root\n|> Program.toNavigable (parseHash Router.pageParser) urlUpdate\n#if DEBUG\n|> Program.withConsoleTrace\n#endif\n|> Program.withReactSynchronous \"elmish-app\"\n#if DEBUG\n|> Program.withDebugger\n#endif\n|> Program.run\n"],"sourceRoot":""}